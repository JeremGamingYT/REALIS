### YamlMime:ManagedReference
items:
- uid: GTA.Blip
  commentId: T:GTA.Blip
  id: Blip
  parent: GTA
  children:
  - GTA.Blip.#ctor(System.Int32)
  - GTA.Blip.Alpha
  - GTA.Blip.CategoryType
  - GTA.Blip.Color
  - GTA.Blip.Delete
  - GTA.Blip.DisplayNameHash
  - GTA.Blip.DisplayType
  - GTA.Blip.Entity
  - GTA.Blip.Equals(System.Object)
  - GTA.Blip.Exists
  - GTA.Blip.FlashInterval
  - GTA.Blip.FlashTimeLeft
  - GTA.Blip.GetAppropriateName
  - GTA.Blip.GetHashCode
  - GTA.Blip.IsFlashing
  - GTA.Blip.IsFriendly
  - GTA.Blip.IsHiddenOnLegend
  - GTA.Blip.IsOnMinimap
  - GTA.Blip.IsShortRange
  - GTA.Blip.MemoryAddress
  - GTA.Blip.Name
  - GTA.Blip.NumberLabel
  - GTA.Blip.Position
  - GTA.Blip.Priority
  - GTA.Blip.RemoveNumberLabel
  - GTA.Blip.ResetName
  - GTA.Blip.Rotation
  - GTA.Blip.RotationFloat
  - GTA.Blip.Scale
  - GTA.Blip.ScaleX
  - GTA.Blip.ScaleY
  - GTA.Blip.SecondaryColor
  - GTA.Blip.ShowRoute
  - GTA.Blip.ShowsCrewIndicator
  - GTA.Blip.ShowsDollarSign
  - GTA.Blip.ShowsFriendIndicator
  - GTA.Blip.ShowsHeadingIndicator
  - GTA.Blip.ShowsOutlineIndicator
  - GTA.Blip.Sprite
  - GTA.Blip.Type
  - GTA.Blip.op_Equality(GTA.Blip,GTA.Blip)
  - GTA.Blip.op_Implicit(GTA.Blip)~GTA.Native.InputArgument
  - GTA.Blip.op_Inequality(GTA.Blip,GTA.Blip)
  langs:
  - csharp
  - vb
  name: Blip
  nameWithType: Blip
  fullName: GTA.Blip
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class Blip : PoolObject, INativeValue, IDeletable, IExistable'
    content.vb: Public NotInheritable Class Blip Inherits PoolObject Implements INativeValue, IDeletable, IExistable
  inheritance:
  - System.Object
  - GTA.PoolObject
  implements:
  - GTA.Native.INativeValue
  - GTA.IDeletable
  - GTA.IExistable
  inheritedMembers:
  - GTA.PoolObject.Handle
  - GTA.PoolObject.NativeValue
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Blip.#ctor(System.Int32)
  commentId: M:GTA.Blip.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Blip(int)
  nameWithType: Blip.Blip(int)
  fullName: GTA.Blip.Blip(int)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Blip(int handle)
    parameters:
    - id: handle
      type: System.Int32
    content.vb: Public Sub New(handle As Integer)
  overload: GTA.Blip.#ctor*
  nameWithType.vb: Blip.New(Integer)
  fullName.vb: GTA.Blip.New(Integer)
  name.vb: New(Integer)
- uid: GTA.Blip.RemoveNumberLabel
  commentId: M:GTA.Blip.RemoveNumberLabel
  id: RemoveNumberLabel
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: RemoveNumberLabel()
  nameWithType: Blip.RemoveNumberLabel()
  fullName: GTA.Blip.RemoveNumberLabel()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void RemoveNumberLabel()
    content.vb: Public Sub RemoveNumberLabel()
  overload: GTA.Blip.RemoveNumberLabel*
- uid: GTA.Blip.GetAppropriateName
  commentId: M:GTA.Blip.GetAppropriateName
  id: GetAppropriateName
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: GetAppropriateName()
  nameWithType: Blip.GetAppropriateName()
  fullName: GTA.Blip.GetAppropriateName()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public string GetAppropriateName()
    return:
      type: System.String
    content.vb: Public Function GetAppropriateName() As String
  overload: GTA.Blip.GetAppropriateName*
- uid: GTA.Blip.ResetName
  commentId: M:GTA.Blip.ResetName
  id: ResetName
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ResetName()
  nameWithType: Blip.ResetName()
  fullName: GTA.Blip.ResetName()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ResetName()
    content.vb: Public Sub ResetName()
  overload: GTA.Blip.ResetName*
- uid: GTA.Blip.Delete
  commentId: M:GTA.Blip.Delete
  id: Delete
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: Blip.Delete()
  fullName: GTA.Blip.Delete()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override void Delete()
    content.vb: Public Overrides Sub Delete()
  overridden: GTA.PoolObject.Delete
  overload: GTA.Blip.Delete*
- uid: GTA.Blip.Exists
  commentId: M:GTA.Blip.Exists
  id: Exists
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: Blip.Exists()
  fullName: GTA.Blip.Exists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Exists()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Exists() As Boolean
  overridden: GTA.PoolObject.Exists
  overload: GTA.Blip.Exists*
- uid: GTA.Blip.Equals(System.Object)
  commentId: M:GTA.Blip.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Blip.Equals(object)
  fullName: GTA.Blip.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTA.Blip.Equals*
  nameWithType.vb: Blip.Equals(Object)
  fullName.vb: GTA.Blip.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Blip.op_Equality(GTA.Blip,GTA.Blip)
  commentId: M:GTA.Blip.op_Equality(GTA.Blip,GTA.Blip)
  id: op_Equality(GTA.Blip,GTA.Blip)
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: operator ==(Blip, Blip)
  nameWithType: Blip.operator ==(Blip, Blip)
  fullName: GTA.Blip.operator ==(GTA.Blip, GTA.Blip)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(Blip left, Blip right)
    parameters:
    - id: left
      type: GTA.Blip
    - id: right
      type: GTA.Blip
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Blip, right As Blip) As Boolean
  overload: GTA.Blip.op_Equality*
  nameWithType.vb: Blip.=(Blip, Blip)
  fullName.vb: GTA.Blip.=(GTA.Blip, GTA.Blip)
  name.vb: =(Blip, Blip)
- uid: GTA.Blip.op_Inequality(GTA.Blip,GTA.Blip)
  commentId: M:GTA.Blip.op_Inequality(GTA.Blip,GTA.Blip)
  id: op_Inequality(GTA.Blip,GTA.Blip)
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: operator !=(Blip, Blip)
  nameWithType: Blip.operator !=(Blip, Blip)
  fullName: GTA.Blip.operator !=(GTA.Blip, GTA.Blip)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(Blip left, Blip right)
    parameters:
    - id: left
      type: GTA.Blip
    - id: right
      type: GTA.Blip
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Blip, right As Blip) As Boolean
  overload: GTA.Blip.op_Inequality*
  nameWithType.vb: Blip.<>(Blip, Blip)
  fullName.vb: GTA.Blip.<>(GTA.Blip, GTA.Blip)
  name.vb: <>(Blip, Blip)
- uid: GTA.Blip.op_Implicit(GTA.Blip)~GTA.Native.InputArgument
  commentId: M:GTA.Blip.op_Implicit(GTA.Blip)~GTA.Native.InputArgument
  id: op_Implicit(GTA.Blip)~GTA.Native.InputArgument
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: implicit operator InputArgument(Blip)
  nameWithType: Blip.implicit operator InputArgument(Blip)
  fullName: GTA.Blip.implicit operator GTA.Native.InputArgument(GTA.Blip)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator InputArgument(Blip value)
    parameters:
    - id: value
      type: GTA.Blip
    return:
      type: GTA.Native.InputArgument
    content.vb: Public Shared Widening Operator CType(value As Blip) As InputArgument
  overload: GTA.Blip.op_Implicit*
  nameWithType.vb: Blip.CType(Blip)
  fullName.vb: GTA.Blip.CType(GTA.Blip)
  name.vb: CType(Blip)
- uid: GTA.Blip.GetHashCode
  commentId: M:GTA.Blip.GetHashCode
  id: GetHashCode
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Blip.GetHashCode()
  fullName: GTA.Blip.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: GTA.Blip.GetHashCode*
- uid: GTA.Blip.MemoryAddress
  commentId: P:GTA.Blip.MemoryAddress
  id: MemoryAddress
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: MemoryAddress
  nameWithType: Blip.MemoryAddress
  fullName: GTA.Blip.MemoryAddress
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public IntPtr MemoryAddress { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property MemoryAddress As IntPtr
  overload: GTA.Blip.MemoryAddress*
- uid: GTA.Blip.Type
  commentId: P:GTA.Blip.Type
  id: Type
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Blip.Type
  fullName: GTA.Blip.Type
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Type { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Type As Integer
  overload: GTA.Blip.Type*
- uid: GTA.Blip.DisplayType
  commentId: P:GTA.Blip.DisplayType
  id: DisplayType
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: DisplayType
  nameWithType: Blip.DisplayType
  fullName: GTA.Blip.DisplayType
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public BlipDisplayType DisplayType { get; set; }
    parameters: []
    return:
      type: GTA.BlipDisplayType
    content.vb: Public Property DisplayType As BlipDisplayType
  overload: GTA.Blip.DisplayType*
- uid: GTA.Blip.CategoryType
  commentId: P:GTA.Blip.CategoryType
  id: CategoryType
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: CategoryType
  nameWithType: Blip.CategoryType
  fullName: GTA.Blip.CategoryType
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public BlipCategoryType CategoryType { get; set; }
    parameters: []
    return:
      type: GTA.BlipCategoryType
    content.vb: Public Property CategoryType As BlipCategoryType
  overload: GTA.Blip.CategoryType*
- uid: GTA.Blip.Alpha
  commentId: P:GTA.Blip.Alpha
  id: Alpha
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: Blip.Alpha
  fullName: GTA.Blip.Alpha
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Alpha { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Alpha As Integer
  overload: GTA.Blip.Alpha*
- uid: GTA.Blip.Priority
  commentId: P:GTA.Blip.Priority
  id: Priority
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: Blip.Priority
  fullName: GTA.Blip.Priority
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: GTA.Blip.Priority*
- uid: GTA.Blip.NumberLabel
  commentId: P:GTA.Blip.NumberLabel
  id: NumberLabel
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: NumberLabel
  nameWithType: Blip.NumberLabel
  fullName: GTA.Blip.NumberLabel
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int NumberLabel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumberLabel As Integer
  overload: GTA.Blip.NumberLabel*
- uid: GTA.Blip.Color
  commentId: P:GTA.Blip.Color
  id: Color
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Blip.Color
  fullName: GTA.Blip.Color
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public BlipColor Color { get; set; }
    parameters: []
    return:
      type: GTA.BlipColor
    content.vb: Public Property Color As BlipColor
  overload: GTA.Blip.Color*
- uid: GTA.Blip.SecondaryColor
  commentId: P:GTA.Blip.SecondaryColor
  id: SecondaryColor
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: SecondaryColor
  nameWithType: Blip.SecondaryColor
  fullName: GTA.Blip.SecondaryColor
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Color SecondaryColor { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property SecondaryColor As Color
  overload: GTA.Blip.SecondaryColor*
- uid: GTA.Blip.Sprite
  commentId: P:GTA.Blip.Sprite
  id: Sprite
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Sprite
  nameWithType: Blip.Sprite
  fullName: GTA.Blip.Sprite
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public BlipSprite Sprite { get; set; }
    parameters: []
    return:
      type: GTA.BlipSprite
    content.vb: Public Property Sprite As BlipSprite
  overload: GTA.Blip.Sprite*
- uid: GTA.Blip.Name
  commentId: P:GTA.Blip.Name
  id: Name
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Blip.Name
  fullName: GTA.Blip.Name
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: GTA.Blip.Name*
- uid: GTA.Blip.DisplayNameHash
  commentId: P:GTA.Blip.DisplayNameHash
  id: DisplayNameHash
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: DisplayNameHash
  nameWithType: Blip.DisplayNameHash
  fullName: GTA.Blip.DisplayNameHash
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int DisplayNameHash { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DisplayNameHash As Integer
  overload: GTA.Blip.DisplayNameHash*
- uid: GTA.Blip.Position
  commentId: P:GTA.Blip.Position
  id: Position
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Blip.Position
  fullName: GTA.Blip.Position
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public Property Position As Vector3
  overload: GTA.Blip.Position*
- uid: GTA.Blip.Rotation
  commentId: P:GTA.Blip.Rotation
  id: Rotation
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Blip.Rotation
  fullName: GTA.Blip.Rotation
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Rotation { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Rotation As Integer
  overload: GTA.Blip.Rotation*
- uid: GTA.Blip.RotationFloat
  commentId: P:GTA.Blip.RotationFloat
  id: RotationFloat
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: RotationFloat
  nameWithType: Blip.RotationFloat
  fullName: GTA.Blip.RotationFloat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float RotationFloat { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RotationFloat As Single
  overload: GTA.Blip.RotationFloat*
- uid: GTA.Blip.Scale
  commentId: P:GTA.Blip.Scale
  id: Scale
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Blip.Scale
  fullName: GTA.Blip.Scale
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float Scale { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public WriteOnly Property Scale As Single
  overload: GTA.Blip.Scale*
- uid: GTA.Blip.ScaleX
  commentId: P:GTA.Blip.ScaleX
  id: ScaleX
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ScaleX
  nameWithType: Blip.ScaleX
  fullName: GTA.Blip.ScaleX
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ScaleX { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ScaleX As Single
  overload: GTA.Blip.ScaleX*
- uid: GTA.Blip.ScaleY
  commentId: P:GTA.Blip.ScaleY
  id: ScaleY
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ScaleY
  nameWithType: Blip.ScaleY
  fullName: GTA.Blip.ScaleY
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ScaleY { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ScaleY As Single
  overload: GTA.Blip.ScaleY*
- uid: GTA.Blip.FlashInterval
  commentId: P:GTA.Blip.FlashInterval
  id: FlashInterval
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: FlashInterval
  nameWithType: Blip.FlashInterval
  fullName: GTA.Blip.FlashInterval
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int FlashInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FlashInterval As Integer
  overload: GTA.Blip.FlashInterval*
- uid: GTA.Blip.FlashTimeLeft
  commentId: P:GTA.Blip.FlashTimeLeft
  id: FlashTimeLeft
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: FlashTimeLeft
  nameWithType: Blip.FlashTimeLeft
  fullName: GTA.Blip.FlashTimeLeft
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int FlashTimeLeft { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FlashTimeLeft As Integer
  overload: GTA.Blip.FlashTimeLeft*
- uid: GTA.Blip.Entity
  commentId: P:GTA.Blip.Entity
  id: Entity
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: Blip.Entity
  fullName: GTA.Blip.Entity
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Entity Entity { get; }
    parameters: []
    return:
      type: GTA.Entity
    content.vb: Public ReadOnly Property Entity As Entity
  overload: GTA.Blip.Entity*
- uid: GTA.Blip.ShowRoute
  commentId: P:GTA.Blip.ShowRoute
  id: ShowRoute
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowRoute
  nameWithType: Blip.ShowRoute
  fullName: GTA.Blip.ShowRoute
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowRoute { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowRoute As Boolean
  overload: GTA.Blip.ShowRoute*
- uid: GTA.Blip.ShowsDollarSign
  commentId: P:GTA.Blip.ShowsDollarSign
  id: ShowsDollarSign
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowsDollarSign
  nameWithType: Blip.ShowsDollarSign
  fullName: GTA.Blip.ShowsDollarSign
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowsDollarSign { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowsDollarSign As Boolean
  overload: GTA.Blip.ShowsDollarSign*
- uid: GTA.Blip.ShowsHeadingIndicator
  commentId: P:GTA.Blip.ShowsHeadingIndicator
  id: ShowsHeadingIndicator
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowsHeadingIndicator
  nameWithType: Blip.ShowsHeadingIndicator
  fullName: GTA.Blip.ShowsHeadingIndicator
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowsHeadingIndicator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowsHeadingIndicator As Boolean
  overload: GTA.Blip.ShowsHeadingIndicator*
- uid: GTA.Blip.ShowsOutlineIndicator
  commentId: P:GTA.Blip.ShowsOutlineIndicator
  id: ShowsOutlineIndicator
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowsOutlineIndicator
  nameWithType: Blip.ShowsOutlineIndicator
  fullName: GTA.Blip.ShowsOutlineIndicator
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowsOutlineIndicator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowsOutlineIndicator As Boolean
  overload: GTA.Blip.ShowsOutlineIndicator*
- uid: GTA.Blip.ShowsFriendIndicator
  commentId: P:GTA.Blip.ShowsFriendIndicator
  id: ShowsFriendIndicator
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowsFriendIndicator
  nameWithType: Blip.ShowsFriendIndicator
  fullName: GTA.Blip.ShowsFriendIndicator
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowsFriendIndicator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowsFriendIndicator As Boolean
  overload: GTA.Blip.ShowsFriendIndicator*
- uid: GTA.Blip.ShowsCrewIndicator
  commentId: P:GTA.Blip.ShowsCrewIndicator
  id: ShowsCrewIndicator
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: ShowsCrewIndicator
  nameWithType: Blip.ShowsCrewIndicator
  fullName: GTA.Blip.ShowsCrewIndicator
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ShowsCrewIndicator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowsCrewIndicator As Boolean
  overload: GTA.Blip.ShowsCrewIndicator*
- uid: GTA.Blip.IsFriendly
  commentId: P:GTA.Blip.IsFriendly
  id: IsFriendly
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: IsFriendly
  nameWithType: Blip.IsFriendly
  fullName: GTA.Blip.IsFriendly
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsFriendly { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property IsFriendly As Boolean
  overload: GTA.Blip.IsFriendly*
- uid: GTA.Blip.IsFlashing
  commentId: P:GTA.Blip.IsFlashing
  id: IsFlashing
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: IsFlashing
  nameWithType: Blip.IsFlashing
  fullName: GTA.Blip.IsFlashing
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsFlashing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFlashing As Boolean
  overload: GTA.Blip.IsFlashing*
- uid: GTA.Blip.IsOnMinimap
  commentId: P:GTA.Blip.IsOnMinimap
  id: IsOnMinimap
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: IsOnMinimap
  nameWithType: Blip.IsOnMinimap
  fullName: GTA.Blip.IsOnMinimap
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsOnMinimap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnMinimap As Boolean
  overload: GTA.Blip.IsOnMinimap*
- uid: GTA.Blip.IsShortRange
  commentId: P:GTA.Blip.IsShortRange
  id: IsShortRange
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: IsShortRange
  nameWithType: Blip.IsShortRange
  fullName: GTA.Blip.IsShortRange
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsShortRange { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsShortRange As Boolean
  overload: GTA.Blip.IsShortRange*
- uid: GTA.Blip.IsHiddenOnLegend
  commentId: P:GTA.Blip.IsHiddenOnLegend
  id: IsHiddenOnLegend
  parent: GTA.Blip
  langs:
  - csharp
  - vb
  name: IsHiddenOnLegend
  nameWithType: Blip.IsHiddenOnLegend
  fullName: GTA.Blip.IsHiddenOnLegend
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsHiddenOnLegend { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsHiddenOnLegend As Boolean
  overload: GTA.Blip.IsHiddenOnLegend*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.PoolObject
  commentId: T:GTA.PoolObject
  parent: GTA
  isExternal: true
  href: GTA.PoolObject.html
  name: PoolObject
  nameWithType: PoolObject
  fullName: GTA.PoolObject
- uid: GTA.Native.INativeValue
  commentId: T:GTA.Native.INativeValue
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.INativeValue.html
  name: INativeValue
  nameWithType: INativeValue
  fullName: GTA.Native.INativeValue
- uid: GTA.IDeletable
  commentId: T:GTA.IDeletable
  parent: GTA
  isExternal: true
  href: GTA.IDeletable.html
  name: IDeletable
  nameWithType: IDeletable
  fullName: GTA.IDeletable
- uid: GTA.IExistable
  commentId: T:GTA.IExistable
  parent: GTA
  isExternal: true
  href: GTA.IExistable.html
  name: IExistable
  nameWithType: IExistable
  fullName: GTA.IExistable
- uid: GTA.PoolObject.Handle
  commentId: P:GTA.PoolObject.Handle
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Handle
  name: Handle
  nameWithType: PoolObject.Handle
  fullName: GTA.PoolObject.Handle
- uid: GTA.PoolObject.NativeValue
  commentId: P:GTA.PoolObject.NativeValue
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_NativeValue
  name: NativeValue
  nameWithType: PoolObject.NativeValue
  fullName: GTA.PoolObject.NativeValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Native
  commentId: N:GTA.Native
  isExternal: true
  href: GTA.html
  name: GTA.Native
  nameWithType: GTA.Native
  fullName: GTA.Native
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
- uid: GTA.Blip.#ctor*
  commentId: Overload:GTA.Blip.#ctor
  isExternal: true
  href: GTA.Blip.html#GTA_Blip__ctor_System_Int32_
  name: Blip
  nameWithType: Blip.Blip
  fullName: GTA.Blip.Blip
  nameWithType.vb: Blip.New
  fullName.vb: GTA.Blip.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Blip.RemoveNumberLabel*
  commentId: Overload:GTA.Blip.RemoveNumberLabel
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_RemoveNumberLabel
  name: RemoveNumberLabel
  nameWithType: Blip.RemoveNumberLabel
  fullName: GTA.Blip.RemoveNumberLabel
- uid: GTA.Blip.GetAppropriateName*
  commentId: Overload:GTA.Blip.GetAppropriateName
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_GetAppropriateName
  name: GetAppropriateName
  nameWithType: Blip.GetAppropriateName
  fullName: GTA.Blip.GetAppropriateName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.Blip.ResetName*
  commentId: Overload:GTA.Blip.ResetName
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ResetName
  name: ResetName
  nameWithType: Blip.ResetName
  fullName: GTA.Blip.ResetName
- uid: GTA.PoolObject.Delete
  commentId: M:GTA.PoolObject.Delete
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Delete
  name: Delete()
  nameWithType: PoolObject.Delete()
  fullName: GTA.PoolObject.Delete()
  spec.csharp:
  - uid: GTA.PoolObject.Delete
    name: Delete
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Delete
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.PoolObject.Delete
    name: Delete
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Delete
  - name: (
  - name: )
- uid: GTA.Blip.Delete*
  commentId: Overload:GTA.Blip.Delete
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Delete
  name: Delete
  nameWithType: Blip.Delete
  fullName: GTA.Blip.Delete
- uid: GTA.PoolObject.Exists
  commentId: M:GTA.PoolObject.Exists
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Exists
  name: Exists()
  nameWithType: PoolObject.Exists()
  fullName: GTA.PoolObject.Exists()
  spec.csharp:
  - uid: GTA.PoolObject.Exists
    name: Exists
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Exists
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.PoolObject.Exists
    name: Exists
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Exists
  - name: (
  - name: )
- uid: GTA.Blip.Exists*
  commentId: Overload:GTA.Blip.Exists
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Exists
  name: Exists
  nameWithType: Blip.Exists
  fullName: GTA.Blip.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Blip.Equals*
  commentId: Overload:GTA.Blip.Equals
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Equals_System_Object_
  name: Equals
  nameWithType: Blip.Equals
  fullName: GTA.Blip.Equals
- uid: GTA.Blip.op_Equality*
  commentId: Overload:GTA.Blip.op_Equality
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_op_Equality_GTA_Blip_GTA_Blip_
  name: operator ==
  nameWithType: Blip.operator ==
  fullName: GTA.Blip.operator ==
  nameWithType.vb: Blip.=
  fullName.vb: GTA.Blip.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Blip.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Blip.html#GTA_Blip_op_Equality_GTA_Blip_GTA_Blip_
- uid: GTA.Blip
  commentId: T:GTA.Blip
  parent: GTA
  isExternal: true
  href: GTA.Blip.html
  name: Blip
  nameWithType: Blip
  fullName: GTA.Blip
- uid: GTA.Blip.op_Inequality*
  commentId: Overload:GTA.Blip.op_Inequality
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_op_Inequality_GTA_Blip_GTA_Blip_
  name: operator !=
  nameWithType: Blip.operator !=
  fullName: GTA.Blip.operator !=
  nameWithType.vb: Blip.<>
  fullName.vb: GTA.Blip.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Blip.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Blip.html#GTA_Blip_op_Inequality_GTA_Blip_GTA_Blip_
- uid: GTA.Blip.op_Implicit*
  commentId: Overload:GTA.Blip.op_Implicit
  name: implicit operator
  nameWithType: Blip.implicit operator
  fullName: GTA.Blip.implicit operator
  nameWithType.vb: Blip.CType
  fullName.vb: GTA.Blip.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: GTA.Native.InputArgument
  commentId: T:GTA.Native.InputArgument
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.InputArgument.html
  name: InputArgument
  nameWithType: InputArgument
  fullName: GTA.Native.InputArgument
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: GTA.Blip.GetHashCode*
  commentId: Overload:GTA.Blip.GetHashCode
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_GetHashCode
  name: GetHashCode
  nameWithType: Blip.GetHashCode
  fullName: GTA.Blip.GetHashCode
- uid: GTA.Blip.MemoryAddress*
  commentId: Overload:GTA.Blip.MemoryAddress
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_MemoryAddress
  name: MemoryAddress
  nameWithType: Blip.MemoryAddress
  fullName: GTA.Blip.MemoryAddress
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: GTA.Blip.Type*
  commentId: Overload:GTA.Blip.Type
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Type
  name: Type
  nameWithType: Blip.Type
  fullName: GTA.Blip.Type
- uid: GTA.Blip.DisplayType*
  commentId: Overload:GTA.Blip.DisplayType
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_DisplayType
  name: DisplayType
  nameWithType: Blip.DisplayType
  fullName: GTA.Blip.DisplayType
- uid: GTA.BlipDisplayType
  commentId: T:GTA.BlipDisplayType
  parent: GTA
  isExternal: true
  href: GTA.BlipDisplayType.html
  name: BlipDisplayType
  nameWithType: BlipDisplayType
  fullName: GTA.BlipDisplayType
- uid: GTA.Blip.CategoryType*
  commentId: Overload:GTA.Blip.CategoryType
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_CategoryType
  name: CategoryType
  nameWithType: Blip.CategoryType
  fullName: GTA.Blip.CategoryType
- uid: GTA.BlipCategoryType
  commentId: T:GTA.BlipCategoryType
  parent: GTA
  isExternal: true
  href: GTA.BlipCategoryType.html
  name: BlipCategoryType
  nameWithType: BlipCategoryType
  fullName: GTA.BlipCategoryType
- uid: GTA.Blip.Alpha*
  commentId: Overload:GTA.Blip.Alpha
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Alpha
  name: Alpha
  nameWithType: Blip.Alpha
  fullName: GTA.Blip.Alpha
- uid: GTA.Blip.Priority*
  commentId: Overload:GTA.Blip.Priority
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Priority
  name: Priority
  nameWithType: Blip.Priority
  fullName: GTA.Blip.Priority
- uid: GTA.Blip.NumberLabel*
  commentId: Overload:GTA.Blip.NumberLabel
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_NumberLabel
  name: NumberLabel
  nameWithType: Blip.NumberLabel
  fullName: GTA.Blip.NumberLabel
- uid: GTA.Blip.Color*
  commentId: Overload:GTA.Blip.Color
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Color
  name: Color
  nameWithType: Blip.Color
  fullName: GTA.Blip.Color
- uid: GTA.BlipColor
  commentId: T:GTA.BlipColor
  parent: GTA
  isExternal: true
  href: GTA.BlipColor.html
  name: BlipColor
  nameWithType: BlipColor
  fullName: GTA.BlipColor
- uid: GTA.Blip.SecondaryColor*
  commentId: Overload:GTA.Blip.SecondaryColor
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_SecondaryColor
  name: SecondaryColor
  nameWithType: Blip.SecondaryColor
  fullName: GTA.Blip.SecondaryColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: GTA.Blip.Sprite*
  commentId: Overload:GTA.Blip.Sprite
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Sprite
  name: Sprite
  nameWithType: Blip.Sprite
  fullName: GTA.Blip.Sprite
- uid: GTA.BlipSprite
  commentId: T:GTA.BlipSprite
  parent: GTA
  isExternal: true
  href: GTA.BlipSprite.html
  name: BlipSprite
  nameWithType: BlipSprite
  fullName: GTA.BlipSprite
- uid: GTA.Blip.Name*
  commentId: Overload:GTA.Blip.Name
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Name
  name: Name
  nameWithType: Blip.Name
  fullName: GTA.Blip.Name
- uid: GTA.Blip.DisplayNameHash*
  commentId: Overload:GTA.Blip.DisplayNameHash
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_DisplayNameHash
  name: DisplayNameHash
  nameWithType: Blip.DisplayNameHash
  fullName: GTA.Blip.DisplayNameHash
- uid: GTA.Blip.Position*
  commentId: Overload:GTA.Blip.Position
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Position
  name: Position
  nameWithType: Blip.Position
  fullName: GTA.Blip.Position
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.Blip.Rotation*
  commentId: Overload:GTA.Blip.Rotation
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Rotation
  name: Rotation
  nameWithType: Blip.Rotation
  fullName: GTA.Blip.Rotation
- uid: GTA.Blip.RotationFloat*
  commentId: Overload:GTA.Blip.RotationFloat
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_RotationFloat
  name: RotationFloat
  nameWithType: Blip.RotationFloat
  fullName: GTA.Blip.RotationFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Blip.Scale*
  commentId: Overload:GTA.Blip.Scale
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Scale
  name: Scale
  nameWithType: Blip.Scale
  fullName: GTA.Blip.Scale
- uid: GTA.Blip.ScaleX*
  commentId: Overload:GTA.Blip.ScaleX
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ScaleX
  name: ScaleX
  nameWithType: Blip.ScaleX
  fullName: GTA.Blip.ScaleX
- uid: GTA.Blip.ScaleY*
  commentId: Overload:GTA.Blip.ScaleY
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ScaleY
  name: ScaleY
  nameWithType: Blip.ScaleY
  fullName: GTA.Blip.ScaleY
- uid: GTA.Blip.FlashInterval*
  commentId: Overload:GTA.Blip.FlashInterval
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_FlashInterval
  name: FlashInterval
  nameWithType: Blip.FlashInterval
  fullName: GTA.Blip.FlashInterval
- uid: GTA.Blip.FlashTimeLeft*
  commentId: Overload:GTA.Blip.FlashTimeLeft
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_FlashTimeLeft
  name: FlashTimeLeft
  nameWithType: Blip.FlashTimeLeft
  fullName: GTA.Blip.FlashTimeLeft
- uid: GTA.Blip.Entity*
  commentId: Overload:GTA.Blip.Entity
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_Entity
  name: Entity
  nameWithType: Blip.Entity
  fullName: GTA.Blip.Entity
- uid: GTA.Entity
  commentId: T:GTA.Entity
  parent: GTA
  isExternal: true
  href: GTA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: GTA.Entity
- uid: GTA.Blip.ShowRoute*
  commentId: Overload:GTA.Blip.ShowRoute
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowRoute
  name: ShowRoute
  nameWithType: Blip.ShowRoute
  fullName: GTA.Blip.ShowRoute
- uid: GTA.Blip.ShowsDollarSign*
  commentId: Overload:GTA.Blip.ShowsDollarSign
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowsDollarSign
  name: ShowsDollarSign
  nameWithType: Blip.ShowsDollarSign
  fullName: GTA.Blip.ShowsDollarSign
- uid: GTA.Blip.ShowsHeadingIndicator*
  commentId: Overload:GTA.Blip.ShowsHeadingIndicator
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowsHeadingIndicator
  name: ShowsHeadingIndicator
  nameWithType: Blip.ShowsHeadingIndicator
  fullName: GTA.Blip.ShowsHeadingIndicator
- uid: GTA.Blip.ShowsOutlineIndicator*
  commentId: Overload:GTA.Blip.ShowsOutlineIndicator
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowsOutlineIndicator
  name: ShowsOutlineIndicator
  nameWithType: Blip.ShowsOutlineIndicator
  fullName: GTA.Blip.ShowsOutlineIndicator
- uid: GTA.Blip.ShowsFriendIndicator*
  commentId: Overload:GTA.Blip.ShowsFriendIndicator
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowsFriendIndicator
  name: ShowsFriendIndicator
  nameWithType: Blip.ShowsFriendIndicator
  fullName: GTA.Blip.ShowsFriendIndicator
- uid: GTA.Blip.ShowsCrewIndicator*
  commentId: Overload:GTA.Blip.ShowsCrewIndicator
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_ShowsCrewIndicator
  name: ShowsCrewIndicator
  nameWithType: Blip.ShowsCrewIndicator
  fullName: GTA.Blip.ShowsCrewIndicator
- uid: GTA.Blip.IsFriendly*
  commentId: Overload:GTA.Blip.IsFriendly
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_IsFriendly
  name: IsFriendly
  nameWithType: Blip.IsFriendly
  fullName: GTA.Blip.IsFriendly
- uid: GTA.Blip.IsFlashing*
  commentId: Overload:GTA.Blip.IsFlashing
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_IsFlashing
  name: IsFlashing
  nameWithType: Blip.IsFlashing
  fullName: GTA.Blip.IsFlashing
- uid: GTA.Blip.IsOnMinimap*
  commentId: Overload:GTA.Blip.IsOnMinimap
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_IsOnMinimap
  name: IsOnMinimap
  nameWithType: Blip.IsOnMinimap
  fullName: GTA.Blip.IsOnMinimap
- uid: GTA.Blip.IsShortRange*
  commentId: Overload:GTA.Blip.IsShortRange
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_IsShortRange
  name: IsShortRange
  nameWithType: Blip.IsShortRange
  fullName: GTA.Blip.IsShortRange
- uid: GTA.Blip.IsHiddenOnLegend*
  commentId: Overload:GTA.Blip.IsHiddenOnLegend
  isExternal: true
  href: GTA.Blip.html#GTA_Blip_IsHiddenOnLegend
  name: IsHiddenOnLegend
  nameWithType: Blip.IsHiddenOnLegend
  fullName: GTA.Blip.IsHiddenOnLegend
