### YamlMime:ManagedReference
items:
- uid: GTA.ShapeTest
  commentId: T:GTA.ShapeTest
  id: ShapeTest
  parent: GTA
  children:
  - GTA.ShapeTest.StartExpensiveSyncTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestBound(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestBoundingBox(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestBox(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,GTA.EulerRotationOrder,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestCapsule(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.Math.Vector3@,GTA.Math.Vector3@,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  - GTA.ShapeTest.StartTestSweptSphere(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  langs:
  - csharp
  - vb
  name: ShapeTest
  nameWithType: ShapeTest
  fullName: GTA.ShapeTest
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static class ShapeTest
    content.vb: Public Module ShapeTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: GTA.ShapeTest.StartTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestLOSProbe(GTA.Math.Vector3, GTA.Math.Vector3, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestLOSProbe(Vector3 startPosition, Vector3 endPosition, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.Default)
    parameters:
    - id: startPosition
      type: GTA.Math.Vector3
    - id: endPosition
      type: GTA.Math.Vector3
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestLOSProbe(startPosition As Vector3, endPosition As Vector3, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.Default) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestLOSProbe*
- uid: GTA.ShapeTest.StartExpensiveSyncTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartExpensiveSyncTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartExpensiveSyncTestLOSProbe(GTA.Math.Vector3,GTA.Math.Vector3,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartExpensiveSyncTestLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartExpensiveSyncTestLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartExpensiveSyncTestLOSProbe(GTA.Math.Vector3, GTA.Math.Vector3, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartExpensiveSyncTestLOSProbe(Vector3 startPosition, Vector3 endPosition, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.Default)
    parameters:
    - id: startPosition
      type: GTA.Math.Vector3
    - id: endPosition
      type: GTA.Math.Vector3
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartExpensiveSyncTestLOSProbe(startPosition As Vector3, endPosition As Vector3, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.Default) As ShapeTestHandle
  overload: GTA.ShapeTest.StartExpensiveSyncTestLOSProbe*
- uid: GTA.ShapeTest.StartTestBoundingBox(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestBoundingBox(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  id: StartTestBoundingBox(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestBoundingBox(Entity, IntersectFlags, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestBoundingBox(Entity, IntersectFlags, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestBoundingBox(GTA.Entity, GTA.IntersectFlags, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestBoundingBox(Entity entity, IntersectFlags intersectFlags = IntersectFlags.BoundingBox, ShapeTestOptions options = ShapeTestOptions.IgnoreNoCollision)
    parameters:
    - id: entity
      type: GTA.Entity
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestBoundingBox(entity As Entity, intersectFlags As IntersectFlags = IntersectFlags.BoundingBox, options As ShapeTestOptions = ShapeTestOptions.IgnoreNoCollision) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestBoundingBox*
- uid: GTA.ShapeTest.StartTestBox(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,GTA.EulerRotationOrder,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestBox(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,GTA.EulerRotationOrder,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestBox(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,GTA.EulerRotationOrder,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestBox(Vector3, Vector3, Vector3, EulerRotationOrder, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestBox(Vector3, Vector3, Vector3, EulerRotationOrder, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestBox(GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, GTA.EulerRotationOrder, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestBox(Vector3 sourcePosition, Vector3 dimension, Vector3 rotationAngles, EulerRotationOrder rotationOrder = EulerRotationOrder.YXZ, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.IgnoreNoCollision)
    parameters:
    - id: sourcePosition
      type: GTA.Math.Vector3
    - id: dimension
      type: GTA.Math.Vector3
    - id: rotationAngles
      type: GTA.Math.Vector3
    - id: rotationOrder
      type: GTA.EulerRotationOrder
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestBox(sourcePosition As Vector3, dimension As Vector3, rotationAngles As Vector3, rotationOrder As EulerRotationOrder = EulerRotationOrder.YXZ, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.IgnoreNoCollision) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestBox*
- uid: GTA.ShapeTest.StartTestBound(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestBound(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  id: StartTestBound(GTA.Entity,GTA.IntersectFlags,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestBound(Entity, IntersectFlags, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestBound(Entity, IntersectFlags, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestBound(GTA.Entity, GTA.IntersectFlags, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestBound(Entity entity, IntersectFlags intersectFlags = IntersectFlags.Map, ShapeTestOptions options = ShapeTestOptions.IgnoreNoCollision)
    parameters:
    - id: entity
      type: GTA.Entity
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestBound(entity As Entity, intersectFlags As IntersectFlags = IntersectFlags.Map, options As ShapeTestOptions = ShapeTestOptions.IgnoreNoCollision) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestBound*
- uid: GTA.ShapeTest.StartTestCapsule(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestCapsule(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestCapsule(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestCapsule(Vector3, Vector3, float, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestCapsule(Vector3, Vector3, float, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestCapsule(GTA.Math.Vector3, GTA.Math.Vector3, float, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestCapsule(Vector3 startPosition, Vector3 endPosition, float radius, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.IgnoreNoCollision)
    parameters:
    - id: startPosition
      type: GTA.Math.Vector3
    - id: endPosition
      type: GTA.Math.Vector3
    - id: radius
      type: System.Single
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestCapsule(startPosition As Vector3, endPosition As Vector3, radius As Single, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.IgnoreNoCollision) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestCapsule*
  nameWithType.vb: ShapeTest.StartTestCapsule(Vector3, Vector3, Single, IntersectFlags, Entity, ShapeTestOptions)
  fullName.vb: GTA.ShapeTest.StartTestCapsule(GTA.Math.Vector3, GTA.Math.Vector3, Single, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  name.vb: StartTestCapsule(Vector3, Vector3, Single, IntersectFlags, Entity, ShapeTestOptions)
- uid: GTA.ShapeTest.StartTestSweptSphere(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestSweptSphere(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestSweptSphere(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestSweptSphere(Vector3, Vector3, float, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestSweptSphere(Vector3, Vector3, float, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestSweptSphere(GTA.Math.Vector3, GTA.Math.Vector3, float, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestSweptSphere(Vector3 startPosition, Vector3 endPosition, float radius, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.IgnoreNoCollision)
    parameters:
    - id: startPosition
      type: GTA.Math.Vector3
    - id: endPosition
      type: GTA.Math.Vector3
    - id: radius
      type: System.Single
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestSweptSphere(startPosition As Vector3, endPosition As Vector3, radius As Single, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.IgnoreNoCollision) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestSweptSphere*
  nameWithType.vb: ShapeTest.StartTestSweptSphere(Vector3, Vector3, Single, IntersectFlags, Entity, ShapeTestOptions)
  fullName.vb: GTA.ShapeTest.StartTestSweptSphere(GTA.Math.Vector3, GTA.Math.Vector3, Single, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  name.vb: StartTestSweptSphere(Vector3, Vector3, Single, IntersectFlags, Entity, ShapeTestOptions)
- uid: GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.Math.Vector3@,GTA.Math.Vector3@,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.Math.Vector3@,GTA.Math.Vector3@,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestMouseCursorLOSProbe(GTA.Math.Vector3@,GTA.Math.Vector3@,GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestMouseCursorLOSProbe(out Vector3, out Vector3, IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestMouseCursorLOSProbe(out Vector3, out Vector3, IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestMouseCursorLOSProbe(out GTA.Math.Vector3, out GTA.Math.Vector3, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ShapeTestHandle StartTestMouseCursorLOSProbe(out Vector3 probeStartPosition, out Vector3 probeEndPosition, IntersectFlags intersectFlags = IntersectFlags.Map, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.Default)
    parameters:
    - id: probeStartPosition
      type: GTA.Math.Vector3
    - id: probeEndPosition
      type: GTA.Math.Vector3
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: GTA.ShapeTestHandle
    content.vb: Public Shared Function StartTestMouseCursorLOSProbe(probeStartPosition As Vector3, probeEndPosition As Vector3, intersectFlags As IntersectFlags = IntersectFlags.Map, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.Default) As ShapeTestHandle
  overload: GTA.ShapeTest.StartTestMouseCursorLOSProbe*
  nameWithType.vb: ShapeTest.StartTestMouseCursorLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
  fullName.vb: GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.Math.Vector3, GTA.Math.Vector3, GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  name.vb: StartTestMouseCursorLOSProbe(Vector3, Vector3, IntersectFlags, Entity, ShapeTestOptions)
- uid: GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  commentId: M:GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  id: StartTestMouseCursorLOSProbe(GTA.IntersectFlags,GTA.Entity,GTA.ShapeTestOptions)
  parent: GTA.ShapeTest
  langs:
  - csharp
  - vb
  name: StartTestMouseCursorLOSProbe(IntersectFlags, Entity, ShapeTestOptions)
  nameWithType: ShapeTest.StartTestMouseCursorLOSProbe(IntersectFlags, Entity, ShapeTestOptions)
  fullName: GTA.ShapeTest.StartTestMouseCursorLOSProbe(GTA.IntersectFlags, GTA.Entity, GTA.ShapeTestOptions)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static (ShapeTestHandle handle, Vector3 probeStartPosition, Vector3 probeEndPosition) StartTestMouseCursorLOSProbe(IntersectFlags intersectFlags, Entity excludeEntity = null, ShapeTestOptions options = ShapeTestOptions.Default)
    parameters:
    - id: intersectFlags
      type: GTA.IntersectFlags
    - id: excludeEntity
      type: GTA.Entity
    - id: options
      type: GTA.ShapeTestOptions
    return:
      type: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}
    content.vb: Public Shared Function StartTestMouseCursorLOSProbe(intersectFlags As IntersectFlags, excludeEntity As Entity = Nothing, options As ShapeTestOptions = ShapeTestOptions.Default) As (handle As ShapeTestHandle, probeStartPosition As Vector3, probeEndPosition As Vector3)
  overload: GTA.ShapeTest.StartTestMouseCursorLOSProbe*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.ShapeTest.StartTestLOSProbe*
  commentId: Overload:GTA.ShapeTest.StartTestLOSProbe
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestLOSProbe_GTA_Math_Vector3_GTA_Math_Vector3_GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartTestLOSProbe
  nameWithType: ShapeTest.StartTestLOSProbe
  fullName: GTA.ShapeTest.StartTestLOSProbe
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.IntersectFlags
  commentId: T:GTA.IntersectFlags
  parent: GTA
  isExternal: true
  href: GTA.IntersectFlags.html
  name: IntersectFlags
  nameWithType: IntersectFlags
  fullName: GTA.IntersectFlags
- uid: GTA.Entity
  commentId: T:GTA.Entity
  parent: GTA
  isExternal: true
  href: GTA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: GTA.Entity
- uid: GTA.ShapeTestOptions
  commentId: T:GTA.ShapeTestOptions
  parent: GTA
  isExternal: true
  href: GTA.ShapeTestOptions.html
  name: ShapeTestOptions
  nameWithType: ShapeTestOptions
  fullName: GTA.ShapeTestOptions
- uid: GTA.ShapeTestHandle
  commentId: T:GTA.ShapeTestHandle
  parent: GTA
  isExternal: true
  href: GTA.ShapeTestHandle.html
  name: ShapeTestHandle
  nameWithType: ShapeTestHandle
  fullName: GTA.ShapeTestHandle
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.ShapeTest.StartExpensiveSyncTestLOSProbe*
  commentId: Overload:GTA.ShapeTest.StartExpensiveSyncTestLOSProbe
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartExpensiveSyncTestLOSProbe_GTA_Math_Vector3_GTA_Math_Vector3_GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartExpensiveSyncTestLOSProbe
  nameWithType: ShapeTest.StartExpensiveSyncTestLOSProbe
  fullName: GTA.ShapeTest.StartExpensiveSyncTestLOSProbe
- uid: GTA.ShapeTest.StartTestBoundingBox*
  commentId: Overload:GTA.ShapeTest.StartTestBoundingBox
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestBoundingBox_GTA_Entity_GTA_IntersectFlags_GTA_ShapeTestOptions_
  name: StartTestBoundingBox
  nameWithType: ShapeTest.StartTestBoundingBox
  fullName: GTA.ShapeTest.StartTestBoundingBox
- uid: GTA.ShapeTest.StartTestBox*
  commentId: Overload:GTA.ShapeTest.StartTestBox
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestBox_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_GTA_EulerRotationOrder_GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartTestBox
  nameWithType: ShapeTest.StartTestBox
  fullName: GTA.ShapeTest.StartTestBox
- uid: GTA.EulerRotationOrder
  commentId: T:GTA.EulerRotationOrder
  parent: GTA
  isExternal: true
  href: GTA.EulerRotationOrder.html
  name: EulerRotationOrder
  nameWithType: EulerRotationOrder
  fullName: GTA.EulerRotationOrder
- uid: GTA.ShapeTest.StartTestBound*
  commentId: Overload:GTA.ShapeTest.StartTestBound
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestBound_GTA_Entity_GTA_IntersectFlags_GTA_ShapeTestOptions_
  name: StartTestBound
  nameWithType: ShapeTest.StartTestBound
  fullName: GTA.ShapeTest.StartTestBound
- uid: GTA.ShapeTest.StartTestCapsule*
  commentId: Overload:GTA.ShapeTest.StartTestCapsule
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestCapsule_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartTestCapsule
  nameWithType: ShapeTest.StartTestCapsule
  fullName: GTA.ShapeTest.StartTestCapsule
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.ShapeTest.StartTestSweptSphere*
  commentId: Overload:GTA.ShapeTest.StartTestSweptSphere
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestSweptSphere_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartTestSweptSphere
  nameWithType: ShapeTest.StartTestSweptSphere
  fullName: GTA.ShapeTest.StartTestSweptSphere
- uid: GTA.ShapeTest.StartTestMouseCursorLOSProbe*
  commentId: Overload:GTA.ShapeTest.StartTestMouseCursorLOSProbe
  isExternal: true
  href: GTA.ShapeTest.html#GTA_ShapeTest_StartTestMouseCursorLOSProbe_GTA_Math_Vector3__GTA_Math_Vector3__GTA_IntersectFlags_GTA_Entity_GTA_ShapeTestOptions_
  name: StartTestMouseCursorLOSProbe
  nameWithType: ShapeTest.StartTestMouseCursorLOSProbe
  fullName: GTA.ShapeTest.StartTestMouseCursorLOSProbe
- uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}
  commentId: T:System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}
  parent: System
  definition: System.ValueTuple`3
  href: GTA.ShapeTestHandle.html
  name: (ShapeTestHandle handle, Vector3 probeStartPosition, Vector3 probeEndPosition)
  nameWithType: (ShapeTestHandle handle, Vector3 probeStartPosition, Vector3 probeEndPosition)
  fullName: (GTA.ShapeTestHandle handle, GTA.Math.Vector3 probeStartPosition, GTA.Math.Vector3 probeEndPosition)
  nameWithType.vb: (handle As ShapeTestHandle, probeStartPosition As Vector3, probeEndPosition As Vector3)
  fullName.vb: (handle As GTA.ShapeTestHandle, probeStartPosition As GTA.Math.Vector3, probeEndPosition As GTA.Math.Vector3)
  name.vb: (handle As ShapeTestHandle, probeStartPosition As Vector3, probeEndPosition As Vector3)
  spec.csharp:
  - name: (
  - uid: GTA.ShapeTestHandle
    name: ShapeTestHandle
    isExternal: true
    href: GTA.ShapeTestHandle.html
  - name: " "
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.handle
    name: handle
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.handle
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: " "
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.probeStartPosition
    name: probeStartPosition
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.probestartposition
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: " "
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.probeEndPosition
    name: probeEndPosition
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.probeendposition
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.handle
    name: handle
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.handle
  - name: " "
  - name: As
  - name: " "
  - uid: GTA.ShapeTestHandle
    name: ShapeTestHandle
    isExternal: true
    href: GTA.ShapeTestHandle.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.probeStartPosition
    name: probeStartPosition
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.probestartposition
  - name: " "
  - name: As
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{GTA.ShapeTestHandle,GTA.Math.Vector3,GTA.Math.Vector3}.probeEndPosition
    name: probeEndPosition
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-gta.shapetesthandle,gta.math.vector3,gta.math.vector3-.probeendposition
  - name: " "
  - name: As
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
