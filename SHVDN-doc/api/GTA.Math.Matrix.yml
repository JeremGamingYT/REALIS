### YamlMime:ManagedReference
items:
- uid: GTA.Math.Matrix
  commentId: T:GTA.Math.Matrix
  id: Matrix
  parent: GTA.Math
  children:
  - GTA.Math.Matrix.#ctor(System.Single[])
  - GTA.Math.Matrix.Add(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.ApplyScale(GTA.Math.Vector3)
  - GTA.Math.Matrix.ApplyScale(System.Single)
  - GTA.Math.Matrix.Determinant
  - GTA.Math.Matrix.Divide(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.Divide(GTA.Math.Matrix,System.Single)
  - GTA.Math.Matrix.Equals(GTA.Math.Matrix)
  - GTA.Math.Matrix.Equals(System.Object)
  - GTA.Math.Matrix.FastInverse
  - GTA.Math.Matrix.FastInvert
  - GTA.Math.Matrix.GetHashCode
  - GTA.Math.Matrix.GetMatrixWithoutScale
  - GTA.Math.Matrix.GetMatrixWithoutScale(System.Single)
  - GTA.Math.Matrix.GetOrigin
  - GTA.Math.Matrix.GetScaleVector
  - GTA.Math.Matrix.GetScaleVector(System.Single)
  - GTA.Math.Matrix.HasInverse
  - GTA.Math.Matrix.Identity
  - GTA.Math.Matrix.Inverse
  - GTA.Math.Matrix.InverseTransformDirection(GTA.Math.Vector3)
  - GTA.Math.Matrix.InverseTransformPoint(GTA.Math.Vector3)
  - GTA.Math.Matrix.InverseTransformVector(GTA.Math.Vector3)
  - GTA.Math.Matrix.Invert
  - GTA.Math.Matrix.Invert(GTA.Math.Matrix)
  - GTA.Math.Matrix.IsIdentity
  - GTA.Math.Matrix.Item(System.Int32)
  - GTA.Math.Matrix.Item(System.Int32,System.Int32)
  - GTA.Math.Matrix.Lerp(GTA.Math.Matrix,GTA.Math.Matrix,System.Single)
  - GTA.Math.Matrix.M11
  - GTA.Math.Matrix.M12
  - GTA.Math.Matrix.M13
  - GTA.Math.Matrix.M14
  - GTA.Math.Matrix.M21
  - GTA.Math.Matrix.M22
  - GTA.Math.Matrix.M23
  - GTA.Math.Matrix.M24
  - GTA.Math.Matrix.M31
  - GTA.Math.Matrix.M32
  - GTA.Math.Matrix.M33
  - GTA.Math.Matrix.M34
  - GTA.Math.Matrix.M41
  - GTA.Math.Matrix.M42
  - GTA.Math.Matrix.M43
  - GTA.Math.Matrix.M44
  - GTA.Math.Matrix.Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.Multiply(GTA.Math.Matrix,System.Single)
  - GTA.Math.Matrix.Negate(GTA.Math.Matrix)
  - GTA.Math.Matrix.RemoveScaling
  - GTA.Math.Matrix.RemoveScaling(System.Single)
  - GTA.Math.Matrix.RemoveTranslation
  - GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3,System.Single)
  - GTA.Math.Matrix.RotationQuaternion(GTA.Math.Quaternion)
  - GTA.Math.Matrix.RotationX(System.Single)
  - GTA.Math.Matrix.RotationY(System.Single)
  - GTA.Math.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)
  - GTA.Math.Matrix.RotationZ(System.Single)
  - GTA.Math.Matrix.Scaling(GTA.Math.Vector3)
  - GTA.Math.Matrix.Scaling(System.Single,System.Single,System.Single)
  - GTA.Math.Matrix.SetOrigin(GTA.Math.Vector3)
  - GTA.Math.Matrix.Subtract(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.ToArray
  - GTA.Math.Matrix.ToString
  - GTA.Math.Matrix.ToString(System.String)
  - GTA.Math.Matrix.ToString(System.String,System.IFormatProvider)
  - GTA.Math.Matrix.TransformDirection(GTA.Math.Vector3)
  - GTA.Math.Matrix.TransformPoint(GTA.Math.Vector3)
  - GTA.Math.Matrix.TransformVector(GTA.Math.Vector3)
  - GTA.Math.Matrix.Translation(GTA.Math.Vector3)
  - GTA.Math.Matrix.Translation(System.Single,System.Single,System.Single)
  - GTA.Math.Matrix.Transpose(GTA.Math.Matrix)
  - GTA.Math.Matrix.Zero
  - GTA.Math.Matrix.op_Addition(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Division(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Division(GTA.Math.Matrix,System.Single)
  - GTA.Math.Matrix.op_Equality(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Inequality(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,System.Single)
  - GTA.Math.Matrix.op_Multiply(System.Single,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_Subtraction(GTA.Math.Matrix,GTA.Math.Matrix)
  - GTA.Math.Matrix.op_UnaryNegation(GTA.Math.Matrix)
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: Matrix
  fullName: GTA.Math.Matrix
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: 'public struct Matrix : IEquatable<Matrix>, IFormattable'
    content.vb: Public Structure Matrix Implements IEquatable(Of Matrix), IFormattable
  implements:
  - System.IEquatable{GTA.Math.Matrix}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Math.Matrix.M11
  commentId: F:GTA.Math.Matrix.M11
  id: M11
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M11
  nameWithType: Matrix.M11
  fullName: GTA.Math.Matrix.M11
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M11
    return:
      type: System.Single
    content.vb: Public M11 As Single
- uid: GTA.Math.Matrix.M12
  commentId: F:GTA.Math.Matrix.M12
  id: M12
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M12
  nameWithType: Matrix.M12
  fullName: GTA.Math.Matrix.M12
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M12
    return:
      type: System.Single
    content.vb: Public M12 As Single
- uid: GTA.Math.Matrix.M13
  commentId: F:GTA.Math.Matrix.M13
  id: M13
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M13
  nameWithType: Matrix.M13
  fullName: GTA.Math.Matrix.M13
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M13
    return:
      type: System.Single
    content.vb: Public M13 As Single
- uid: GTA.Math.Matrix.M14
  commentId: F:GTA.Math.Matrix.M14
  id: M14
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M14
  nameWithType: Matrix.M14
  fullName: GTA.Math.Matrix.M14
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M14
    return:
      type: System.Single
    content.vb: Public M14 As Single
- uid: GTA.Math.Matrix.M21
  commentId: F:GTA.Math.Matrix.M21
  id: M21
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M21
  nameWithType: Matrix.M21
  fullName: GTA.Math.Matrix.M21
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M21
    return:
      type: System.Single
    content.vb: Public M21 As Single
- uid: GTA.Math.Matrix.M22
  commentId: F:GTA.Math.Matrix.M22
  id: M22
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M22
  nameWithType: Matrix.M22
  fullName: GTA.Math.Matrix.M22
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M22
    return:
      type: System.Single
    content.vb: Public M22 As Single
- uid: GTA.Math.Matrix.M23
  commentId: F:GTA.Math.Matrix.M23
  id: M23
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M23
  nameWithType: Matrix.M23
  fullName: GTA.Math.Matrix.M23
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M23
    return:
      type: System.Single
    content.vb: Public M23 As Single
- uid: GTA.Math.Matrix.M24
  commentId: F:GTA.Math.Matrix.M24
  id: M24
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M24
  nameWithType: Matrix.M24
  fullName: GTA.Math.Matrix.M24
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M24
    return:
      type: System.Single
    content.vb: Public M24 As Single
- uid: GTA.Math.Matrix.M31
  commentId: F:GTA.Math.Matrix.M31
  id: M31
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M31
  nameWithType: Matrix.M31
  fullName: GTA.Math.Matrix.M31
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M31
    return:
      type: System.Single
    content.vb: Public M31 As Single
- uid: GTA.Math.Matrix.M32
  commentId: F:GTA.Math.Matrix.M32
  id: M32
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M32
  nameWithType: Matrix.M32
  fullName: GTA.Math.Matrix.M32
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M32
    return:
      type: System.Single
    content.vb: Public M32 As Single
- uid: GTA.Math.Matrix.M33
  commentId: F:GTA.Math.Matrix.M33
  id: M33
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M33
  nameWithType: Matrix.M33
  fullName: GTA.Math.Matrix.M33
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M33
    return:
      type: System.Single
    content.vb: Public M33 As Single
- uid: GTA.Math.Matrix.M34
  commentId: F:GTA.Math.Matrix.M34
  id: M34
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M34
  nameWithType: Matrix.M34
  fullName: GTA.Math.Matrix.M34
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M34
    return:
      type: System.Single
    content.vb: Public M34 As Single
- uid: GTA.Math.Matrix.M41
  commentId: F:GTA.Math.Matrix.M41
  id: M41
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M41
  nameWithType: Matrix.M41
  fullName: GTA.Math.Matrix.M41
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M41
    return:
      type: System.Single
    content.vb: Public M41 As Single
- uid: GTA.Math.Matrix.M42
  commentId: F:GTA.Math.Matrix.M42
  id: M42
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M42
  nameWithType: Matrix.M42
  fullName: GTA.Math.Matrix.M42
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M42
    return:
      type: System.Single
    content.vb: Public M42 As Single
- uid: GTA.Math.Matrix.M43
  commentId: F:GTA.Math.Matrix.M43
  id: M43
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M43
  nameWithType: Matrix.M43
  fullName: GTA.Math.Matrix.M43
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M43
    return:
      type: System.Single
    content.vb: Public M43 As Single
- uid: GTA.Math.Matrix.M44
  commentId: F:GTA.Math.Matrix.M44
  id: M44
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: M44
  nameWithType: Matrix.M44
  fullName: GTA.Math.Matrix.M44
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float M44
    return:
      type: System.Single
    content.vb: Public M44 As Single
- uid: GTA.Math.Matrix.#ctor(System.Single[])
  commentId: M:GTA.Math.Matrix.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(float[])
  nameWithType: Matrix.Matrix(float[])
  fullName: GTA.Math.Matrix.Matrix(float[])
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public Matrix(float[] values)
    parameters:
    - id: values
      type: System.Single[]
    content.vb: Public Sub New(values As Single())
  overload: GTA.Math.Matrix.#ctor*
  nameWithType.vb: Matrix.New(Single())
  fullName.vb: GTA.Math.Matrix.New(Single())
  name.vb: New(Single())
- uid: GTA.Math.Matrix.GetOrigin
  commentId: M:GTA.Math.Matrix.GetOrigin
  id: GetOrigin
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetOrigin()
  nameWithType: Matrix.GetOrigin()
  fullName: GTA.Math.Matrix.GetOrigin()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 GetOrigin()
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function GetOrigin() As Vector3
  overload: GTA.Math.Matrix.GetOrigin*
- uid: GTA.Math.Matrix.SetOrigin(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.SetOrigin(GTA.Math.Vector3)
  id: SetOrigin(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: SetOrigin(Vector3)
  nameWithType: Matrix.SetOrigin(Vector3)
  fullName: GTA.Math.Matrix.SetOrigin(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void SetOrigin(Vector3 newOrigin)
    parameters:
    - id: newOrigin
      type: GTA.Math.Vector3
    content.vb: Public Sub SetOrigin(newOrigin As Vector3)
  overload: GTA.Math.Matrix.SetOrigin*
- uid: GTA.Math.Matrix.GetScaleVector
  commentId: M:GTA.Math.Matrix.GetScaleVector
  id: GetScaleVector
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetScaleVector()
  nameWithType: Matrix.GetScaleVector()
  fullName: GTA.Math.Matrix.GetScaleVector()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 GetScaleVector()
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function GetScaleVector() As Vector3
  overload: GTA.Math.Matrix.GetScaleVector*
- uid: GTA.Math.Matrix.GetScaleVector(System.Single)
  commentId: M:GTA.Math.Matrix.GetScaleVector(System.Single)
  id: GetScaleVector(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetScaleVector(float)
  nameWithType: Matrix.GetScaleVector(float)
  fullName: GTA.Math.Matrix.GetScaleVector(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 GetScaleVector(float tolerance)
    parameters:
    - id: tolerance
      type: System.Single
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function GetScaleVector(tolerance As Single) As Vector3
  overload: GTA.Math.Matrix.GetScaleVector*
  nameWithType.vb: Matrix.GetScaleVector(Single)
  fullName.vb: GTA.Math.Matrix.GetScaleVector(Single)
  name.vb: GetScaleVector(Single)
- uid: GTA.Math.Matrix.Determinant
  commentId: M:GTA.Math.Matrix.Determinant
  id: Determinant
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Determinant()
  nameWithType: Matrix.Determinant()
  fullName: GTA.Math.Matrix.Determinant()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float Determinant()
    return:
      type: System.Single
    content.vb: Public Function Determinant() As Single
  overload: GTA.Math.Matrix.Determinant*
- uid: GTA.Math.Matrix.Invert
  commentId: M:GTA.Math.Matrix.Invert
  id: Invert
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: GTA.Math.Matrix.Invert()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void Invert()
    content.vb: Public Sub Invert()
  overload: GTA.Math.Matrix.Invert*
- uid: GTA.Math.Matrix.Inverse
  commentId: M:GTA.Math.Matrix.Inverse
  id: Inverse
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Inverse()
  nameWithType: Matrix.Inverse()
  fullName: GTA.Math.Matrix.Inverse()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix Inverse()
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function Inverse() As Matrix
  overload: GTA.Math.Matrix.Inverse*
- uid: GTA.Math.Matrix.FastInvert
  commentId: M:GTA.Math.Matrix.FastInvert
  id: FastInvert
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: FastInvert()
  nameWithType: Matrix.FastInvert()
  fullName: GTA.Math.Matrix.FastInvert()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void FastInvert()
    content.vb: Public Sub FastInvert()
  overload: GTA.Math.Matrix.FastInvert*
- uid: GTA.Math.Matrix.FastInverse
  commentId: M:GTA.Math.Matrix.FastInverse
  id: FastInverse
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: FastInverse()
  nameWithType: Matrix.FastInverse()
  fullName: GTA.Math.Matrix.FastInverse()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix FastInverse()
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function FastInverse() As Matrix
  overload: GTA.Math.Matrix.FastInverse*
- uid: GTA.Math.Matrix.TransformPoint(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.TransformPoint(GTA.Math.Vector3)
  id: TransformPoint(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: TransformPoint(Vector3)
  nameWithType: Matrix.TransformPoint(Vector3)
  fullName: GTA.Math.Matrix.TransformPoint(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 TransformPoint(Vector3 point)
    parameters:
    - id: point
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function TransformPoint(point As Vector3) As Vector3
  overload: GTA.Math.Matrix.TransformPoint*
- uid: GTA.Math.Matrix.InverseTransformPoint(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.InverseTransformPoint(GTA.Math.Vector3)
  id: InverseTransformPoint(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: InverseTransformPoint(Vector3)
  nameWithType: Matrix.InverseTransformPoint(Vector3)
  fullName: GTA.Math.Matrix.InverseTransformPoint(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 InverseTransformPoint(Vector3 point)
    parameters:
    - id: point
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function InverseTransformPoint(point As Vector3) As Vector3
  overload: GTA.Math.Matrix.InverseTransformPoint*
- uid: GTA.Math.Matrix.TransformVector(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.TransformVector(GTA.Math.Vector3)
  id: TransformVector(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: TransformVector(Vector3)
  nameWithType: Matrix.TransformVector(Vector3)
  fullName: GTA.Math.Matrix.TransformVector(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 TransformVector(Vector3 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function TransformVector(vector As Vector3) As Vector3
  overload: GTA.Math.Matrix.TransformVector*
- uid: GTA.Math.Matrix.InverseTransformVector(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.InverseTransformVector(GTA.Math.Vector3)
  id: InverseTransformVector(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: InverseTransformVector(Vector3)
  nameWithType: Matrix.InverseTransformVector(Vector3)
  fullName: GTA.Math.Matrix.InverseTransformVector(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 InverseTransformVector(Vector3 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function InverseTransformVector(vector As Vector3) As Vector3
  overload: GTA.Math.Matrix.InverseTransformVector*
- uid: GTA.Math.Matrix.TransformDirection(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.TransformDirection(GTA.Math.Vector3)
  id: TransformDirection(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: TransformDirection(Vector3)
  nameWithType: Matrix.TransformDirection(Vector3)
  fullName: GTA.Math.Matrix.TransformDirection(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 TransformDirection(Vector3 direction)
    parameters:
    - id: direction
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function TransformDirection(direction As Vector3) As Vector3
  overload: GTA.Math.Matrix.TransformDirection*
- uid: GTA.Math.Matrix.InverseTransformDirection(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.InverseTransformDirection(GTA.Math.Vector3)
  id: InverseTransformDirection(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: InverseTransformDirection(Vector3)
  nameWithType: Matrix.InverseTransformDirection(Vector3)
  fullName: GTA.Math.Matrix.InverseTransformDirection(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector3 InverseTransformDirection(Vector3 direction)
    parameters:
    - id: direction
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector3
    content.vb: Public Function InverseTransformDirection(direction As Vector3) As Vector3
  overload: GTA.Math.Matrix.InverseTransformDirection*
- uid: GTA.Math.Matrix.Add(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Add(GTA.Math.Matrix,GTA.Math.Matrix)
  id: Add(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Add(Matrix, Matrix)
  nameWithType: Matrix.Add(Matrix, Matrix)
  fullName: GTA.Math.Matrix.Add(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Add(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Add(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.Add*
- uid: GTA.Math.Matrix.Subtract(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Subtract(GTA.Math.Matrix,GTA.Math.Matrix)
  id: Subtract(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(Matrix, Matrix)
  nameWithType: Matrix.Subtract(Matrix, Matrix)
  fullName: GTA.Math.Matrix.Subtract(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Subtract(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Subtract(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.Subtract*
- uid: GTA.Math.Matrix.Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  id: Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: GTA.Math.Matrix.Multiply(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Multiply(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Multiply(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.Multiply*
- uid: GTA.Math.Matrix.Multiply(GTA.Math.Matrix,System.Single)
  commentId: M:GTA.Math.Matrix.Multiply(GTA.Math.Matrix,System.Single)
  id: Multiply(GTA.Math.Matrix,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, float)
  nameWithType: Matrix.Multiply(Matrix, float)
  fullName: GTA.Math.Matrix.Multiply(GTA.Math.Matrix, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Multiply(Matrix left, float right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Multiply(left As Matrix, right As Single) As Matrix
  overload: GTA.Math.Matrix.Multiply*
  nameWithType.vb: Matrix.Multiply(Matrix, Single)
  fullName.vb: GTA.Math.Matrix.Multiply(GTA.Math.Matrix, Single)
  name.vb: Multiply(Matrix, Single)
- uid: GTA.Math.Matrix.Divide(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Divide(GTA.Math.Matrix,GTA.Math.Matrix)
  id: Divide(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Matrix)
  nameWithType: Matrix.Divide(Matrix, Matrix)
  fullName: GTA.Math.Matrix.Divide(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Divide(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Divide(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.Divide*
- uid: GTA.Math.Matrix.Divide(GTA.Math.Matrix,System.Single)
  commentId: M:GTA.Math.Matrix.Divide(GTA.Math.Matrix,System.Single)
  id: Divide(GTA.Math.Matrix,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, float)
  nameWithType: Matrix.Divide(Matrix, float)
  fullName: GTA.Math.Matrix.Divide(GTA.Math.Matrix, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Divide(Matrix left, float right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Divide(left As Matrix, right As Single) As Matrix
  overload: GTA.Math.Matrix.Divide*
  nameWithType.vb: Matrix.Divide(Matrix, Single)
  fullName.vb: GTA.Math.Matrix.Divide(GTA.Math.Matrix, Single)
  name.vb: Divide(Matrix, Single)
- uid: GTA.Math.Matrix.Negate(GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Negate(GTA.Math.Matrix)
  id: Negate(GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Negate(Matrix)
  nameWithType: Matrix.Negate(Matrix)
  fullName: GTA.Math.Matrix.Negate(GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Negate(Matrix matrix)
    parameters:
    - id: matrix
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Negate(matrix As Matrix) As Matrix
  overload: GTA.Math.Matrix.Negate*
- uid: GTA.Math.Matrix.Invert(GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Invert(GTA.Math.Matrix)
  id: Invert(GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Invert(Matrix)
  nameWithType: Matrix.Invert(Matrix)
  fullName: GTA.Math.Matrix.Invert(GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Invert(Matrix matrix)
    parameters:
    - id: matrix
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Invert(matrix As Matrix) As Matrix
  overload: GTA.Math.Matrix.Invert*
- uid: GTA.Math.Matrix.Lerp(GTA.Math.Matrix,GTA.Math.Matrix,System.Single)
  commentId: M:GTA.Math.Matrix.Lerp(GTA.Math.Matrix,GTA.Math.Matrix,System.Single)
  id: Lerp(GTA.Math.Matrix,GTA.Math.Matrix,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Lerp(Matrix, Matrix, float)
  nameWithType: Matrix.Lerp(Matrix, Matrix, float)
  fullName: GTA.Math.Matrix.Lerp(GTA.Math.Matrix, GTA.Math.Matrix, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Lerp(Matrix start, Matrix end, float amount)
    parameters:
    - id: start
      type: GTA.Math.Matrix
    - id: end
      type: GTA.Math.Matrix
    - id: amount
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Lerp(start As Matrix, [end] As Matrix, amount As Single) As Matrix
  overload: GTA.Math.Matrix.Lerp*
  nameWithType.vb: Matrix.Lerp(Matrix, Matrix, Single)
  fullName.vb: GTA.Math.Matrix.Lerp(GTA.Math.Matrix, GTA.Math.Matrix, Single)
  name.vb: Lerp(Matrix, Matrix, Single)
- uid: GTA.Math.Matrix.RotationX(System.Single)
  commentId: M:GTA.Math.Matrix.RotationX(System.Single)
  id: RotationX(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationX(float)
  nameWithType: Matrix.RotationX(float)
  fullName: GTA.Math.Matrix.RotationX(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationX(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationX(angle As Single) As Matrix
  overload: GTA.Math.Matrix.RotationX*
  nameWithType.vb: Matrix.RotationX(Single)
  fullName.vb: GTA.Math.Matrix.RotationX(Single)
  name.vb: RotationX(Single)
- uid: GTA.Math.Matrix.RotationY(System.Single)
  commentId: M:GTA.Math.Matrix.RotationY(System.Single)
  id: RotationY(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationY(float)
  nameWithType: Matrix.RotationY(float)
  fullName: GTA.Math.Matrix.RotationY(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationY(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationY(angle As Single) As Matrix
  overload: GTA.Math.Matrix.RotationY*
  nameWithType.vb: Matrix.RotationY(Single)
  fullName.vb: GTA.Math.Matrix.RotationY(Single)
  name.vb: RotationY(Single)
- uid: GTA.Math.Matrix.RotationZ(System.Single)
  commentId: M:GTA.Math.Matrix.RotationZ(System.Single)
  id: RotationZ(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationZ(float)
  nameWithType: Matrix.RotationZ(float)
  fullName: GTA.Math.Matrix.RotationZ(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationZ(float angle)
    parameters:
    - id: angle
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationZ(angle As Single) As Matrix
  overload: GTA.Math.Matrix.RotationZ*
  nameWithType.vb: Matrix.RotationZ(Single)
  fullName.vb: GTA.Math.Matrix.RotationZ(Single)
  name.vb: RotationZ(Single)
- uid: GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3,System.Single)
  commentId: M:GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3,System.Single)
  id: RotationAxis(GTA.Math.Vector3,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationAxis(Vector3, float)
  nameWithType: Matrix.RotationAxis(Vector3, float)
  fullName: GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationAxis(Vector3 axis, float angle)
    parameters:
    - id: axis
      type: GTA.Math.Vector3
    - id: angle
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationAxis(axis As Vector3, angle As Single) As Matrix
  overload: GTA.Math.Matrix.RotationAxis*
  nameWithType.vb: Matrix.RotationAxis(Vector3, Single)
  fullName.vb: GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3, Single)
  name.vb: RotationAxis(Vector3, Single)
- uid: GTA.Math.Matrix.RotationQuaternion(GTA.Math.Quaternion)
  commentId: M:GTA.Math.Matrix.RotationQuaternion(GTA.Math.Quaternion)
  id: RotationQuaternion(GTA.Math.Quaternion)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationQuaternion(Quaternion)
  nameWithType: Matrix.RotationQuaternion(Quaternion)
  fullName: GTA.Math.Matrix.RotationQuaternion(GTA.Math.Quaternion)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationQuaternion(Quaternion rotation)
    parameters:
    - id: rotation
      type: GTA.Math.Quaternion
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationQuaternion(rotation As Quaternion) As Matrix
  overload: GTA.Math.Matrix.RotationQuaternion*
- uid: GTA.Math.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)
  commentId: M:GTA.Math.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)
  id: RotationYawPitchRoll(System.Single,System.Single,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RotationYawPitchRoll(float, float, float)
  nameWithType: Matrix.RotationYawPitchRoll(float, float, float)
  fullName: GTA.Math.Matrix.RotationYawPitchRoll(float, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix RotationYawPitchRoll(float yaw, float pitch, float roll)
    parameters:
    - id: yaw
      type: System.Single
    - id: pitch
      type: System.Single
    - id: roll
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function RotationYawPitchRoll(yaw As Single, pitch As Single, roll As Single) As Matrix
  overload: GTA.Math.Matrix.RotationYawPitchRoll*
  nameWithType.vb: Matrix.RotationYawPitchRoll(Single, Single, Single)
  fullName.vb: GTA.Math.Matrix.RotationYawPitchRoll(Single, Single, Single)
  name.vb: RotationYawPitchRoll(Single, Single, Single)
- uid: GTA.Math.Matrix.Scaling(System.Single,System.Single,System.Single)
  commentId: M:GTA.Math.Matrix.Scaling(System.Single,System.Single,System.Single)
  id: Scaling(System.Single,System.Single,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Scaling(float, float, float)
  nameWithType: Matrix.Scaling(float, float, float)
  fullName: GTA.Math.Matrix.Scaling(float, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Scaling(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Scaling(x As Single, y As Single, z As Single) As Matrix
  overload: GTA.Math.Matrix.Scaling*
  nameWithType.vb: Matrix.Scaling(Single, Single, Single)
  fullName.vb: GTA.Math.Matrix.Scaling(Single, Single, Single)
  name.vb: Scaling(Single, Single, Single)
- uid: GTA.Math.Matrix.Scaling(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.Scaling(GTA.Math.Vector3)
  id: Scaling(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Scaling(Vector3)
  nameWithType: Matrix.Scaling(Vector3)
  fullName: GTA.Math.Matrix.Scaling(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Scaling(Vector3 scale)
    parameters:
    - id: scale
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Scaling(scale As Vector3) As Matrix
  overload: GTA.Math.Matrix.Scaling*
- uid: GTA.Math.Matrix.Translation(System.Single,System.Single,System.Single)
  commentId: M:GTA.Math.Matrix.Translation(System.Single,System.Single,System.Single)
  id: Translation(System.Single,System.Single,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Translation(float, float, float)
  nameWithType: Matrix.Translation(float, float, float)
  fullName: GTA.Math.Matrix.Translation(float, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Translation(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Translation(x As Single, y As Single, z As Single) As Matrix
  overload: GTA.Math.Matrix.Translation*
  nameWithType.vb: Matrix.Translation(Single, Single, Single)
  fullName.vb: GTA.Math.Matrix.Translation(Single, Single, Single)
  name.vb: Translation(Single, Single, Single)
- uid: GTA.Math.Matrix.Translation(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.Translation(GTA.Math.Vector3)
  id: Translation(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Translation(Vector3)
  nameWithType: Matrix.Translation(Vector3)
  fullName: GTA.Math.Matrix.Translation(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Translation(Vector3 amount)
    parameters:
    - id: amount
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Translation(amount As Vector3) As Matrix
  overload: GTA.Math.Matrix.Translation*
- uid: GTA.Math.Matrix.Transpose(GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Transpose(GTA.Math.Matrix)
  id: Transpose(GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Transpose(Matrix)
  nameWithType: Matrix.Transpose(Matrix)
  fullName: GTA.Math.Matrix.Transpose(GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Transpose(Matrix matrix)
    parameters:
    - id: matrix
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Function Transpose(matrix As Matrix) As Matrix
  overload: GTA.Math.Matrix.Transpose*
- uid: GTA.Math.Matrix.ApplyScale(System.Single)
  commentId: M:GTA.Math.Matrix.ApplyScale(System.Single)
  id: ApplyScale(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ApplyScale(float)
  nameWithType: Matrix.ApplyScale(float)
  fullName: GTA.Math.Matrix.ApplyScale(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix ApplyScale(float scale)
    parameters:
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function ApplyScale(scale As Single) As Matrix
  overload: GTA.Math.Matrix.ApplyScale*
  nameWithType.vb: Matrix.ApplyScale(Single)
  fullName.vb: GTA.Math.Matrix.ApplyScale(Single)
  name.vb: ApplyScale(Single)
- uid: GTA.Math.Matrix.ApplyScale(GTA.Math.Vector3)
  commentId: M:GTA.Math.Matrix.ApplyScale(GTA.Math.Vector3)
  id: ApplyScale(GTA.Math.Vector3)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ApplyScale(Vector3)
  nameWithType: Matrix.ApplyScale(Vector3)
  fullName: GTA.Math.Matrix.ApplyScale(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix ApplyScale(Vector3 scale)
    parameters:
    - id: scale
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function ApplyScale(scale As Vector3) As Matrix
  overload: GTA.Math.Matrix.ApplyScale*
- uid: GTA.Math.Matrix.GetMatrixWithoutScale
  commentId: M:GTA.Math.Matrix.GetMatrixWithoutScale
  id: GetMatrixWithoutScale
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetMatrixWithoutScale()
  nameWithType: Matrix.GetMatrixWithoutScale()
  fullName: GTA.Math.Matrix.GetMatrixWithoutScale()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix GetMatrixWithoutScale()
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function GetMatrixWithoutScale() As Matrix
  overload: GTA.Math.Matrix.GetMatrixWithoutScale*
- uid: GTA.Math.Matrix.GetMatrixWithoutScale(System.Single)
  commentId: M:GTA.Math.Matrix.GetMatrixWithoutScale(System.Single)
  id: GetMatrixWithoutScale(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetMatrixWithoutScale(float)
  nameWithType: Matrix.GetMatrixWithoutScale(float)
  fullName: GTA.Math.Matrix.GetMatrixWithoutScale(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix GetMatrixWithoutScale(float tolerance)
    parameters:
    - id: tolerance
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function GetMatrixWithoutScale(tolerance As Single) As Matrix
  overload: GTA.Math.Matrix.GetMatrixWithoutScale*
  nameWithType.vb: Matrix.GetMatrixWithoutScale(Single)
  fullName.vb: GTA.Math.Matrix.GetMatrixWithoutScale(Single)
  name.vb: GetMatrixWithoutScale(Single)
- uid: GTA.Math.Matrix.RemoveTranslation
  commentId: M:GTA.Math.Matrix.RemoveTranslation
  id: RemoveTranslation
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RemoveTranslation()
  nameWithType: Matrix.RemoveTranslation()
  fullName: GTA.Math.Matrix.RemoveTranslation()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Matrix RemoveTranslation()
    return:
      type: GTA.Math.Matrix
    content.vb: Public Function RemoveTranslation() As Matrix
  overload: GTA.Math.Matrix.RemoveTranslation*
- uid: GTA.Math.Matrix.RemoveScaling
  commentId: M:GTA.Math.Matrix.RemoveScaling
  id: RemoveScaling
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RemoveScaling()
  nameWithType: Matrix.RemoveScaling()
  fullName: GTA.Math.Matrix.RemoveScaling()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void RemoveScaling()
    content.vb: Public Sub RemoveScaling()
  overload: GTA.Math.Matrix.RemoveScaling*
- uid: GTA.Math.Matrix.RemoveScaling(System.Single)
  commentId: M:GTA.Math.Matrix.RemoveScaling(System.Single)
  id: RemoveScaling(System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: RemoveScaling(float)
  nameWithType: Matrix.RemoveScaling(float)
  fullName: GTA.Math.Matrix.RemoveScaling(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void RemoveScaling(float tolerance)
    parameters:
    - id: tolerance
      type: System.Single
    content.vb: Public Sub RemoveScaling(tolerance As Single)
  overload: GTA.Math.Matrix.RemoveScaling*
  nameWithType.vb: Matrix.RemoveScaling(Single)
  fullName.vb: GTA.Math.Matrix.RemoveScaling(Single)
  name.vb: RemoveScaling(Single)
- uid: GTA.Math.Matrix.op_UnaryNegation(GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_UnaryNegation(GTA.Math.Matrix)
  id: op_UnaryNegation(GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator -(Matrix)
  nameWithType: Matrix.operator -(Matrix)
  fullName: GTA.Math.Matrix.operator -(GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator -(Matrix matrix)
    parameters:
    - id: matrix
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator -(matrix As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_UnaryNegation*
  nameWithType.vb: Matrix.-(Matrix)
  fullName.vb: GTA.Math.Matrix.-(GTA.Math.Matrix)
  name.vb: -(Matrix)
- uid: GTA.Math.Matrix.op_Addition(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Addition(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Addition(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator +(Matrix, Matrix)
  nameWithType: Matrix.operator +(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator +(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator +(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator +(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_Addition*
  nameWithType.vb: Matrix.+(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix.+(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: +(Matrix, Matrix)
- uid: GTA.Math.Matrix.op_Subtraction(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Subtraction(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Subtraction(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator -(Matrix, Matrix)
  nameWithType: Matrix.operator -(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator -(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator -(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator -(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_Subtraction*
  nameWithType.vb: Matrix.-(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix.-(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: -(Matrix, Matrix)
- uid: GTA.Math.Matrix.op_Division(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Division(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Division(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator /(Matrix, Matrix)
  nameWithType: Matrix.operator /(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator /(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator /(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator /(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_Division*
  nameWithType.vb: Matrix./(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix./(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: /(Matrix, Matrix)
- uid: GTA.Math.Matrix.op_Division(GTA.Math.Matrix,System.Single)
  commentId: M:GTA.Math.Matrix.op_Division(GTA.Math.Matrix,System.Single)
  id: op_Division(GTA.Math.Matrix,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator /(Matrix, float)
  nameWithType: Matrix.operator /(Matrix, float)
  fullName: GTA.Math.Matrix.operator /(GTA.Math.Matrix, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator /(Matrix left, float right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator /(left As Matrix, right As Single) As Matrix
  overload: GTA.Math.Matrix.op_Division*
  nameWithType.vb: Matrix./(Matrix, Single)
  fullName.vb: GTA.Math.Matrix./(GTA.Math.Matrix, Single)
  name.vb: /(Matrix, Single)
- uid: GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Multiply(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator *(Matrix, Matrix)
  nameWithType: Matrix.operator *(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator *(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator *(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator *(left As Matrix, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_Multiply*
  nameWithType.vb: Matrix.*(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix.*(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: '*(Matrix, Matrix)'
- uid: GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,System.Single)
  commentId: M:GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,System.Single)
  id: op_Multiply(GTA.Math.Matrix,System.Single)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator *(Matrix, float)
  nameWithType: Matrix.operator *(Matrix, float)
  fullName: GTA.Math.Matrix.operator *(GTA.Math.Matrix, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator *(Matrix left, float right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: System.Single
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator *(left As Matrix, right As Single) As Matrix
  overload: GTA.Math.Matrix.op_Multiply*
  nameWithType.vb: Matrix.*(Matrix, Single)
  fullName.vb: GTA.Math.Matrix.*(GTA.Math.Matrix, Single)
  name.vb: '*(Matrix, Single)'
- uid: GTA.Math.Matrix.op_Multiply(System.Single,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Multiply(System.Single,GTA.Math.Matrix)
  id: op_Multiply(System.Single,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator *(float, Matrix)
  nameWithType: Matrix.operator *(float, Matrix)
  fullName: GTA.Math.Matrix.operator *(float, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix operator *(float left, Matrix right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: GTA.Math.Matrix
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared Operator *(left As Single, right As Matrix) As Matrix
  overload: GTA.Math.Matrix.op_Multiply*
  nameWithType.vb: Matrix.*(Single, Matrix)
  fullName.vb: GTA.Math.Matrix.*(Single, GTA.Math.Matrix)
  name.vb: '*(Single, Matrix)'
- uid: GTA.Math.Matrix.op_Equality(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Equality(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Equality(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator ==(Matrix, Matrix)
  nameWithType: Matrix.operator ==(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator ==(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator ==(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Matrix, right As Matrix) As Boolean
  overload: GTA.Math.Matrix.op_Equality*
  nameWithType.vb: Matrix.=(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix.=(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: =(Matrix, Matrix)
- uid: GTA.Math.Matrix.op_Inequality(GTA.Math.Matrix,GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.op_Inequality(GTA.Math.Matrix,GTA.Math.Matrix)
  id: op_Inequality(GTA.Math.Matrix,GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: operator !=(Matrix, Matrix)
  nameWithType: Matrix.operator !=(Matrix, Matrix)
  fullName: GTA.Math.Matrix.operator !=(GTA.Math.Matrix, GTA.Math.Matrix)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator !=(Matrix left, Matrix right)
    parameters:
    - id: left
      type: GTA.Math.Matrix
    - id: right
      type: GTA.Math.Matrix
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Matrix, right As Matrix) As Boolean
  overload: GTA.Math.Matrix.op_Inequality*
  nameWithType.vb: Matrix.<>(Matrix, Matrix)
  fullName.vb: GTA.Math.Matrix.<>(GTA.Math.Matrix, GTA.Math.Matrix)
  name.vb: <>(Matrix, Matrix)
- uid: GTA.Math.Matrix.ToArray
  commentId: M:GTA.Math.Matrix.ToArray
  id: ToArray
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: Matrix.ToArray()
  fullName: GTA.Math.Matrix.ToArray()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float[] ToArray()
    return:
      type: System.Single[]
    content.vb: Public Function ToArray() As Single()
  overload: GTA.Math.Matrix.ToArray*
- uid: GTA.Math.Matrix.ToString
  commentId: M:GTA.Math.Matrix.ToString
  id: ToString
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: GTA.Math.Matrix.ToString()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: GTA.Math.Matrix.ToString*
- uid: GTA.Math.Matrix.ToString(System.String)
  commentId: M:GTA.Math.Matrix.ToString(System.String)
  id: ToString(System.String)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Matrix.ToString(string)
  fullName: GTA.Math.Matrix.ToString(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: GTA.Math.Matrix.ToString*
  nameWithType.vb: Matrix.ToString(String)
  fullName.vb: GTA.Math.Matrix.ToString(String)
  name.vb: ToString(String)
- uid: GTA.Math.Matrix.ToString(System.String,System.IFormatProvider)
  commentId: M:GTA.Math.Matrix.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Matrix.ToString(string, IFormatProvider)
  fullName: GTA.Math.Matrix.ToString(string, System.IFormatProvider)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider provider)
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
  overload: GTA.Math.Matrix.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Matrix.ToString(String, IFormatProvider)
  fullName.vb: GTA.Math.Matrix.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: GTA.Math.Matrix.GetHashCode
  commentId: M:GTA.Math.Matrix.GetHashCode
  id: GetHashCode
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: GTA.Math.Matrix.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.Math.Matrix.GetHashCode*
- uid: GTA.Math.Matrix.Equals(System.Object)
  commentId: M:GTA.Math.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Matrix.Equals(object)
  fullName: GTA.Math.Matrix.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.Math.Matrix.Equals*
  nameWithType.vb: Matrix.Equals(Object)
  fullName.vb: GTA.Math.Matrix.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Math.Matrix.Equals(GTA.Math.Matrix)
  commentId: M:GTA.Math.Matrix.Equals(GTA.Math.Matrix)
  id: Equals(GTA.Math.Matrix)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: GTA.Math.Matrix.Equals(GTA.Math.Matrix)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly bool Equals(Matrix other)
    parameters:
    - id: other
      type: GTA.Math.Matrix
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Matrix) As Boolean
  overload: GTA.Math.Matrix.Equals*
  implements:
  - System.IEquatable{GTA.Math.Matrix}.Equals(GTA.Math.Matrix)
- uid: GTA.Math.Matrix.Zero
  commentId: P:GTA.Math.Matrix.Zero
  id: Zero
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Matrix.Zero
  fullName: GTA.Math.Matrix.Zero
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Zero { get; }
    parameters: []
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared ReadOnly Property Zero As Matrix
  overload: GTA.Math.Matrix.Zero*
- uid: GTA.Math.Matrix.Identity
  commentId: P:GTA.Math.Matrix.Identity
  id: Identity
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Matrix.Identity
  fullName: GTA.Math.Matrix.Identity
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Matrix Identity { get; }
    parameters: []
    return:
      type: GTA.Math.Matrix
    content.vb: Public Shared ReadOnly Property Identity As Matrix
  overload: GTA.Math.Matrix.Identity*
- uid: GTA.Math.Matrix.Item(System.Int32)
  commentId: P:GTA.Math.Matrix.Item(System.Int32)
  id: Item(System.Int32)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Matrix.this[int]
  fullName: GTA.Math.Matrix.this[int]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Default Property this[](index As Integer) As Single
  overload: GTA.Math.Matrix.Item*
  nameWithType.vb: Matrix.this[](Integer)
  fullName.vb: GTA.Math.Matrix.this[](Integer)
  name.vb: this[](Integer)
- uid: GTA.Math.Matrix.Item(System.Int32,System.Int32)
  commentId: P:GTA.Math.Matrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: Matrix.this[int, int]
  fullName: GTA.Math.Matrix.this[int, int]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float this[int row, int column] { readonly get; set; }
    parameters:
    - id: row
      type: System.Int32
    - id: column
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Default Property this[](row As Integer, column As Integer) As Single
  overload: GTA.Math.Matrix.Item*
  nameWithType.vb: Matrix.this[](Integer, Integer)
  fullName.vb: GTA.Math.Matrix.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: GTA.Math.Matrix.IsIdentity
  commentId: P:GTA.Math.Matrix.IsIdentity
  id: IsIdentity
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: GTA.Math.Matrix.IsIdentity
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly bool IsIdentity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIdentity As Boolean
  overload: GTA.Math.Matrix.IsIdentity*
- uid: GTA.Math.Matrix.HasInverse
  commentId: P:GTA.Math.Matrix.HasInverse
  id: HasInverse
  parent: GTA.Math.Matrix
  langs:
  - csharp
  - vb
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: GTA.Math.Matrix.HasInverse
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly bool HasInverse { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasInverse As Boolean
  overload: GTA.Math.Matrix.HasInverse*
references:
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: System.IEquatable{GTA.Math.Matrix}
  commentId: T:System.IEquatable{GTA.Math.Matrix}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Matrix>
  nameWithType: IEquatable<Matrix>
  fullName: System.IEquatable<GTA.Math.Matrix>
  nameWithType.vb: IEquatable(Of Matrix)
  fullName.vb: System.IEquatable(Of GTA.Math.Matrix)
  name.vb: IEquatable(Of Matrix)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.Math.Matrix
    name: Matrix
    isExternal: true
    href: GTA.Math.Matrix.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.Math.Matrix
    name: Matrix
    isExternal: true
    href: GTA.Math.Matrix.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Math.Matrix.#ctor*
  commentId: Overload:GTA.Math.Matrix.#ctor
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix__ctor_System_Single___
  name: Matrix
  nameWithType: Matrix.Matrix
  fullName: GTA.Math.Matrix.Matrix
  nameWithType.vb: Matrix.New
  fullName.vb: GTA.Math.Matrix.New
  name.vb: New
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: GTA.Math.Matrix.GetOrigin*
  commentId: Overload:GTA.Math.Matrix.GetOrigin
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_GetOrigin
  name: GetOrigin
  nameWithType: Matrix.GetOrigin
  fullName: GTA.Math.Matrix.GetOrigin
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math.Matrix.SetOrigin*
  commentId: Overload:GTA.Math.Matrix.SetOrigin
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_SetOrigin_GTA_Math_Vector3_
  name: SetOrigin
  nameWithType: Matrix.SetOrigin
  fullName: GTA.Math.Matrix.SetOrigin
- uid: GTA.Math.Matrix.GetScaleVector*
  commentId: Overload:GTA.Math.Matrix.GetScaleVector
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_GetScaleVector
  name: GetScaleVector
  nameWithType: Matrix.GetScaleVector
  fullName: GTA.Math.Matrix.GetScaleVector
- uid: GTA.Math.Matrix.Determinant*
  commentId: Overload:GTA.Math.Matrix.Determinant
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Determinant
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: GTA.Math.Matrix.Determinant
- uid: GTA.Math.Matrix.Invert*
  commentId: Overload:GTA.Math.Matrix.Invert
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Invert
  name: Invert
  nameWithType: Matrix.Invert
  fullName: GTA.Math.Matrix.Invert
- uid: GTA.Math.Matrix.Inverse*
  commentId: Overload:GTA.Math.Matrix.Inverse
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Inverse
  name: Inverse
  nameWithType: Matrix.Inverse
  fullName: GTA.Math.Matrix.Inverse
- uid: GTA.Math.Matrix
  commentId: T:GTA.Math.Matrix
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Matrix.html
  name: Matrix
  nameWithType: Matrix
  fullName: GTA.Math.Matrix
- uid: GTA.Math.Matrix.FastInvert*
  commentId: Overload:GTA.Math.Matrix.FastInvert
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_FastInvert
  name: FastInvert
  nameWithType: Matrix.FastInvert
  fullName: GTA.Math.Matrix.FastInvert
- uid: GTA.Math.Matrix.FastInverse*
  commentId: Overload:GTA.Math.Matrix.FastInverse
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_FastInverse
  name: FastInverse
  nameWithType: Matrix.FastInverse
  fullName: GTA.Math.Matrix.FastInverse
- uid: GTA.Math.Matrix.TransformPoint*
  commentId: Overload:GTA.Math.Matrix.TransformPoint
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_TransformPoint_GTA_Math_Vector3_
  name: TransformPoint
  nameWithType: Matrix.TransformPoint
  fullName: GTA.Math.Matrix.TransformPoint
- uid: GTA.Math.Matrix.InverseTransformPoint*
  commentId: Overload:GTA.Math.Matrix.InverseTransformPoint
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_InverseTransformPoint_GTA_Math_Vector3_
  name: InverseTransformPoint
  nameWithType: Matrix.InverseTransformPoint
  fullName: GTA.Math.Matrix.InverseTransformPoint
- uid: GTA.Math.Matrix.TransformVector*
  commentId: Overload:GTA.Math.Matrix.TransformVector
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_TransformVector_GTA_Math_Vector3_
  name: TransformVector
  nameWithType: Matrix.TransformVector
  fullName: GTA.Math.Matrix.TransformVector
- uid: GTA.Math.Matrix.InverseTransformVector*
  commentId: Overload:GTA.Math.Matrix.InverseTransformVector
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_InverseTransformVector_GTA_Math_Vector3_
  name: InverseTransformVector
  nameWithType: Matrix.InverseTransformVector
  fullName: GTA.Math.Matrix.InverseTransformVector
- uid: GTA.Math.Matrix.TransformDirection*
  commentId: Overload:GTA.Math.Matrix.TransformDirection
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_TransformDirection_GTA_Math_Vector3_
  name: TransformDirection
  nameWithType: Matrix.TransformDirection
  fullName: GTA.Math.Matrix.TransformDirection
- uid: GTA.Math.Matrix.InverseTransformDirection*
  commentId: Overload:GTA.Math.Matrix.InverseTransformDirection
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_InverseTransformDirection_GTA_Math_Vector3_
  name: InverseTransformDirection
  nameWithType: Matrix.InverseTransformDirection
  fullName: GTA.Math.Matrix.InverseTransformDirection
- uid: GTA.Math.Matrix.Add*
  commentId: Overload:GTA.Math.Matrix.Add
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Add_GTA_Math_Matrix_GTA_Math_Matrix_
  name: Add
  nameWithType: Matrix.Add
  fullName: GTA.Math.Matrix.Add
- uid: GTA.Math.Matrix.Subtract*
  commentId: Overload:GTA.Math.Matrix.Subtract
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Subtract_GTA_Math_Matrix_GTA_Math_Matrix_
  name: Subtract
  nameWithType: Matrix.Subtract
  fullName: GTA.Math.Matrix.Subtract
- uid: GTA.Math.Matrix.Multiply*
  commentId: Overload:GTA.Math.Matrix.Multiply
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Multiply_GTA_Math_Matrix_GTA_Math_Matrix_
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: GTA.Math.Matrix.Multiply
- uid: GTA.Math.Matrix.Divide*
  commentId: Overload:GTA.Math.Matrix.Divide
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Divide_GTA_Math_Matrix_GTA_Math_Matrix_
  name: Divide
  nameWithType: Matrix.Divide
  fullName: GTA.Math.Matrix.Divide
- uid: GTA.Math.Matrix.Negate*
  commentId: Overload:GTA.Math.Matrix.Negate
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Negate_GTA_Math_Matrix_
  name: Negate
  nameWithType: Matrix.Negate
  fullName: GTA.Math.Matrix.Negate
- uid: GTA.Math.Matrix.Lerp*
  commentId: Overload:GTA.Math.Matrix.Lerp
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Lerp_GTA_Math_Matrix_GTA_Math_Matrix_System_Single_
  name: Lerp
  nameWithType: Matrix.Lerp
  fullName: GTA.Math.Matrix.Lerp
- uid: GTA.Math.Matrix.RotationX*
  commentId: Overload:GTA.Math.Matrix.RotationX
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationX_System_Single_
  name: RotationX
  nameWithType: Matrix.RotationX
  fullName: GTA.Math.Matrix.RotationX
- uid: GTA.Math.Matrix.RotationY*
  commentId: Overload:GTA.Math.Matrix.RotationY
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationY_System_Single_
  name: RotationY
  nameWithType: Matrix.RotationY
  fullName: GTA.Math.Matrix.RotationY
- uid: GTA.Math.Matrix.RotationZ*
  commentId: Overload:GTA.Math.Matrix.RotationZ
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationZ_System_Single_
  name: RotationZ
  nameWithType: Matrix.RotationZ
  fullName: GTA.Math.Matrix.RotationZ
- uid: GTA.Math.Matrix.RotationAxis*
  commentId: Overload:GTA.Math.Matrix.RotationAxis
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationAxis_GTA_Math_Vector3_System_Single_
  name: RotationAxis
  nameWithType: Matrix.RotationAxis
  fullName: GTA.Math.Matrix.RotationAxis
- uid: GTA.Math.Matrix.RotationQuaternion*
  commentId: Overload:GTA.Math.Matrix.RotationQuaternion
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationQuaternion_GTA_Math_Quaternion_
  name: RotationQuaternion
  nameWithType: Matrix.RotationQuaternion
  fullName: GTA.Math.Matrix.RotationQuaternion
- uid: GTA.Math.Quaternion
  commentId: T:GTA.Math.Quaternion
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: GTA.Math.Quaternion
- uid: GTA.Math.Matrix.RotationYawPitchRoll*
  commentId: Overload:GTA.Math.Matrix.RotationYawPitchRoll
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RotationYawPitchRoll_System_Single_System_Single_System_Single_
  name: RotationYawPitchRoll
  nameWithType: Matrix.RotationYawPitchRoll
  fullName: GTA.Math.Matrix.RotationYawPitchRoll
- uid: GTA.Math.Matrix.Scaling*
  commentId: Overload:GTA.Math.Matrix.Scaling
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Scaling_System_Single_System_Single_System_Single_
  name: Scaling
  nameWithType: Matrix.Scaling
  fullName: GTA.Math.Matrix.Scaling
- uid: GTA.Math.Matrix.Translation*
  commentId: Overload:GTA.Math.Matrix.Translation
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Translation_System_Single_System_Single_System_Single_
  name: Translation
  nameWithType: Matrix.Translation
  fullName: GTA.Math.Matrix.Translation
- uid: GTA.Math.Matrix.Transpose*
  commentId: Overload:GTA.Math.Matrix.Transpose
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Transpose_GTA_Math_Matrix_
  name: Transpose
  nameWithType: Matrix.Transpose
  fullName: GTA.Math.Matrix.Transpose
- uid: GTA.Math.Matrix.ApplyScale*
  commentId: Overload:GTA.Math.Matrix.ApplyScale
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_ApplyScale_System_Single_
  name: ApplyScale
  nameWithType: Matrix.ApplyScale
  fullName: GTA.Math.Matrix.ApplyScale
- uid: GTA.Math.Matrix.GetMatrixWithoutScale*
  commentId: Overload:GTA.Math.Matrix.GetMatrixWithoutScale
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_GetMatrixWithoutScale
  name: GetMatrixWithoutScale
  nameWithType: Matrix.GetMatrixWithoutScale
  fullName: GTA.Math.Matrix.GetMatrixWithoutScale
- uid: GTA.Math.Matrix.RemoveTranslation*
  commentId: Overload:GTA.Math.Matrix.RemoveTranslation
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RemoveTranslation
  name: RemoveTranslation
  nameWithType: Matrix.RemoveTranslation
  fullName: GTA.Math.Matrix.RemoveTranslation
- uid: GTA.Math.Matrix.RemoveScaling*
  commentId: Overload:GTA.Math.Matrix.RemoveScaling
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_RemoveScaling
  name: RemoveScaling
  nameWithType: Matrix.RemoveScaling
  fullName: GTA.Math.Matrix.RemoveScaling
- uid: GTA.Math.Matrix.op_UnaryNegation*
  commentId: Overload:GTA.Math.Matrix.op_UnaryNegation
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_UnaryNegation_GTA_Math_Matrix_
  name: operator -
  nameWithType: Matrix.operator -
  fullName: GTA.Math.Matrix.operator -
  nameWithType.vb: Matrix.-
  fullName.vb: GTA.Math.Matrix.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_UnaryNegation*
    name: '-'
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_UnaryNegation_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.op_Addition*
  commentId: Overload:GTA.Math.Matrix.op_Addition
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Addition_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator +
  nameWithType: Matrix.operator +
  fullName: GTA.Math.Matrix.operator +
  nameWithType.vb: Matrix.+
  fullName.vb: GTA.Math.Matrix.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Addition*
    name: +
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Addition_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.op_Subtraction*
  commentId: Overload:GTA.Math.Matrix.op_Subtraction
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Subtraction_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator -
  nameWithType: Matrix.operator -
  fullName: GTA.Math.Matrix.operator -
  nameWithType.vb: Matrix.-
  fullName.vb: GTA.Math.Matrix.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Subtraction*
    name: '-'
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Subtraction_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.op_Division*
  commentId: Overload:GTA.Math.Matrix.op_Division
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Division_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator /
  nameWithType: Matrix.operator /
  fullName: GTA.Math.Matrix.operator /
  nameWithType.vb: Matrix./
  fullName.vb: GTA.Math.Matrix./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Division*
    name: /
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Division_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.op_Multiply*
  commentId: Overload:GTA.Math.Matrix.op_Multiply
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Multiply_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator *
  nameWithType: Matrix.operator *
  fullName: GTA.Math.Matrix.operator *
  nameWithType.vb: Matrix.*
  fullName.vb: GTA.Math.Matrix.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Multiply*
    name: '*'
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Multiply_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.op_Equality*
  commentId: Overload:GTA.Math.Matrix.op_Equality
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Equality_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator ==
  nameWithType: Matrix.operator ==
  fullName: GTA.Math.Matrix.operator ==
  nameWithType.vb: Matrix.=
  fullName.vb: GTA.Math.Matrix.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Equality_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.Math.Matrix.op_Inequality*
  commentId: Overload:GTA.Math.Matrix.op_Inequality
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Inequality_GTA_Math_Matrix_GTA_Math_Matrix_
  name: operator !=
  nameWithType: Matrix.operator !=
  fullName: GTA.Math.Matrix.operator !=
  nameWithType.vb: Matrix.<>
  fullName.vb: GTA.Math.Matrix.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Matrix.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Math.Matrix.html#GTA_Math_Matrix_op_Inequality_GTA_Math_Matrix_GTA_Math_Matrix_
- uid: GTA.Math.Matrix.ToArray*
  commentId: Overload:GTA.Math.Matrix.ToArray
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_ToArray
  name: ToArray
  nameWithType: Matrix.ToArray
  fullName: GTA.Math.Matrix.ToArray
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: GTA.Math.Matrix.ToString*
  commentId: Overload:GTA.Math.Matrix.ToString
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_ToString
  name: ToString
  nameWithType: Matrix.ToString
  fullName: GTA.Math.Matrix.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.Math.Matrix.GetHashCode*
  commentId: Overload:GTA.Math.Matrix.GetHashCode
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_GetHashCode
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
  fullName: GTA.Math.Matrix.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Math.Matrix.Equals*
  commentId: Overload:GTA.Math.Matrix.Equals
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Equals_System_Object_
  name: Equals
  nameWithType: Matrix.Equals
  fullName: GTA.Math.Matrix.Equals
- uid: System.IEquatable{GTA.Math.Matrix}.Equals(GTA.Math.Matrix)
  commentId: M:System.IEquatable{GTA.Math.Matrix}.Equals(GTA.Math.Matrix)
  parent: System.IEquatable{GTA.Math.Matrix}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Matrix)
  nameWithType: IEquatable<Matrix>.Equals(Matrix)
  fullName: System.IEquatable<GTA.Math.Matrix>.Equals(GTA.Math.Matrix)
  nameWithType.vb: IEquatable(Of Matrix).Equals(Matrix)
  fullName.vb: System.IEquatable(Of GTA.Math.Matrix).Equals(GTA.Math.Matrix)
  spec.csharp:
  - uid: System.IEquatable{GTA.Math.Matrix}.Equals(GTA.Math.Matrix)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Matrix
    name: Matrix
    isExternal: true
    href: GTA.Math.Matrix.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.Math.Matrix}.Equals(GTA.Math.Matrix)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Matrix
    name: Matrix
    isExternal: true
    href: GTA.Math.Matrix.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: GTA.Math.Matrix.Zero*
  commentId: Overload:GTA.Math.Matrix.Zero
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Zero
  name: Zero
  nameWithType: Matrix.Zero
  fullName: GTA.Math.Matrix.Zero
- uid: GTA.Math.Matrix.Identity*
  commentId: Overload:GTA.Math.Matrix.Identity
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Identity
  name: Identity
  nameWithType: Matrix.Identity
  fullName: GTA.Math.Matrix.Identity
- uid: GTA.Math.Matrix.Item*
  commentId: Overload:GTA.Math.Matrix.Item
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_Item_System_Int32_
  name: this
  nameWithType: Matrix.this
  fullName: GTA.Math.Matrix.this
  nameWithType.vb: Matrix.this[]
  fullName.vb: GTA.Math.Matrix.this[]
  name.vb: this[]
- uid: GTA.Math.Matrix.IsIdentity*
  commentId: Overload:GTA.Math.Matrix.IsIdentity
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_IsIdentity
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: GTA.Math.Matrix.IsIdentity
- uid: GTA.Math.Matrix.HasInverse*
  commentId: Overload:GTA.Math.Matrix.HasInverse
  isExternal: true
  href: GTA.Math.Matrix.html#GTA_Math_Matrix_HasInverse
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: GTA.Math.Matrix.HasInverse
