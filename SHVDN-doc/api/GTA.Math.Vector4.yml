### YamlMime:ManagedReference
items:
- uid: GTA.Math.Vector4
  commentId: T:GTA.Math.Vector4
  id: Vector4
  parent: GTA.Math
  children:
  - GTA.Math.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - GTA.Math.Vector4.Clamp(GTA.Math.Vector4,GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.Dot(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.Equals(GTA.Math.Vector4)
  - GTA.Math.Vector4.Equals(System.Object)
  - GTA.Math.Vector4.GetHashCode
  - GTA.Math.Vector4.Item(System.Int32)
  - GTA.Math.Vector4.Length
  - GTA.Math.Vector4.LengthSquared
  - GTA.Math.Vector4.Lerp(GTA.Math.Vector4,GTA.Math.Vector4,System.Single)
  - GTA.Math.Vector4.Max(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.Min(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.Normalize
  - GTA.Math.Vector4.Normalize(GTA.Math.Vector4)
  - GTA.Math.Vector4.Normalized
  - GTA.Math.Vector4.One
  - GTA.Math.Vector4.ToString
  - GTA.Math.Vector4.ToString(System.String)
  - GTA.Math.Vector4.ToString(System.String,System.IFormatProvider)
  - GTA.Math.Vector4.W
  - GTA.Math.Vector4.X
  - GTA.Math.Vector4.Y
  - GTA.Math.Vector4.Z
  - GTA.Math.Vector4.Zero
  - GTA.Math.Vector4.op_Addition(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.op_Division(GTA.Math.Vector4,System.Single)
  - GTA.Math.Vector4.op_Equality(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.op_Explicit(GTA.Math.Vector2)~GTA.Math.Vector4
  - GTA.Math.Vector4.op_Explicit(GTA.Math.Vector3)~GTA.Math.Vector4
  - GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector2
  - GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector3
  - GTA.Math.Vector4.op_Inequality(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.op_Multiply(GTA.Math.Vector4,System.Single)
  - GTA.Math.Vector4.op_Multiply(System.Single,GTA.Math.Vector4)
  - GTA.Math.Vector4.op_Subtraction(GTA.Math.Vector4,GTA.Math.Vector4)
  - GTA.Math.Vector4.op_UnaryNegation(GTA.Math.Vector4)
  langs:
  - csharp
  - vb
  name: Vector4
  nameWithType: Vector4
  fullName: GTA.Math.Vector4
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: 'public struct Vector4 : IEquatable<Vector4>, IFormattable'
    content.vb: Public Structure Vector4 Implements IEquatable(Of Vector4), IFormattable
  implements:
  - System.IEquatable{GTA.Math.Vector4}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Math.Vector4.X
  commentId: F:GTA.Math.Vector4.X
  id: X
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector4.X
  fullName: GTA.Math.Vector4.X
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float X
    return:
      type: System.Single
    content.vb: Public X As Single
- uid: GTA.Math.Vector4.Y
  commentId: F:GTA.Math.Vector4.Y
  id: Y
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector4.Y
  fullName: GTA.Math.Vector4.Y
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float Y
    return:
      type: System.Single
    content.vb: Public Y As Single
- uid: GTA.Math.Vector4.Z
  commentId: F:GTA.Math.Vector4.Z
  id: Z
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector4.Z
  fullName: GTA.Math.Vector4.Z
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float Z
    return:
      type: System.Single
    content.vb: Public Z As Single
- uid: GTA.Math.Vector4.W
  commentId: F:GTA.Math.Vector4.W
  id: W
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Vector4.W
  fullName: GTA.Math.Vector4.W
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float W
    return:
      type: System.Single
    content.vb: Public W As Single
- uid: GTA.Math.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:GTA.Math.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(float, float, float, float)
  nameWithType: Vector4.Vector4(float, float, float, float)
  fullName: GTA.Math.Vector4.Vector4(float, float, float, float)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public Vector4(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    - id: w
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: GTA.Math.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Single, Single, Single, Single)
  fullName.vb: GTA.Math.Vector4.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: GTA.Math.Vector4.Length
  commentId: M:GTA.Math.Vector4.Length
  id: Length
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Vector4.Length()
  fullName: GTA.Math.Vector4.Length()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float Length()
    return:
      type: System.Single
    content.vb: Public Function Length() As Single
  overload: GTA.Math.Vector4.Length*
- uid: GTA.Math.Vector4.LengthSquared
  commentId: M:GTA.Math.Vector4.LengthSquared
  id: LengthSquared
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: GTA.Math.Vector4.LengthSquared()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float LengthSquared()
    return:
      type: System.Single
    content.vb: Public Function LengthSquared() As Single
  overload: GTA.Math.Vector4.LengthSquared*
- uid: GTA.Math.Vector4.Normalize
  commentId: M:GTA.Math.Vector4.Normalize
  id: Normalize
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector4.Normalize()
  fullName: GTA.Math.Vector4.Normalize()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: GTA.Math.Vector4.Normalize*
- uid: GTA.Math.Vector4.Clamp(GTA.Math.Vector4,GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Clamp(GTA.Math.Vector4,GTA.Math.Vector4,GTA.Math.Vector4)
  id: Clamp(GTA.Math.Vector4,GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(Vector4, Vector4, Vector4)
  nameWithType: Vector4.Clamp(Vector4, Vector4, Vector4)
  fullName: GTA.Math.Vector4.Clamp(GTA.Math.Vector4, GTA.Math.Vector4, GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Clamp(Vector4 value, Vector4 min, Vector4 max)
    parameters:
    - id: value
      type: GTA.Math.Vector4
    - id: min
      type: GTA.Math.Vector4
    - id: max
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Function Clamp(value As Vector4, min As Vector4, max As Vector4) As Vector4
  overload: GTA.Math.Vector4.Clamp*
- uid: GTA.Math.Vector4.Lerp(GTA.Math.Vector4,GTA.Math.Vector4,System.Single)
  commentId: M:GTA.Math.Vector4.Lerp(GTA.Math.Vector4,GTA.Math.Vector4,System.Single)
  id: Lerp(GTA.Math.Vector4,GTA.Math.Vector4,System.Single)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(Vector4, Vector4, float)
  nameWithType: Vector4.Lerp(Vector4, Vector4, float)
  fullName: GTA.Math.Vector4.Lerp(GTA.Math.Vector4, GTA.Math.Vector4, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Lerp(Vector4 start, Vector4 end, float amount)
    parameters:
    - id: start
      type: GTA.Math.Vector4
    - id: end
      type: GTA.Math.Vector4
    - id: amount
      type: System.Single
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Function Lerp(start As Vector4, [end] As Vector4, amount As Single) As Vector4
  overload: GTA.Math.Vector4.Lerp*
  nameWithType.vb: Vector4.Lerp(Vector4, Vector4, Single)
  fullName.vb: GTA.Math.Vector4.Lerp(GTA.Math.Vector4, GTA.Math.Vector4, Single)
  name.vb: Lerp(Vector4, Vector4, Single)
- uid: GTA.Math.Vector4.Normalize(GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Normalize(GTA.Math.Vector4)
  id: Normalize(GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: GTA.Math.Vector4.Normalize(GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Normalize(Vector4 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Function Normalize(vector As Vector4) As Vector4
  overload: GTA.Math.Vector4.Normalize*
- uid: GTA.Math.Vector4.Dot(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Dot(GTA.Math.Vector4,GTA.Math.Vector4)
  id: Dot(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Dot(Vector4, Vector4)
  nameWithType: Vector4.Dot(Vector4, Vector4)
  fullName: GTA.Math.Vector4.Dot(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float Dot(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(left As Vector4, right As Vector4) As Single
  overload: GTA.Math.Vector4.Dot*
- uid: GTA.Math.Vector4.Min(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Min(GTA.Math.Vector4,GTA.Math.Vector4)
  id: Min(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Min(Vector4, Vector4)
  nameWithType: Vector4.Min(Vector4, Vector4)
  fullName: GTA.Math.Vector4.Min(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Min(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Function Min(left As Vector4, right As Vector4) As Vector4
  overload: GTA.Math.Vector4.Min*
- uid: GTA.Math.Vector4.Max(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Max(GTA.Math.Vector4,GTA.Math.Vector4)
  id: Max(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Max(Vector4, Vector4)
  nameWithType: Vector4.Max(Vector4, Vector4)
  fullName: GTA.Math.Vector4.Max(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Max(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Function Max(left As Vector4, right As Vector4) As Vector4
  overload: GTA.Math.Vector4.Max*
- uid: GTA.Math.Vector4.op_Addition(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_Addition(GTA.Math.Vector4,GTA.Math.Vector4)
  id: op_Addition(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator +(Vector4, Vector4)
  nameWithType: Vector4.operator +(Vector4, Vector4)
  fullName: GTA.Math.Vector4.operator +(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator +(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator +(left As Vector4, right As Vector4) As Vector4
  overload: GTA.Math.Vector4.op_Addition*
  nameWithType.vb: Vector4.+(Vector4, Vector4)
  fullName.vb: GTA.Math.Vector4.+(GTA.Math.Vector4, GTA.Math.Vector4)
  name.vb: +(Vector4, Vector4)
- uid: GTA.Math.Vector4.op_Subtraction(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_Subtraction(GTA.Math.Vector4,GTA.Math.Vector4)
  id: op_Subtraction(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator -(Vector4, Vector4)
  nameWithType: Vector4.operator -(Vector4, Vector4)
  fullName: GTA.Math.Vector4.operator -(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator -(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator -(left As Vector4, right As Vector4) As Vector4
  overload: GTA.Math.Vector4.op_Subtraction*
  nameWithType.vb: Vector4.-(Vector4, Vector4)
  fullName.vb: GTA.Math.Vector4.-(GTA.Math.Vector4, GTA.Math.Vector4)
  name.vb: -(Vector4, Vector4)
- uid: GTA.Math.Vector4.op_UnaryNegation(GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_UnaryNegation(GTA.Math.Vector4)
  id: op_UnaryNegation(GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator -(Vector4)
  nameWithType: Vector4.operator -(Vector4)
  fullName: GTA.Math.Vector4.operator -(GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator -(Vector4 value)
    parameters:
    - id: value
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator -(value As Vector4) As Vector4
  overload: GTA.Math.Vector4.op_UnaryNegation*
  nameWithType.vb: Vector4.-(Vector4)
  fullName.vb: GTA.Math.Vector4.-(GTA.Math.Vector4)
  name.vb: -(Vector4)
- uid: GTA.Math.Vector4.op_Multiply(GTA.Math.Vector4,System.Single)
  commentId: M:GTA.Math.Vector4.op_Multiply(GTA.Math.Vector4,System.Single)
  id: op_Multiply(GTA.Math.Vector4,System.Single)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Vector4, float)
  nameWithType: Vector4.operator *(Vector4, float)
  fullName: GTA.Math.Vector4.operator *(GTA.Math.Vector4, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator *(Vector4 vector, float scale)
    parameters:
    - id: vector
      type: GTA.Math.Vector4
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator *(vector As Vector4, scale As Single) As Vector4
  overload: GTA.Math.Vector4.op_Multiply*
  nameWithType.vb: Vector4.*(Vector4, Single)
  fullName.vb: GTA.Math.Vector4.*(GTA.Math.Vector4, Single)
  name.vb: '*(Vector4, Single)'
- uid: GTA.Math.Vector4.op_Multiply(System.Single,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_Multiply(System.Single,GTA.Math.Vector4)
  id: op_Multiply(System.Single,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator *(float, Vector4)
  nameWithType: Vector4.operator *(float, Vector4)
  fullName: GTA.Math.Vector4.operator *(float, GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator *(float scale, Vector4 vector)
    parameters:
    - id: scale
      type: System.Single
    - id: vector
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator *(scale As Single, vector As Vector4) As Vector4
  overload: GTA.Math.Vector4.op_Multiply*
  nameWithType.vb: Vector4.*(Single, Vector4)
  fullName.vb: GTA.Math.Vector4.*(Single, GTA.Math.Vector4)
  name.vb: '*(Single, Vector4)'
- uid: GTA.Math.Vector4.op_Division(GTA.Math.Vector4,System.Single)
  commentId: M:GTA.Math.Vector4.op_Division(GTA.Math.Vector4,System.Single)
  id: op_Division(GTA.Math.Vector4,System.Single)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator /(Vector4, float)
  nameWithType: Vector4.operator /(Vector4, float)
  fullName: GTA.Math.Vector4.operator /(GTA.Math.Vector4, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 operator /(Vector4 vector, float scale)
    parameters:
    - id: vector
      type: GTA.Math.Vector4
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Operator /(vector As Vector4, scale As Single) As Vector4
  overload: GTA.Math.Vector4.op_Division*
  nameWithType.vb: Vector4./(Vector4, Single)
  fullName.vb: GTA.Math.Vector4./(GTA.Math.Vector4, Single)
  name.vb: /(Vector4, Single)
- uid: GTA.Math.Vector4.op_Equality(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_Equality(GTA.Math.Vector4,GTA.Math.Vector4)
  id: op_Equality(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator ==(Vector4, Vector4)
  nameWithType: Vector4.operator ==(Vector4, Vector4)
  fullName: GTA.Math.Vector4.operator ==(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator ==(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Vector4, right As Vector4) As Boolean
  overload: GTA.Math.Vector4.op_Equality*
  nameWithType.vb: Vector4.=(Vector4, Vector4)
  fullName.vb: GTA.Math.Vector4.=(GTA.Math.Vector4, GTA.Math.Vector4)
  name.vb: =(Vector4, Vector4)
- uid: GTA.Math.Vector4.op_Inequality(GTA.Math.Vector4,GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.op_Inequality(GTA.Math.Vector4,GTA.Math.Vector4)
  id: op_Inequality(GTA.Math.Vector4,GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: operator !=(Vector4, Vector4)
  nameWithType: Vector4.operator !=(Vector4, Vector4)
  fullName: GTA.Math.Vector4.operator !=(GTA.Math.Vector4, GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator !=(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: GTA.Math.Vector4
    - id: right
      type: GTA.Math.Vector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Vector4, right As Vector4) As Boolean
  overload: GTA.Math.Vector4.op_Inequality*
  nameWithType.vb: Vector4.<>(Vector4, Vector4)
  fullName.vb: GTA.Math.Vector4.<>(GTA.Math.Vector4, GTA.Math.Vector4)
  name.vb: <>(Vector4, Vector4)
- uid: GTA.Math.Vector4.op_Explicit(GTA.Math.Vector3)~GTA.Math.Vector4
  commentId: M:GTA.Math.Vector4.op_Explicit(GTA.Math.Vector3)~GTA.Math.Vector4
  id: op_Explicit(GTA.Math.Vector3)~GTA.Math.Vector4
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector4(Vector3)
  nameWithType: Vector4.explicit operator Vector4(Vector3)
  fullName: GTA.Math.Vector4.explicit operator GTA.Math.Vector4(GTA.Math.Vector3)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static explicit operator Vector4(Vector3 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector3
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Narrowing Operator CType(vector As Vector3) As Vector4
  overload: GTA.Math.Vector4.op_Explicit*
  nameWithType.vb: Vector4.CType(Vector3)
  fullName.vb: GTA.Math.Vector4.CType(GTA.Math.Vector3)
  name.vb: CType(Vector3)
- uid: GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector3
  commentId: M:GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector3
  id: op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector3
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector3(Vector4)
  nameWithType: Vector4.explicit operator Vector3(Vector4)
  fullName: GTA.Math.Vector4.explicit operator GTA.Math.Vector3(GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static explicit operator Vector3(Vector4 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector3
    content.vb: Public Shared Narrowing Operator CType(vector As Vector4) As Vector3
  overload: GTA.Math.Vector4.op_Explicit*
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: GTA.Math.Vector4.CType(GTA.Math.Vector4)
  name.vb: CType(Vector4)
- uid: GTA.Math.Vector4.op_Explicit(GTA.Math.Vector2)~GTA.Math.Vector4
  commentId: M:GTA.Math.Vector4.op_Explicit(GTA.Math.Vector2)~GTA.Math.Vector4
  id: op_Explicit(GTA.Math.Vector2)~GTA.Math.Vector4
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector4(Vector2)
  nameWithType: Vector4.explicit operator Vector4(Vector2)
  fullName: GTA.Math.Vector4.explicit operator GTA.Math.Vector4(GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static explicit operator Vector4(Vector2 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared Narrowing Operator CType(vector As Vector2) As Vector4
  overload: GTA.Math.Vector4.op_Explicit*
  nameWithType.vb: Vector4.CType(Vector2)
  fullName.vb: GTA.Math.Vector4.CType(GTA.Math.Vector2)
  name.vb: CType(Vector2)
- uid: GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector2
  commentId: M:GTA.Math.Vector4.op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector2
  id: op_Explicit(GTA.Math.Vector4)~GTA.Math.Vector2
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector2(Vector4)
  nameWithType: Vector4.explicit operator Vector2(Vector4)
  fullName: GTA.Math.Vector4.explicit operator GTA.Math.Vector2(GTA.Math.Vector4)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static explicit operator Vector2(Vector4 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector4
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Narrowing Operator CType(vector As Vector4) As Vector2
  overload: GTA.Math.Vector4.op_Explicit*
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: GTA.Math.Vector4.CType(GTA.Math.Vector4)
  name.vb: CType(Vector4)
- uid: GTA.Math.Vector4.ToString
  commentId: M:GTA.Math.Vector4.ToString
  id: ToString
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: GTA.Math.Vector4.ToString()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: GTA.Math.Vector4.ToString*
- uid: GTA.Math.Vector4.ToString(System.String)
  commentId: M:GTA.Math.Vector4.ToString(System.String)
  id: ToString(System.String)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector4.ToString(string)
  fullName: GTA.Math.Vector4.ToString(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: GTA.Math.Vector4.ToString*
  nameWithType.vb: Vector4.ToString(String)
  fullName.vb: GTA.Math.Vector4.ToString(String)
  name.vb: ToString(String)
- uid: GTA.Math.Vector4.ToString(System.String,System.IFormatProvider)
  commentId: M:GTA.Math.Vector4.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector4.ToString(string, IFormatProvider)
  fullName: GTA.Math.Vector4.ToString(string, System.IFormatProvider)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider provider)
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
  overload: GTA.Math.Vector4.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector4.ToString(String, IFormatProvider)
  fullName.vb: GTA.Math.Vector4.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: GTA.Math.Vector4.Equals(GTA.Math.Vector4)
  commentId: M:GTA.Math.Vector4.Equals(GTA.Math.Vector4)
  id: Equals(GTA.Math.Vector4)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: GTA.Math.Vector4.Equals(GTA.Math.Vector4)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly bool Equals(Vector4 other)
    parameters:
    - id: other
      type: GTA.Math.Vector4
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector4) As Boolean
  overload: GTA.Math.Vector4.Equals*
  implements:
  - System.IEquatable{GTA.Math.Vector4}.Equals(GTA.Math.Vector4)
- uid: GTA.Math.Vector4.Equals(System.Object)
  commentId: M:GTA.Math.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector4.Equals(object)
  fullName: GTA.Math.Vector4.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.Math.Vector4.Equals*
  nameWithType.vb: Vector4.Equals(Object)
  fullName.vb: GTA.Math.Vector4.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Math.Vector4.GetHashCode
  commentId: M:GTA.Math.Vector4.GetHashCode
  id: GetHashCode
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: GTA.Math.Vector4.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.Math.Vector4.GetHashCode*
- uid: GTA.Math.Vector4.Normalized
  commentId: P:GTA.Math.Vector4.Normalized
  id: Normalized
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector4.Normalized
  fullName: GTA.Math.Vector4.Normalized
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector4 Normalized { get; }
    parameters: []
    return:
      type: GTA.Math.Vector4
    content.vb: Public ReadOnly Property Normalized As Vector4
  overload: GTA.Math.Vector4.Normalized*
- uid: GTA.Math.Vector4.Zero
  commentId: P:GTA.Math.Vector4.Zero
  id: Zero
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4.Zero
  fullName: GTA.Math.Vector4.Zero
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 Zero { get; }
    parameters: []
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared ReadOnly Property Zero As Vector4
  overload: GTA.Math.Vector4.Zero*
- uid: GTA.Math.Vector4.One
  commentId: P:GTA.Math.Vector4.One
  id: One
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4.One
  fullName: GTA.Math.Vector4.One
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector4 One { get; }
    parameters: []
    return:
      type: GTA.Math.Vector4
    content.vb: Public Shared ReadOnly Property One As Vector4
  overload: GTA.Math.Vector4.One*
- uid: GTA.Math.Vector4.Item(System.Int32)
  commentId: P:GTA.Math.Vector4.Item(System.Int32)
  id: Item(System.Int32)
  parent: GTA.Math.Vector4
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector4.this[int]
  fullName: GTA.Math.Vector4.this[int]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Default Property this[](index As Integer) As Single
  overload: GTA.Math.Vector4.Item*
  nameWithType.vb: Vector4.this[](Integer)
  fullName.vb: GTA.Math.Vector4.this[](Integer)
  name.vb: this[](Integer)
references:
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: System.IEquatable{GTA.Math.Vector4}
  commentId: T:System.IEquatable{GTA.Math.Vector4}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector4>
  nameWithType: IEquatable<Vector4>
  fullName: System.IEquatable<GTA.Math.Vector4>
  nameWithType.vb: IEquatable(Of Vector4)
  fullName.vb: System.IEquatable(Of GTA.Math.Vector4)
  name.vb: IEquatable(Of Vector4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.Math.Vector4
    name: Vector4
    isExternal: true
    href: GTA.Math.Vector4.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.Math.Vector4
    name: Vector4
    isExternal: true
    href: GTA.Math.Vector4.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Math.Vector4.#ctor*
  commentId: Overload:GTA.Math.Vector4.#ctor
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4__ctor_System_Single_System_Single_System_Single_System_Single_
  name: Vector4
  nameWithType: Vector4.Vector4
  fullName: GTA.Math.Vector4.Vector4
  nameWithType.vb: Vector4.New
  fullName.vb: GTA.Math.Vector4.New
  name.vb: New
- uid: GTA.Math.Vector4.Length*
  commentId: Overload:GTA.Math.Vector4.Length
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Length
  name: Length
  nameWithType: Vector4.Length
  fullName: GTA.Math.Vector4.Length
- uid: GTA.Math.Vector4.LengthSquared*
  commentId: Overload:GTA.Math.Vector4.LengthSquared
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_LengthSquared
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
  fullName: GTA.Math.Vector4.LengthSquared
- uid: GTA.Math.Vector4.Normalize*
  commentId: Overload:GTA.Math.Vector4.Normalize
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Normalize
  name: Normalize
  nameWithType: Vector4.Normalize
  fullName: GTA.Math.Vector4.Normalize
- uid: GTA.Math.Vector4.Clamp*
  commentId: Overload:GTA.Math.Vector4.Clamp
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Clamp_GTA_Math_Vector4_GTA_Math_Vector4_GTA_Math_Vector4_
  name: Clamp
  nameWithType: Vector4.Clamp
  fullName: GTA.Math.Vector4.Clamp
- uid: GTA.Math.Vector4
  commentId: T:GTA.Math.Vector4
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: GTA.Math.Vector4
- uid: GTA.Math.Vector4.Lerp*
  commentId: Overload:GTA.Math.Vector4.Lerp
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Lerp_GTA_Math_Vector4_GTA_Math_Vector4_System_Single_
  name: Lerp
  nameWithType: Vector4.Lerp
  fullName: GTA.Math.Vector4.Lerp
- uid: GTA.Math.Vector4.Dot*
  commentId: Overload:GTA.Math.Vector4.Dot
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Dot_GTA_Math_Vector4_GTA_Math_Vector4_
  name: Dot
  nameWithType: Vector4.Dot
  fullName: GTA.Math.Vector4.Dot
- uid: GTA.Math.Vector4.Min*
  commentId: Overload:GTA.Math.Vector4.Min
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Min_GTA_Math_Vector4_GTA_Math_Vector4_
  name: Min
  nameWithType: Vector4.Min
  fullName: GTA.Math.Vector4.Min
- uid: GTA.Math.Vector4.Max*
  commentId: Overload:GTA.Math.Vector4.Max
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Max_GTA_Math_Vector4_GTA_Math_Vector4_
  name: Max
  nameWithType: Vector4.Max
  fullName: GTA.Math.Vector4.Max
- uid: GTA.Math.Vector4.op_Addition*
  commentId: Overload:GTA.Math.Vector4.op_Addition
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Addition_GTA_Math_Vector4_GTA_Math_Vector4_
  name: operator +
  nameWithType: Vector4.operator +
  fullName: GTA.Math.Vector4.operator +
  nameWithType.vb: Vector4.+
  fullName.vb: GTA.Math.Vector4.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Addition*
    name: +
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Addition_GTA_Math_Vector4_GTA_Math_Vector4_
- uid: GTA.Math.Vector4.op_Subtraction*
  commentId: Overload:GTA.Math.Vector4.op_Subtraction
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Subtraction_GTA_Math_Vector4_GTA_Math_Vector4_
  name: operator -
  nameWithType: Vector4.operator -
  fullName: GTA.Math.Vector4.operator -
  nameWithType.vb: Vector4.-
  fullName.vb: GTA.Math.Vector4.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Subtraction*
    name: '-'
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Subtraction_GTA_Math_Vector4_GTA_Math_Vector4_
- uid: GTA.Math.Vector4.op_UnaryNegation*
  commentId: Overload:GTA.Math.Vector4.op_UnaryNegation
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_UnaryNegation_GTA_Math_Vector4_
  name: operator -
  nameWithType: Vector4.operator -
  fullName: GTA.Math.Vector4.operator -
  nameWithType.vb: Vector4.-
  fullName.vb: GTA.Math.Vector4.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_UnaryNegation*
    name: '-'
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_UnaryNegation_GTA_Math_Vector4_
- uid: GTA.Math.Vector4.op_Multiply*
  commentId: Overload:GTA.Math.Vector4.op_Multiply
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Multiply_GTA_Math_Vector4_System_Single_
  name: operator *
  nameWithType: Vector4.operator *
  fullName: GTA.Math.Vector4.operator *
  nameWithType.vb: Vector4.*
  fullName.vb: GTA.Math.Vector4.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Multiply*
    name: '*'
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Multiply_GTA_Math_Vector4_System_Single_
- uid: GTA.Math.Vector4.op_Division*
  commentId: Overload:GTA.Math.Vector4.op_Division
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Division_GTA_Math_Vector4_System_Single_
  name: operator /
  nameWithType: Vector4.operator /
  fullName: GTA.Math.Vector4.operator /
  nameWithType.vb: Vector4./
  fullName.vb: GTA.Math.Vector4./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Division*
    name: /
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Division_GTA_Math_Vector4_System_Single_
- uid: GTA.Math.Vector4.op_Equality*
  commentId: Overload:GTA.Math.Vector4.op_Equality
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Equality_GTA_Math_Vector4_GTA_Math_Vector4_
  name: operator ==
  nameWithType: Vector4.operator ==
  fullName: GTA.Math.Vector4.operator ==
  nameWithType.vb: Vector4.=
  fullName.vb: GTA.Math.Vector4.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Equality_GTA_Math_Vector4_GTA_Math_Vector4_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.Math.Vector4.op_Inequality*
  commentId: Overload:GTA.Math.Vector4.op_Inequality
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Inequality_GTA_Math_Vector4_GTA_Math_Vector4_
  name: operator !=
  nameWithType: Vector4.operator !=
  fullName: GTA.Math.Vector4.operator !=
  nameWithType.vb: Vector4.<>
  fullName.vb: GTA.Math.Vector4.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector4.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Math.Vector4.html#GTA_Math_Vector4_op_Inequality_GTA_Math_Vector4_GTA_Math_Vector4_
- uid: GTA.Math.Vector4.op_Explicit*
  commentId: Overload:GTA.Math.Vector4.op_Explicit
  name: explicit operator
  nameWithType: Vector4.explicit operator
  fullName: GTA.Math.Vector4.explicit operator
  nameWithType.vb: Vector4.CType
  fullName.vb: GTA.Math.Vector4.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math.Vector2
  commentId: T:GTA.Math.Vector2
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: GTA.Math.Vector2
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: GTA.Math.Vector4.ToString*
  commentId: Overload:GTA.Math.Vector4.ToString
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_ToString
  name: ToString
  nameWithType: Vector4.ToString
  fullName: GTA.Math.Vector4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: GTA.Math.Vector4.Equals*
  commentId: Overload:GTA.Math.Vector4.Equals
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Equals_GTA_Math_Vector4_
  name: Equals
  nameWithType: Vector4.Equals
  fullName: GTA.Math.Vector4.Equals
- uid: System.IEquatable{GTA.Math.Vector4}.Equals(GTA.Math.Vector4)
  commentId: M:System.IEquatable{GTA.Math.Vector4}.Equals(GTA.Math.Vector4)
  parent: System.IEquatable{GTA.Math.Vector4}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector4)
  nameWithType: IEquatable<Vector4>.Equals(Vector4)
  fullName: System.IEquatable<GTA.Math.Vector4>.Equals(GTA.Math.Vector4)
  nameWithType.vb: IEquatable(Of Vector4).Equals(Vector4)
  fullName.vb: System.IEquatable(Of GTA.Math.Vector4).Equals(GTA.Math.Vector4)
  spec.csharp:
  - uid: System.IEquatable{GTA.Math.Vector4}.Equals(GTA.Math.Vector4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Vector4
    name: Vector4
    isExternal: true
    href: GTA.Math.Vector4.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.Math.Vector4}.Equals(GTA.Math.Vector4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Vector4
    name: Vector4
    isExternal: true
    href: GTA.Math.Vector4.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.Math.Vector4.GetHashCode*
  commentId: Overload:GTA.Math.Vector4.GetHashCode
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_GetHashCode
  name: GetHashCode
  nameWithType: Vector4.GetHashCode
  fullName: GTA.Math.Vector4.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Math.Vector4.Normalized*
  commentId: Overload:GTA.Math.Vector4.Normalized
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Normalized
  name: Normalized
  nameWithType: Vector4.Normalized
  fullName: GTA.Math.Vector4.Normalized
- uid: GTA.Math.Vector4.Zero*
  commentId: Overload:GTA.Math.Vector4.Zero
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Zero
  name: Zero
  nameWithType: Vector4.Zero
  fullName: GTA.Math.Vector4.Zero
- uid: GTA.Math.Vector4.One*
  commentId: Overload:GTA.Math.Vector4.One
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_One
  name: One
  nameWithType: Vector4.One
  fullName: GTA.Math.Vector4.One
- uid: GTA.Math.Vector4.Item*
  commentId: Overload:GTA.Math.Vector4.Item
  isExternal: true
  href: GTA.Math.Vector4.html#GTA_Math_Vector4_Item_System_Int32_
  name: this
  nameWithType: Vector4.this
  fullName: GTA.Math.Vector4.this
  nameWithType.vb: Vector4.this[]
  fullName.vb: GTA.Math.Vector4.this[]
  name.vb: this[]
