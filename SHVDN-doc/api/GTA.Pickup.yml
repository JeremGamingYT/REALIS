### YamlMime:ManagedReference
items:
- uid: GTA.Pickup
  commentId: T:GTA.Pickup
  id: Pickup
  parent: GTA
  children:
  - GTA.Pickup.#ctor(System.Int32)
  - GTA.Pickup.Delete
  - GTA.Pickup.Equals(System.Object)
  - GTA.Pickup.Exists
  - GTA.Pickup.GetHashCode
  - GTA.Pickup.IsCollected
  - GTA.Pickup.Object
  - GTA.Pickup.ObjectExists
  - GTA.Pickup.Position
  - GTA.Pickup.op_Equality(GTA.Pickup,GTA.Pickup)
  - GTA.Pickup.op_Implicit(GTA.Pickup)~GTA.Native.InputArgument
  - GTA.Pickup.op_Inequality(GTA.Pickup,GTA.Pickup)
  langs:
  - csharp
  - vb
  name: Pickup
  nameWithType: Pickup
  fullName: GTA.Pickup
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class Pickup : PoolObject, INativeValue, IDeletable, IExistable'
    content.vb: Public NotInheritable Class Pickup Inherits PoolObject Implements INativeValue, IDeletable, IExistable
  inheritance:
  - System.Object
  - GTA.PoolObject
  implements:
  - GTA.Native.INativeValue
  - GTA.IDeletable
  - GTA.IExistable
  inheritedMembers:
  - GTA.PoolObject.Handle
  - GTA.PoolObject.NativeValue
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Pickup.#ctor(System.Int32)
  commentId: M:GTA.Pickup.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Pickup(int)
  nameWithType: Pickup.Pickup(int)
  fullName: GTA.Pickup.Pickup(int)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Pickup(int handle)
    parameters:
    - id: handle
      type: System.Int32
    content.vb: Public Sub New(handle As Integer)
  overload: GTA.Pickup.#ctor*
  nameWithType.vb: Pickup.New(Integer)
  fullName.vb: GTA.Pickup.New(Integer)
  name.vb: New(Integer)
- uid: GTA.Pickup.ObjectExists
  commentId: M:GTA.Pickup.ObjectExists
  id: ObjectExists
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: ObjectExists()
  nameWithType: Pickup.ObjectExists()
  fullName: GTA.Pickup.ObjectExists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ObjectExists()
    return:
      type: System.Boolean
    content.vb: Public Function ObjectExists() As Boolean
  overload: GTA.Pickup.ObjectExists*
- uid: GTA.Pickup.Delete
  commentId: M:GTA.Pickup.Delete
  id: Delete
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: Pickup.Delete()
  fullName: GTA.Pickup.Delete()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override void Delete()
    content.vb: Public Overrides Sub Delete()
  overridden: GTA.PoolObject.Delete
  overload: GTA.Pickup.Delete*
- uid: GTA.Pickup.Exists
  commentId: M:GTA.Pickup.Exists
  id: Exists
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: Pickup.Exists()
  fullName: GTA.Pickup.Exists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Exists()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Exists() As Boolean
  overridden: GTA.PoolObject.Exists
  overload: GTA.Pickup.Exists*
- uid: GTA.Pickup.Equals(System.Object)
  commentId: M:GTA.Pickup.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Pickup.Equals(object)
  fullName: GTA.Pickup.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTA.Pickup.Equals*
  nameWithType.vb: Pickup.Equals(Object)
  fullName.vb: GTA.Pickup.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Pickup.op_Equality(GTA.Pickup,GTA.Pickup)
  commentId: M:GTA.Pickup.op_Equality(GTA.Pickup,GTA.Pickup)
  id: op_Equality(GTA.Pickup,GTA.Pickup)
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: operator ==(Pickup, Pickup)
  nameWithType: Pickup.operator ==(Pickup, Pickup)
  fullName: GTA.Pickup.operator ==(GTA.Pickup, GTA.Pickup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(Pickup left, Pickup right)
    parameters:
    - id: left
      type: GTA.Pickup
    - id: right
      type: GTA.Pickup
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Pickup, right As Pickup) As Boolean
  overload: GTA.Pickup.op_Equality*
  nameWithType.vb: Pickup.=(Pickup, Pickup)
  fullName.vb: GTA.Pickup.=(GTA.Pickup, GTA.Pickup)
  name.vb: =(Pickup, Pickup)
- uid: GTA.Pickup.op_Inequality(GTA.Pickup,GTA.Pickup)
  commentId: M:GTA.Pickup.op_Inequality(GTA.Pickup,GTA.Pickup)
  id: op_Inequality(GTA.Pickup,GTA.Pickup)
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: operator !=(Pickup, Pickup)
  nameWithType: Pickup.operator !=(Pickup, Pickup)
  fullName: GTA.Pickup.operator !=(GTA.Pickup, GTA.Pickup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(Pickup left, Pickup right)
    parameters:
    - id: left
      type: GTA.Pickup
    - id: right
      type: GTA.Pickup
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Pickup, right As Pickup) As Boolean
  overload: GTA.Pickup.op_Inequality*
  nameWithType.vb: Pickup.<>(Pickup, Pickup)
  fullName.vb: GTA.Pickup.<>(GTA.Pickup, GTA.Pickup)
  name.vb: <>(Pickup, Pickup)
- uid: GTA.Pickup.op_Implicit(GTA.Pickup)~GTA.Native.InputArgument
  commentId: M:GTA.Pickup.op_Implicit(GTA.Pickup)~GTA.Native.InputArgument
  id: op_Implicit(GTA.Pickup)~GTA.Native.InputArgument
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: implicit operator InputArgument(Pickup)
  nameWithType: Pickup.implicit operator InputArgument(Pickup)
  fullName: GTA.Pickup.implicit operator GTA.Native.InputArgument(GTA.Pickup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator InputArgument(Pickup value)
    parameters:
    - id: value
      type: GTA.Pickup
    return:
      type: GTA.Native.InputArgument
    content.vb: Public Shared Widening Operator CType(value As Pickup) As InputArgument
  overload: GTA.Pickup.op_Implicit*
  nameWithType.vb: Pickup.CType(Pickup)
  fullName.vb: GTA.Pickup.CType(GTA.Pickup)
  name.vb: CType(Pickup)
- uid: GTA.Pickup.GetHashCode
  commentId: M:GTA.Pickup.GetHashCode
  id: GetHashCode
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Pickup.GetHashCode()
  fullName: GTA.Pickup.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: GTA.Pickup.GetHashCode*
- uid: GTA.Pickup.Position
  commentId: P:GTA.Pickup.Position
  id: Position
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Pickup.Position
  fullName: GTA.Pickup.Position
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: GTA.Pickup.Position*
- uid: GTA.Pickup.IsCollected
  commentId: P:GTA.Pickup.IsCollected
  id: IsCollected
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: IsCollected
  nameWithType: Pickup.IsCollected
  fullName: GTA.Pickup.IsCollected
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsCollected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCollected As Boolean
  overload: GTA.Pickup.IsCollected*
- uid: GTA.Pickup.Object
  commentId: P:GTA.Pickup.Object
  id: Object
  parent: GTA.Pickup
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: Pickup.Object
  fullName: GTA.Pickup.Object
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PickupObject Object { get; }
    parameters: []
    return:
      type: GTA.PickupObject
    content.vb: Public ReadOnly Property [Object] As PickupObject
  overload: GTA.Pickup.Object*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.PoolObject
  commentId: T:GTA.PoolObject
  parent: GTA
  isExternal: true
  href: GTA.PoolObject.html
  name: PoolObject
  nameWithType: PoolObject
  fullName: GTA.PoolObject
- uid: GTA.Native.INativeValue
  commentId: T:GTA.Native.INativeValue
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.INativeValue.html
  name: INativeValue
  nameWithType: INativeValue
  fullName: GTA.Native.INativeValue
- uid: GTA.IDeletable
  commentId: T:GTA.IDeletable
  parent: GTA
  isExternal: true
  href: GTA.IDeletable.html
  name: IDeletable
  nameWithType: IDeletable
  fullName: GTA.IDeletable
- uid: GTA.IExistable
  commentId: T:GTA.IExistable
  parent: GTA
  isExternal: true
  href: GTA.IExistable.html
  name: IExistable
  nameWithType: IExistable
  fullName: GTA.IExistable
- uid: GTA.PoolObject.Handle
  commentId: P:GTA.PoolObject.Handle
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Handle
  name: Handle
  nameWithType: PoolObject.Handle
  fullName: GTA.PoolObject.Handle
- uid: GTA.PoolObject.NativeValue
  commentId: P:GTA.PoolObject.NativeValue
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_NativeValue
  name: NativeValue
  nameWithType: PoolObject.NativeValue
  fullName: GTA.PoolObject.NativeValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Native
  commentId: N:GTA.Native
  isExternal: true
  href: GTA.html
  name: GTA.Native
  nameWithType: GTA.Native
  fullName: GTA.Native
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
- uid: GTA.Pickup.#ctor*
  commentId: Overload:GTA.Pickup.#ctor
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup__ctor_System_Int32_
  name: Pickup
  nameWithType: Pickup.Pickup
  fullName: GTA.Pickup.Pickup
  nameWithType.vb: Pickup.New
  fullName.vb: GTA.Pickup.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Pickup.ObjectExists*
  commentId: Overload:GTA.Pickup.ObjectExists
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_ObjectExists
  name: ObjectExists
  nameWithType: Pickup.ObjectExists
  fullName: GTA.Pickup.ObjectExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.PoolObject.Delete
  commentId: M:GTA.PoolObject.Delete
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Delete
  name: Delete()
  nameWithType: PoolObject.Delete()
  fullName: GTA.PoolObject.Delete()
  spec.csharp:
  - uid: GTA.PoolObject.Delete
    name: Delete
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Delete
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.PoolObject.Delete
    name: Delete
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Delete
  - name: (
  - name: )
- uid: GTA.Pickup.Delete*
  commentId: Overload:GTA.Pickup.Delete
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_Delete
  name: Delete
  nameWithType: Pickup.Delete
  fullName: GTA.Pickup.Delete
- uid: GTA.PoolObject.Exists
  commentId: M:GTA.PoolObject.Exists
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Exists
  name: Exists()
  nameWithType: PoolObject.Exists()
  fullName: GTA.PoolObject.Exists()
  spec.csharp:
  - uid: GTA.PoolObject.Exists
    name: Exists
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Exists
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.PoolObject.Exists
    name: Exists
    isExternal: true
    href: GTA.PoolObject.html#GTA_PoolObject_Exists
  - name: (
  - name: )
- uid: GTA.Pickup.Exists*
  commentId: Overload:GTA.Pickup.Exists
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_Exists
  name: Exists
  nameWithType: Pickup.Exists
  fullName: GTA.Pickup.Exists
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Pickup.Equals*
  commentId: Overload:GTA.Pickup.Equals
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_Equals_System_Object_
  name: Equals
  nameWithType: Pickup.Equals
  fullName: GTA.Pickup.Equals
- uid: GTA.Pickup.op_Equality*
  commentId: Overload:GTA.Pickup.op_Equality
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_op_Equality_GTA_Pickup_GTA_Pickup_
  name: operator ==
  nameWithType: Pickup.operator ==
  fullName: GTA.Pickup.operator ==
  nameWithType.vb: Pickup.=
  fullName.vb: GTA.Pickup.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Pickup.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Pickup.html#GTA_Pickup_op_Equality_GTA_Pickup_GTA_Pickup_
- uid: GTA.Pickup
  commentId: T:GTA.Pickup
  parent: GTA
  isExternal: true
  href: GTA.Pickup.html
  name: Pickup
  nameWithType: Pickup
  fullName: GTA.Pickup
- uid: GTA.Pickup.op_Inequality*
  commentId: Overload:GTA.Pickup.op_Inequality
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_op_Inequality_GTA_Pickup_GTA_Pickup_
  name: operator !=
  nameWithType: Pickup.operator !=
  fullName: GTA.Pickup.operator !=
  nameWithType.vb: Pickup.<>
  fullName.vb: GTA.Pickup.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Pickup.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Pickup.html#GTA_Pickup_op_Inequality_GTA_Pickup_GTA_Pickup_
- uid: GTA.Pickup.op_Implicit*
  commentId: Overload:GTA.Pickup.op_Implicit
  name: implicit operator
  nameWithType: Pickup.implicit operator
  fullName: GTA.Pickup.implicit operator
  nameWithType.vb: Pickup.CType
  fullName.vb: GTA.Pickup.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: GTA.Native.InputArgument
  commentId: T:GTA.Native.InputArgument
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.InputArgument.html
  name: InputArgument
  nameWithType: InputArgument
  fullName: GTA.Native.InputArgument
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: GTA.Pickup.GetHashCode*
  commentId: Overload:GTA.Pickup.GetHashCode
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_GetHashCode
  name: GetHashCode
  nameWithType: Pickup.GetHashCode
  fullName: GTA.Pickup.GetHashCode
- uid: GTA.Pickup.Position*
  commentId: Overload:GTA.Pickup.Position
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_Position
  name: Position
  nameWithType: Pickup.Position
  fullName: GTA.Pickup.Position
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.Pickup.IsCollected*
  commentId: Overload:GTA.Pickup.IsCollected
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_IsCollected
  name: IsCollected
  nameWithType: Pickup.IsCollected
  fullName: GTA.Pickup.IsCollected
- uid: GTA.Pickup.Object*
  commentId: Overload:GTA.Pickup.Object
  isExternal: true
  href: GTA.Pickup.html#GTA_Pickup_Object
  name: Object
  nameWithType: Pickup.Object
  fullName: GTA.Pickup.Object
- uid: GTA.PickupObject
  commentId: T:GTA.PickupObject
  parent: GTA
  isExternal: true
  href: GTA.PickupObject.html
  name: PickupObject
  nameWithType: PickupObject
  fullName: GTA.PickupObject
