### YamlMime:ManagedReference
items:
- uid: GTA.Graphics.TextureAsset
  commentId: T:GTA.Graphics.TextureAsset
  id: TextureAsset
  parent: GTA.Graphics
  children:
  - GTA.Graphics.TextureAsset.#ctor(GTA.Graphics.Txd,System.String)
  - GTA.Graphics.TextureAsset.#ctor(System.String,System.String)
  - GTA.Graphics.TextureAsset.Deconstruct(GTA.Graphics.Txd@,System.String@)
  - GTA.Graphics.TextureAsset.Equals(GTA.Graphics.TextureAsset)
  - GTA.Graphics.TextureAsset.Equals(System.Object)
  - GTA.Graphics.TextureAsset.GetHashCode
  - GTA.Graphics.TextureAsset.HashTextureName
  - GTA.Graphics.TextureAsset.TextureName
  - GTA.Graphics.TextureAsset.Txd
  - GTA.Graphics.TextureAsset.op_Equality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  - GTA.Graphics.TextureAsset.op_Inequality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  langs:
  - csharp
  - vb
  name: TextureAsset
  nameWithType: TextureAsset
  fullName: GTA.Graphics.TextureAsset
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: 'public readonly struct TextureAsset : IEquatable<TextureAsset>'
    content.vb: Public Structure TextureAsset Implements IEquatable(Of TextureAsset)
  implements:
  - System.IEquatable{GTA.Graphics.TextureAsset}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Graphics.TextureAsset.#ctor(System.String,System.String)
  commentId: M:GTA.Graphics.TextureAsset.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: TextureAsset(string, string)
  nameWithType: TextureAsset.TextureAsset(string, string)
  fullName: GTA.Graphics.TextureAsset.TextureAsset(string, string)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public TextureAsset(string txdName, string texName)
    parameters:
    - id: txdName
      type: System.String
    - id: texName
      type: System.String
    content.vb: Public Sub New(txdName As String, texName As String)
  overload: GTA.Graphics.TextureAsset.#ctor*
  nameWithType.vb: TextureAsset.New(String, String)
  fullName.vb: GTA.Graphics.TextureAsset.New(String, String)
  name.vb: New(String, String)
- uid: GTA.Graphics.TextureAsset.#ctor(GTA.Graphics.Txd,System.String)
  commentId: M:GTA.Graphics.TextureAsset.#ctor(GTA.Graphics.Txd,System.String)
  id: '#ctor(GTA.Graphics.Txd,System.String)'
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: TextureAsset(Txd, string)
  nameWithType: TextureAsset.TextureAsset(Txd, string)
  fullName: GTA.Graphics.TextureAsset.TextureAsset(GTA.Graphics.Txd, string)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public TextureAsset(Txd txd, string texName)
    parameters:
    - id: txd
      type: GTA.Graphics.Txd
    - id: texName
      type: System.String
    content.vb: Public Sub New(txd As Txd, texName As String)
  overload: GTA.Graphics.TextureAsset.#ctor*
  nameWithType.vb: TextureAsset.New(Txd, String)
  fullName.vb: GTA.Graphics.TextureAsset.New(GTA.Graphics.Txd, String)
  name.vb: New(Txd, String)
- uid: GTA.Graphics.TextureAsset.HashTextureName
  commentId: M:GTA.Graphics.TextureAsset.HashTextureName
  id: HashTextureName
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: HashTextureName()
  nameWithType: TextureAsset.HashTextureName()
  fullName: GTA.Graphics.TextureAsset.HashTextureName()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public AtHashValue HashTextureName()
    return:
      type: GTA.AtHashValue
    content.vb: Public Function HashTextureName() As AtHashValue
  overload: GTA.Graphics.TextureAsset.HashTextureName*
- uid: GTA.Graphics.TextureAsset.Equals(GTA.Graphics.TextureAsset)
  commentId: M:GTA.Graphics.TextureAsset.Equals(GTA.Graphics.TextureAsset)
  id: Equals(GTA.Graphics.TextureAsset)
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: Equals(TextureAsset)
  nameWithType: TextureAsset.Equals(TextureAsset)
  fullName: GTA.Graphics.TextureAsset.Equals(GTA.Graphics.TextureAsset)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  example: []
  syntax:
    content: public bool Equals(TextureAsset other)
    parameters:
    - id: other
      type: GTA.Graphics.TextureAsset
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TextureAsset) As Boolean
  overload: GTA.Graphics.TextureAsset.Equals*
  implements:
  - System.IEquatable{GTA.Graphics.TextureAsset}.Equals(GTA.Graphics.TextureAsset)
- uid: GTA.Graphics.TextureAsset.Equals(System.Object)
  commentId: M:GTA.Graphics.TextureAsset.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: TextureAsset.Equals(object)
  fullName: GTA.Graphics.TextureAsset.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.Graphics.TextureAsset.Equals*
  nameWithType.vb: TextureAsset.Equals(Object)
  fullName.vb: GTA.Graphics.TextureAsset.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Graphics.TextureAsset.op_Equality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  commentId: M:GTA.Graphics.TextureAsset.op_Equality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  id: op_Equality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: operator ==(TextureAsset, TextureAsset)
  nameWithType: TextureAsset.operator ==(TextureAsset, TextureAsset)
  fullName: GTA.Graphics.TextureAsset.operator ==(GTA.Graphics.TextureAsset, GTA.Graphics.TextureAsset)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public static bool operator ==(TextureAsset left, TextureAsset right)
    parameters:
    - id: left
      type: GTA.Graphics.TextureAsset
    - id: right
      type: GTA.Graphics.TextureAsset
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As TextureAsset, right As TextureAsset) As Boolean
  overload: GTA.Graphics.TextureAsset.op_Equality*
  nameWithType.vb: TextureAsset.=(TextureAsset, TextureAsset)
  fullName.vb: GTA.Graphics.TextureAsset.=(GTA.Graphics.TextureAsset, GTA.Graphics.TextureAsset)
  name.vb: =(TextureAsset, TextureAsset)
- uid: GTA.Graphics.TextureAsset.op_Inequality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  commentId: M:GTA.Graphics.TextureAsset.op_Inequality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  id: op_Inequality(GTA.Graphics.TextureAsset,GTA.Graphics.TextureAsset)
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: operator !=(TextureAsset, TextureAsset)
  nameWithType: TextureAsset.operator !=(TextureAsset, TextureAsset)
  fullName: GTA.Graphics.TextureAsset.operator !=(GTA.Graphics.TextureAsset, GTA.Graphics.TextureAsset)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public static bool operator !=(TextureAsset left, TextureAsset right)
    parameters:
    - id: left
      type: GTA.Graphics.TextureAsset
    - id: right
      type: GTA.Graphics.TextureAsset
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As TextureAsset, right As TextureAsset) As Boolean
  overload: GTA.Graphics.TextureAsset.op_Inequality*
  nameWithType.vb: TextureAsset.<>(TextureAsset, TextureAsset)
  fullName.vb: GTA.Graphics.TextureAsset.<>(GTA.Graphics.TextureAsset, GTA.Graphics.TextureAsset)
  name.vb: <>(TextureAsset, TextureAsset)
- uid: GTA.Graphics.TextureAsset.GetHashCode
  commentId: M:GTA.Graphics.TextureAsset.GetHashCode
  id: GetHashCode
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TextureAsset.GetHashCode()
  fullName: GTA.Graphics.TextureAsset.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.Graphics.TextureAsset.GetHashCode*
- uid: GTA.Graphics.TextureAsset.Deconstruct(GTA.Graphics.Txd@,System.String@)
  commentId: M:GTA.Graphics.TextureAsset.Deconstruct(GTA.Graphics.Txd@,System.String@)
  id: Deconstruct(GTA.Graphics.Txd@,System.String@)
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: Deconstruct(out Txd, out string)
  nameWithType: TextureAsset.Deconstruct(out Txd, out string)
  fullName: GTA.Graphics.TextureAsset.Deconstruct(out GTA.Graphics.Txd, out string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public void Deconstruct(out Txd txd, out string texName)
    parameters:
    - id: txd
      type: GTA.Graphics.Txd
    - id: texName
      type: System.String
    content.vb: Public Sub Deconstruct(txd As Txd, texName As String)
  overload: GTA.Graphics.TextureAsset.Deconstruct*
  nameWithType.vb: TextureAsset.Deconstruct(Txd, String)
  fullName.vb: GTA.Graphics.TextureAsset.Deconstruct(GTA.Graphics.Txd, String)
  name.vb: Deconstruct(Txd, String)
- uid: GTA.Graphics.TextureAsset.Txd
  commentId: P:GTA.Graphics.TextureAsset.Txd
  id: Txd
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: Txd
  nameWithType: TextureAsset.Txd
  fullName: GTA.Graphics.TextureAsset.Txd
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public Txd Txd { get; init; }
    parameters: []
    return:
      type: GTA.Graphics.Txd
    content.vb: Public Property Txd As Txd
  overload: GTA.Graphics.TextureAsset.Txd*
- uid: GTA.Graphics.TextureAsset.TextureName
  commentId: P:GTA.Graphics.TextureAsset.TextureName
  id: TextureName
  parent: GTA.Graphics.TextureAsset
  langs:
  - csharp
  - vb
  name: TextureName
  nameWithType: TextureAsset.TextureName
  fullName: GTA.Graphics.TextureAsset.TextureName
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Graphics
  syntax:
    content: public string TextureName { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TextureName As String
  overload: GTA.Graphics.TextureAsset.TextureName*
references:
- uid: GTA.Graphics
  commentId: N:GTA.Graphics
  isExternal: true
  href: GTA.html
  name: GTA.Graphics
  nameWithType: GTA.Graphics
  fullName: GTA.Graphics
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Graphics
    name: Graphics
    isExternal: true
    href: GTA.Graphics.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Graphics
    name: Graphics
    isExternal: true
    href: GTA.Graphics.html
- uid: System.IEquatable{GTA.Graphics.TextureAsset}
  commentId: T:System.IEquatable{GTA.Graphics.TextureAsset}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TextureAsset>
  nameWithType: IEquatable<TextureAsset>
  fullName: System.IEquatable<GTA.Graphics.TextureAsset>
  nameWithType.vb: IEquatable(Of TextureAsset)
  fullName.vb: System.IEquatable(Of GTA.Graphics.TextureAsset)
  name.vb: IEquatable(Of TextureAsset)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.Graphics.TextureAsset
    name: TextureAsset
    isExternal: true
    href: GTA.Graphics.TextureAsset.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.Graphics.TextureAsset
    name: TextureAsset
    isExternal: true
    href: GTA.Graphics.TextureAsset.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.Graphics.TextureAsset.#ctor*
  commentId: Overload:GTA.Graphics.TextureAsset.#ctor
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset__ctor_System_String_System_String_
  name: TextureAsset
  nameWithType: TextureAsset.TextureAsset
  fullName: GTA.Graphics.TextureAsset.TextureAsset
  nameWithType.vb: TextureAsset.New
  fullName.vb: GTA.Graphics.TextureAsset.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.Graphics.Txd
  commentId: T:GTA.Graphics.Txd
  parent: GTA.Graphics
  isExternal: true
  href: GTA.Graphics.Txd.html
  name: Txd
  nameWithType: Txd
  fullName: GTA.Graphics.Txd
- uid: GTA.Graphics.TextureAsset.HashTextureName*
  commentId: Overload:GTA.Graphics.TextureAsset.HashTextureName
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_HashTextureName
  name: HashTextureName
  nameWithType: TextureAsset.HashTextureName
  fullName: GTA.Graphics.TextureAsset.HashTextureName
- uid: GTA.AtHashValue
  commentId: T:GTA.AtHashValue
  parent: GTA
  isExternal: true
  href: GTA.AtHashValue.html
  name: AtHashValue
  nameWithType: AtHashValue
  fullName: GTA.AtHashValue
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: GTA.Graphics.TextureAsset.Equals*
  commentId: Overload:GTA.Graphics.TextureAsset.Equals
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_Equals_GTA_Graphics_TextureAsset_
  name: Equals
  nameWithType: TextureAsset.Equals
  fullName: GTA.Graphics.TextureAsset.Equals
- uid: System.IEquatable{GTA.Graphics.TextureAsset}.Equals(GTA.Graphics.TextureAsset)
  commentId: M:System.IEquatable{GTA.Graphics.TextureAsset}.Equals(GTA.Graphics.TextureAsset)
  parent: System.IEquatable{GTA.Graphics.TextureAsset}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TextureAsset)
  nameWithType: IEquatable<TextureAsset>.Equals(TextureAsset)
  fullName: System.IEquatable<GTA.Graphics.TextureAsset>.Equals(GTA.Graphics.TextureAsset)
  nameWithType.vb: IEquatable(Of TextureAsset).Equals(TextureAsset)
  fullName.vb: System.IEquatable(Of GTA.Graphics.TextureAsset).Equals(GTA.Graphics.TextureAsset)
  spec.csharp:
  - uid: System.IEquatable{GTA.Graphics.TextureAsset}.Equals(GTA.Graphics.TextureAsset)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Graphics.TextureAsset
    name: TextureAsset
    isExternal: true
    href: GTA.Graphics.TextureAsset.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.Graphics.TextureAsset}.Equals(GTA.Graphics.TextureAsset)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Graphics.TextureAsset
    name: TextureAsset
    isExternal: true
    href: GTA.Graphics.TextureAsset.html
  - name: )
- uid: GTA.Graphics.TextureAsset
  commentId: T:GTA.Graphics.TextureAsset
  parent: GTA.Graphics
  isExternal: true
  href: GTA.Graphics.TextureAsset.html
  name: TextureAsset
  nameWithType: TextureAsset
  fullName: GTA.Graphics.TextureAsset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Graphics.TextureAsset.op_Equality*
  commentId: Overload:GTA.Graphics.TextureAsset.op_Equality
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_op_Equality_GTA_Graphics_TextureAsset_GTA_Graphics_TextureAsset_
  name: operator ==
  nameWithType: TextureAsset.operator ==
  fullName: GTA.Graphics.TextureAsset.operator ==
  nameWithType.vb: TextureAsset.=
  fullName.vb: GTA.Graphics.TextureAsset.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Graphics.TextureAsset.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_op_Equality_GTA_Graphics_TextureAsset_GTA_Graphics_TextureAsset_
- uid: GTA.Graphics.TextureAsset.op_Inequality*
  commentId: Overload:GTA.Graphics.TextureAsset.op_Inequality
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_op_Inequality_GTA_Graphics_TextureAsset_GTA_Graphics_TextureAsset_
  name: operator !=
  nameWithType: TextureAsset.operator !=
  fullName: GTA.Graphics.TextureAsset.operator !=
  nameWithType.vb: TextureAsset.<>
  fullName.vb: GTA.Graphics.TextureAsset.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Graphics.TextureAsset.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_op_Inequality_GTA_Graphics_TextureAsset_GTA_Graphics_TextureAsset_
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.Graphics.TextureAsset.GetHashCode*
  commentId: Overload:GTA.Graphics.TextureAsset.GetHashCode
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_GetHashCode
  name: GetHashCode
  nameWithType: TextureAsset.GetHashCode
  fullName: GTA.Graphics.TextureAsset.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Graphics.TextureAsset.Deconstruct*
  commentId: Overload:GTA.Graphics.TextureAsset.Deconstruct
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_Deconstruct_GTA_Graphics_Txd__System_String__
  name: Deconstruct
  nameWithType: TextureAsset.Deconstruct
  fullName: GTA.Graphics.TextureAsset.Deconstruct
- uid: GTA.Graphics.TextureAsset.Txd*
  commentId: Overload:GTA.Graphics.TextureAsset.Txd
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_Txd
  name: Txd
  nameWithType: TextureAsset.Txd
  fullName: GTA.Graphics.TextureAsset.Txd
- uid: GTA.Graphics.TextureAsset.TextureName*
  commentId: Overload:GTA.Graphics.TextureAsset.TextureName
  isExternal: true
  href: GTA.Graphics.TextureAsset.html#GTA_Graphics_TextureAsset_TextureName
  name: TextureName
  nameWithType: TextureAsset.TextureName
  fullName: GTA.Graphics.TextureAsset.TextureName
