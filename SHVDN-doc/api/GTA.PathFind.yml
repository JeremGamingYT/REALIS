### YamlMime:ManagedReference
items:
- uid: GTA.PathFind
  commentId: T:GTA.PathFind
  id: PathFind
  parent: GTA
  children:
  - GTA.PathFind.ArePathNodesLoadedForArea(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.PathFind.GetAllVehicleNodes(System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  - GTA.PathFind.GetClosestVehicleNode(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  - GTA.PathFind.GetClosestVehicleNodePosition(GTA.Math.Vector3,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  - GTA.PathFind.GetNearbyVehicleNodes(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  - GTA.PathFind.GetNthClosestVehicleNode(GTA.Math.Vector3,System.Int32,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  - GTA.PathFind.GetNthClosestVehicleNodePosition(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  - GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  - GTA.PathFind.GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3,System.Int32,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  - GTA.PathFind.GetVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  - GTA.PathFind.RequestPathNodesInAreaThisFrame(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.PathFind.SetPedPathsBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  - GTA.PathFind.SetVehicleNodesBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3)
  - GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  - GTA.PathFind.SwitchPedPathsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean)
  - GTA.PathFind.SwitchVehicleNodesInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  - GTA.PathFind.SwitchVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  langs:
  - csharp
  - vb
  name: PathFind
  nameWithType: PathFind
  fullName: GTA.PathFind
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static class PathFind
    content.vb: Public Module PathFind
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: GTA.PathFind.GetAllVehicleNodes(System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  commentId: M:GTA.PathFind.GetAllVehicleNodes(System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  id: GetAllVehicleNodes(System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetAllVehicleNodes(Func<VehiclePathNodePropertyFlags, bool>)
  nameWithType: PathFind.GetAllVehicleNodes(Func<VehiclePathNodePropertyFlags, bool>)
  fullName: GTA.PathFind.GetAllVehicleNodes(System.Func<GTA.VehiclePathNodePropertyFlags, bool>)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode[] GetAllVehicleNodes(Func<VehiclePathNodePropertyFlags, bool> predicate = null)
    parameters:
    - id: predicate
      type: System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
    return:
      type: GTA.PathNode[]
    content.vb: Public Shared Function GetAllVehicleNodes(predicate As Func(Of VehiclePathNodePropertyFlags, Boolean) = Nothing) As PathNode()
  overload: GTA.PathFind.GetAllVehicleNodes*
  nameWithType.vb: PathFind.GetAllVehicleNodes(Func(Of VehiclePathNodePropertyFlags, Boolean))
  fullName.vb: GTA.PathFind.GetAllVehicleNodes(System.Func(Of GTA.VehiclePathNodePropertyFlags, Boolean))
  name.vb: GetAllVehicleNodes(Func(Of VehiclePathNodePropertyFlags, Boolean))
- uid: GTA.PathFind.GetNearbyVehicleNodes(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  commentId: M:GTA.PathFind.GetNearbyVehicleNodes(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  id: GetNearbyVehicleNodes(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetNearbyVehicleNodes(Vector3, float, Func<VehiclePathNodePropertyFlags, bool>)
  nameWithType: PathFind.GetNearbyVehicleNodes(Vector3, float, Func<VehiclePathNodePropertyFlags, bool>)
  fullName: GTA.PathFind.GetNearbyVehicleNodes(GTA.Math.Vector3, float, System.Func<GTA.VehiclePathNodePropertyFlags, bool>)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode[] GetNearbyVehicleNodes(Vector3 position, float radius, Func<VehiclePathNodePropertyFlags, bool> predicate = null)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: radius
      type: System.Single
    - id: predicate
      type: System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
    return:
      type: GTA.PathNode[]
    content.vb: Public Shared Function GetNearbyVehicleNodes(position As Vector3, radius As Single, predicate As Func(Of VehiclePathNodePropertyFlags, Boolean) = Nothing) As PathNode()
  overload: GTA.PathFind.GetNearbyVehicleNodes*
  nameWithType.vb: PathFind.GetNearbyVehicleNodes(Vector3, Single, Func(Of VehiclePathNodePropertyFlags, Boolean))
  fullName.vb: GTA.PathFind.GetNearbyVehicleNodes(GTA.Math.Vector3, Single, System.Func(Of GTA.VehiclePathNodePropertyFlags, Boolean))
  name.vb: GetNearbyVehicleNodes(Vector3, Single, Func(Of VehiclePathNodePropertyFlags, Boolean))
- uid: GTA.PathFind.GetVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  commentId: M:GTA.PathFind.GetVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  id: GetVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetVehicleNodesInArea(Vector3, Vector3, Func<VehiclePathNodePropertyFlags, bool>)
  nameWithType: PathFind.GetVehicleNodesInArea(Vector3, Vector3, Func<VehiclePathNodePropertyFlags, bool>)
  fullName: GTA.PathFind.GetVehicleNodesInArea(GTA.Math.Vector3, GTA.Math.Vector3, System.Func<GTA.VehiclePathNodePropertyFlags, bool>)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode[] GetVehicleNodesInArea(Vector3 min, Vector3 max, Func<VehiclePathNodePropertyFlags, bool> predicate = null)
    parameters:
    - id: min
      type: GTA.Math.Vector3
    - id: max
      type: GTA.Math.Vector3
    - id: predicate
      type: System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
    return:
      type: GTA.PathNode[]
    content.vb: Public Shared Function GetVehicleNodesInArea(min As Vector3, max As Vector3, predicate As Func(Of VehiclePathNodePropertyFlags, Boolean) = Nothing) As PathNode()
  overload: GTA.PathFind.GetVehicleNodesInArea*
  nameWithType.vb: PathFind.GetVehicleNodesInArea(Vector3, Vector3, Func(Of VehiclePathNodePropertyFlags, Boolean))
  fullName.vb: GTA.PathFind.GetVehicleNodesInArea(GTA.Math.Vector3, GTA.Math.Vector3, System.Func(Of GTA.VehiclePathNodePropertyFlags, Boolean))
  name.vb: GetVehicleNodesInArea(Vector3, Vector3, Func(Of VehiclePathNodePropertyFlags, Boolean))
- uid: GTA.PathFind.GetClosestVehicleNode(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  commentId: M:GTA.PathFind.GetClosestVehicleNode(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  id: GetClosestVehicleNode(GTA.Math.Vector3,System.Single,System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean})
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetClosestVehicleNode(Vector3, float, Func<VehiclePathNodePropertyFlags, bool>)
  nameWithType: PathFind.GetClosestVehicleNode(Vector3, float, Func<VehiclePathNodePropertyFlags, bool>)
  fullName: GTA.PathFind.GetClosestVehicleNode(GTA.Math.Vector3, float, System.Func<GTA.VehiclePathNodePropertyFlags, bool>)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode GetClosestVehicleNode(Vector3 position, float radius, Func<VehiclePathNodePropertyFlags, bool> predicate = null)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: radius
      type: System.Single
    - id: predicate
      type: System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
    return:
      type: GTA.PathNode
    content.vb: Public Shared Function GetClosestVehicleNode(position As Vector3, radius As Single, predicate As Func(Of VehiclePathNodePropertyFlags, Boolean) = Nothing) As PathNode
  overload: GTA.PathFind.GetClosestVehicleNode*
  nameWithType.vb: PathFind.GetClosestVehicleNode(Vector3, Single, Func(Of VehiclePathNodePropertyFlags, Boolean))
  fullName.vb: GTA.PathFind.GetClosestVehicleNode(GTA.Math.Vector3, Single, System.Func(Of GTA.VehiclePathNodePropertyFlags, Boolean))
  name.vb: GetClosestVehicleNode(Vector3, Single, Func(Of VehiclePathNodePropertyFlags, Boolean))
- uid: GTA.PathFind.GetClosestVehicleNodePosition(GTA.Math.Vector3,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  commentId: M:GTA.PathFind.GetClosestVehicleNodePosition(GTA.Math.Vector3,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  id: GetClosestVehicleNodePosition(GTA.Math.Vector3,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetClosestVehicleNodePosition(Vector3, out Vector3, GetClosestVehicleNodeFlags, float, float)
  nameWithType: PathFind.GetClosestVehicleNodePosition(Vector3, out Vector3, GetClosestVehicleNodeFlags, float, float)
  fullName: GTA.PathFind.GetClosestVehicleNodePosition(GTA.Math.Vector3, out GTA.Math.Vector3, GTA.GetClosestVehicleNodeFlags, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool GetClosestVehicleNodePosition(Vector3 position, out Vector3 closestNodePosition, GetClosestVehicleNodeFlags flags = GetClosestVehicleNodeFlags.None, float zMeasureMult = 3, float zTolerance = 0)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: closestNodePosition
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.GetClosestVehicleNodeFlags
    - id: zMeasureMult
      type: System.Single
    - id: zTolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetClosestVehicleNodePosition(position As Vector3, closestNodePosition As Vector3, flags As GetClosestVehicleNodeFlags = GetClosestVehicleNodeFlags.None, zMeasureMult As Single = 3, zTolerance As Single = 0) As Boolean
  overload: GTA.PathFind.GetClosestVehicleNodePosition*
  nameWithType.vb: PathFind.GetClosestVehicleNodePosition(Vector3, Vector3, GetClosestVehicleNodeFlags, Single, Single)
  fullName.vb: GTA.PathFind.GetClosestVehicleNodePosition(GTA.Math.Vector3, GTA.Math.Vector3, GTA.GetClosestVehicleNodeFlags, Single, Single)
  name.vb: GetClosestVehicleNodePosition(Vector3, Vector3, GetClosestVehicleNodeFlags, Single, Single)
- uid: GTA.PathFind.GetNthClosestVehicleNode(GTA.Math.Vector3,System.Int32,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  commentId: M:GTA.PathFind.GetNthClosestVehicleNode(GTA.Math.Vector3,System.Int32,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  id: GetNthClosestVehicleNode(GTA.Math.Vector3,System.Int32,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetNthClosestVehicleNode(Vector3, int, GetClosestVehicleNodeFlags, float, float)
  nameWithType: PathFind.GetNthClosestVehicleNode(Vector3, int, GetClosestVehicleNodeFlags, float, float)
  fullName: GTA.PathFind.GetNthClosestVehicleNode(GTA.Math.Vector3, int, GTA.GetClosestVehicleNodeFlags, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode GetNthClosestVehicleNode(Vector3 position, int nthClosest, GetClosestVehicleNodeFlags flags = GetClosestVehicleNodeFlags.None, float zMeasureMult = 3, float zTolerance = 0)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: nthClosest
      type: System.Int32
    - id: flags
      type: GTA.GetClosestVehicleNodeFlags
    - id: zMeasureMult
      type: System.Single
    - id: zTolerance
      type: System.Single
    return:
      type: GTA.PathNode
    content.vb: Public Shared Function GetNthClosestVehicleNode(position As Vector3, nthClosest As Integer, flags As GetClosestVehicleNodeFlags = GetClosestVehicleNodeFlags.None, zMeasureMult As Single = 3, zTolerance As Single = 0) As PathNode
  overload: GTA.PathFind.GetNthClosestVehicleNode*
  nameWithType.vb: PathFind.GetNthClosestVehicleNode(Vector3, Integer, GetClosestVehicleNodeFlags, Single, Single)
  fullName.vb: GTA.PathFind.GetNthClosestVehicleNode(GTA.Math.Vector3, Integer, GTA.GetClosestVehicleNodeFlags, Single, Single)
  name.vb: GetNthClosestVehicleNode(Vector3, Integer, GetClosestVehicleNodeFlags, Single, Single)
- uid: GTA.PathFind.GetNthClosestVehicleNodePosition(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  commentId: M:GTA.PathFind.GetNthClosestVehicleNodePosition(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  id: GetNthClosestVehicleNodePosition(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetNthClosestVehicleNodePosition(Vector3, int, out Vector3, GetClosestVehicleNodeFlags, float, float)
  nameWithType: PathFind.GetNthClosestVehicleNodePosition(Vector3, int, out Vector3, GetClosestVehicleNodeFlags, float, float)
  fullName: GTA.PathFind.GetNthClosestVehicleNodePosition(GTA.Math.Vector3, int, out GTA.Math.Vector3, GTA.GetClosestVehicleNodeFlags, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool GetNthClosestVehicleNodePosition(Vector3 position, int nthClosest, out Vector3 closestNodePosition, GetClosestVehicleNodeFlags flags = GetClosestVehicleNodeFlags.None, float zMeasureMult = 3, float zTolerance = 0)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: nthClosest
      type: System.Int32
    - id: closestNodePosition
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.GetClosestVehicleNodeFlags
    - id: zMeasureMult
      type: System.Single
    - id: zTolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetNthClosestVehicleNodePosition(position As Vector3, nthClosest As Integer, closestNodePosition As Vector3, flags As GetClosestVehicleNodeFlags = GetClosestVehicleNodeFlags.None, zMeasureMult As Single = 3, zTolerance As Single = 0) As Boolean
  overload: GTA.PathFind.GetNthClosestVehicleNodePosition*
  nameWithType.vb: PathFind.GetNthClosestVehicleNodePosition(Vector3, Integer, Vector3, GetClosestVehicleNodeFlags, Single, Single)
  fullName.vb: GTA.PathFind.GetNthClosestVehicleNodePosition(GTA.Math.Vector3, Integer, GTA.Math.Vector3, GTA.GetClosestVehicleNodeFlags, Single, Single)
  name.vb: GetNthClosestVehicleNodePosition(Vector3, Integer, Vector3, GetClosestVehicleNodeFlags, Single, Single)
- uid: GTA.PathFind.GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3,System.Int32,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  commentId: M:GTA.PathFind.GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3,System.Int32,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  id: GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3,System.Int32,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetNthClosestVehicleNodeWithHeading(Vector3, int, out float, out int, GetClosestVehicleNodeFlags, float, float)
  nameWithType: PathFind.GetNthClosestVehicleNodeWithHeading(Vector3, int, out float, out int, GetClosestVehicleNodeFlags, float, float)
  fullName: GTA.PathFind.GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3, int, out float, out int, GTA.GetClosestVehicleNodeFlags, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PathNode GetNthClosestVehicleNodeWithHeading(Vector3 position, int nthClosest, out float heading, out int numLanes, GetClosestVehicleNodeFlags flags = GetClosestVehicleNodeFlags.None, float zMeasureMult = 3, float zTolerance = 0)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: nthClosest
      type: System.Int32
    - id: heading
      type: System.Single
    - id: numLanes
      type: System.Int32
    - id: flags
      type: GTA.GetClosestVehicleNodeFlags
    - id: zMeasureMult
      type: System.Single
    - id: zTolerance
      type: System.Single
    return:
      type: GTA.PathNode
    content.vb: Public Shared Function GetNthClosestVehicleNodeWithHeading(position As Vector3, nthClosest As Integer, heading As Single, numLanes As Integer, flags As GetClosestVehicleNodeFlags = GetClosestVehicleNodeFlags.None, zMeasureMult As Single = 3, zTolerance As Single = 0) As PathNode
  overload: GTA.PathFind.GetNthClosestVehicleNodeWithHeading*
  nameWithType.vb: PathFind.GetNthClosestVehicleNodeWithHeading(Vector3, Integer, Single, Integer, GetClosestVehicleNodeFlags, Single, Single)
  fullName.vb: GTA.PathFind.GetNthClosestVehicleNodeWithHeading(GTA.Math.Vector3, Integer, Single, Integer, GTA.GetClosestVehicleNodeFlags, Single, Single)
  name.vb: GetNthClosestVehicleNodeWithHeading(Vector3, Integer, Single, Integer, GetClosestVehicleNodeFlags, Single, Single)
- uid: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  commentId: M:GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  id: GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3,System.Int32,GTA.Math.Vector3@,System.Single@,System.Int32@,GTA.GetClosestVehicleNodeFlags,System.Single,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: GetNthClosestVehicleNodePositionWithHeading(Vector3, int, out Vector3, out float, out int, GetClosestVehicleNodeFlags, float, float)
  nameWithType: PathFind.GetNthClosestVehicleNodePositionWithHeading(Vector3, int, out Vector3, out float, out int, GetClosestVehicleNodeFlags, float, float)
  fullName: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3, int, out GTA.Math.Vector3, out float, out int, GTA.GetClosestVehicleNodeFlags, float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool GetNthClosestVehicleNodePositionWithHeading(Vector3 position, int nthClosest, out Vector3 closestNodePosition, out float heading, out int numLanes, GetClosestVehicleNodeFlags flags = GetClosestVehicleNodeFlags.None, float zMeasureMult = 3, float zTolerance = 0)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: nthClosest
      type: System.Int32
    - id: closestNodePosition
      type: GTA.Math.Vector3
    - id: heading
      type: System.Single
    - id: numLanes
      type: System.Int32
    - id: flags
      type: GTA.GetClosestVehicleNodeFlags
    - id: zMeasureMult
      type: System.Single
    - id: zTolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetNthClosestVehicleNodePositionWithHeading(position As Vector3, nthClosest As Integer, closestNodePosition As Vector3, heading As Single, numLanes As Integer, flags As GetClosestVehicleNodeFlags = GetClosestVehicleNodeFlags.None, zMeasureMult As Single = 3, zTolerance As Single = 0) As Boolean
  overload: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading*
  nameWithType.vb: PathFind.GetNthClosestVehicleNodePositionWithHeading(Vector3, Integer, Vector3, Single, Integer, GetClosestVehicleNodeFlags, Single, Single)
  fullName.vb: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading(GTA.Math.Vector3, Integer, GTA.Math.Vector3, Single, Integer, GTA.GetClosestVehicleNodeFlags, Single, Single)
  name.vb: GetNthClosestVehicleNodePositionWithHeading(Vector3, Integer, Vector3, Single, Integer, GetClosestVehicleNodeFlags, Single, Single)
- uid: GTA.PathFind.ArePathNodesLoadedForArea(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.PathFind.ArePathNodesLoadedForArea(GTA.Math.Vector2,GTA.Math.Vector2)
  id: ArePathNodesLoadedForArea(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: ArePathNodesLoadedForArea(Vector2, Vector2)
  nameWithType: PathFind.ArePathNodesLoadedForArea(Vector2, Vector2)
  fullName: GTA.PathFind.ArePathNodesLoadedForArea(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool ArePathNodesLoadedForArea(Vector2 min, Vector2 max)
    parameters:
    - id: min
      type: GTA.Math.Vector2
    - id: max
      type: GTA.Math.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function ArePathNodesLoadedForArea(min As Vector2, max As Vector2) As Boolean
  overload: GTA.PathFind.ArePathNodesLoadedForArea*
- uid: GTA.PathFind.RequestPathNodesInAreaThisFrame(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.PathFind.RequestPathNodesInAreaThisFrame(GTA.Math.Vector2,GTA.Math.Vector2)
  id: RequestPathNodesInAreaThisFrame(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: RequestPathNodesInAreaThisFrame(Vector2, Vector2)
  nameWithType: PathFind.RequestPathNodesInAreaThisFrame(Vector2, Vector2)
  fullName: GTA.PathFind.RequestPathNodesInAreaThisFrame(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool RequestPathNodesInAreaThisFrame(Vector2 min, Vector2 max)
    parameters:
    - id: min
      type: GTA.Math.Vector2
    - id: max
      type: GTA.Math.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function RequestPathNodesInAreaThisFrame(min As Vector2, max As Vector2) As Boolean
  overload: GTA.PathFind.RequestPathNodesInAreaThisFrame*
- uid: GTA.PathFind.SwitchPedPathsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean)
  commentId: M:GTA.PathFind.SwitchPedPathsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean)
  id: SwitchPedPathsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SwitchPedPathsInArea(Vector3, Vector3, bool, bool)
  nameWithType: PathFind.SwitchPedPathsInArea(Vector3, Vector3, bool, bool)
  fullName: GTA.PathFind.SwitchPedPathsInArea(GTA.Math.Vector3, GTA.Math.Vector3, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SwitchPedPathsInArea(Vector3 min, Vector3 max, bool active, bool forceAbortCurrentPath)
    parameters:
    - id: min
      type: GTA.Math.Vector3
    - id: max
      type: GTA.Math.Vector3
    - id: active
      type: System.Boolean
    - id: forceAbortCurrentPath
      type: System.Boolean
    content.vb: Public Shared Sub SwitchPedPathsInArea(min As Vector3, max As Vector3, active As Boolean, forceAbortCurrentPath As Boolean)
  overload: GTA.PathFind.SwitchPedPathsInArea*
  nameWithType.vb: PathFind.SwitchPedPathsInArea(Vector3, Vector3, Boolean, Boolean)
  fullName.vb: GTA.PathFind.SwitchPedPathsInArea(GTA.Math.Vector3, GTA.Math.Vector3, Boolean, Boolean)
  name.vb: SwitchPedPathsInArea(Vector3, Vector3, Boolean, Boolean)
- uid: GTA.PathFind.SetPedPathsBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  commentId: M:GTA.PathFind.SetPedPathsBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  id: SetPedPathsBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SetPedPathsBackToOriginal(Vector3, Vector3, bool)
  nameWithType: PathFind.SetPedPathsBackToOriginal(Vector3, Vector3, bool)
  fullName: GTA.PathFind.SetPedPathsBackToOriginal(GTA.Math.Vector3, GTA.Math.Vector3, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SetPedPathsBackToOriginal(Vector3 min, Vector3 max, bool forceAbortCurrentPath)
    parameters:
    - id: min
      type: GTA.Math.Vector3
    - id: max
      type: GTA.Math.Vector3
    - id: forceAbortCurrentPath
      type: System.Boolean
    content.vb: Public Shared Sub SetPedPathsBackToOriginal(min As Vector3, max As Vector3, forceAbortCurrentPath As Boolean)
  overload: GTA.PathFind.SetPedPathsBackToOriginal*
  nameWithType.vb: PathFind.SetPedPathsBackToOriginal(Vector3, Vector3, Boolean)
  fullName.vb: GTA.PathFind.SetPedPathsBackToOriginal(GTA.Math.Vector3, GTA.Math.Vector3, Boolean)
  name.vb: SetPedPathsBackToOriginal(Vector3, Vector3, Boolean)
- uid: GTA.PathFind.SwitchVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  commentId: M:GTA.PathFind.SwitchVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  id: SwitchVehicleNodesInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SwitchVehicleNodesInArea(Vector3, Vector3, bool)
  nameWithType: PathFind.SwitchVehicleNodesInArea(Vector3, Vector3, bool)
  fullName: GTA.PathFind.SwitchVehicleNodesInArea(GTA.Math.Vector3, GTA.Math.Vector3, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SwitchVehicleNodesInArea(Vector3 min, Vector3 max, bool active)
    parameters:
    - id: min
      type: GTA.Math.Vector3
    - id: max
      type: GTA.Math.Vector3
    - id: active
      type: System.Boolean
    content.vb: Public Shared Sub SwitchVehicleNodesInArea(min As Vector3, max As Vector3, active As Boolean)
  overload: GTA.PathFind.SwitchVehicleNodesInArea*
  nameWithType.vb: PathFind.SwitchVehicleNodesInArea(Vector3, Vector3, Boolean)
  fullName.vb: GTA.PathFind.SwitchVehicleNodesInArea(GTA.Math.Vector3, GTA.Math.Vector3, Boolean)
  name.vb: SwitchVehicleNodesInArea(Vector3, Vector3, Boolean)
- uid: GTA.PathFind.SwitchVehicleNodesInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  commentId: M:GTA.PathFind.SwitchVehicleNodesInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  id: SwitchVehicleNodesInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SwitchVehicleNodesInAngledArea(Vector3, Vector3, float, bool)
  nameWithType: PathFind.SwitchVehicleNodesInAngledArea(Vector3, Vector3, float, bool)
  fullName: GTA.PathFind.SwitchVehicleNodesInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, float, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SwitchVehicleNodesInAngledArea(Vector3 position1, Vector3 position2, float areaWidth, bool active)
    parameters:
    - id: position1
      type: GTA.Math.Vector3
    - id: position2
      type: GTA.Math.Vector3
    - id: areaWidth
      type: System.Single
    - id: active
      type: System.Boolean
    content.vb: Public Shared Sub SwitchVehicleNodesInAngledArea(position1 As Vector3, position2 As Vector3, areaWidth As Single, active As Boolean)
  overload: GTA.PathFind.SwitchVehicleNodesInAngledArea*
  nameWithType.vb: PathFind.SwitchVehicleNodesInAngledArea(Vector3, Vector3, Single, Boolean)
  fullName.vb: GTA.PathFind.SwitchVehicleNodesInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean)
  name.vb: SwitchVehicleNodesInAngledArea(Vector3, Vector3, Single, Boolean)
- uid: GTA.PathFind.SetVehicleNodesBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3)
  commentId: M:GTA.PathFind.SetVehicleNodesBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3)
  id: SetVehicleNodesBackToOriginal(GTA.Math.Vector3,GTA.Math.Vector3)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SetVehicleNodesBackToOriginal(Vector3, Vector3)
  nameWithType: PathFind.SetVehicleNodesBackToOriginal(Vector3, Vector3)
  fullName: GTA.PathFind.SetVehicleNodesBackToOriginal(GTA.Math.Vector3, GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SetVehicleNodesBackToOriginal(Vector3 min, Vector3 max)
    parameters:
    - id: min
      type: GTA.Math.Vector3
    - id: max
      type: GTA.Math.Vector3
    content.vb: Public Shared Sub SetVehicleNodesBackToOriginal(min As Vector3, max As Vector3)
  overload: GTA.PathFind.SetVehicleNodesBackToOriginal*
- uid: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  commentId: M:GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  id: SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  parent: GTA.PathFind
  langs:
  - csharp
  - vb
  name: SetVehicleNodesBackToOriginalInAngledArea(Vector3, Vector3, float)
  nameWithType: PathFind.SetVehicleNodesBackToOriginalInAngledArea(Vector3, Vector3, float)
  fullName: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SetVehicleNodesBackToOriginalInAngledArea(Vector3 position1, Vector3 position2, float areaWidth)
    parameters:
    - id: position1
      type: GTA.Math.Vector3
    - id: position2
      type: GTA.Math.Vector3
    - id: areaWidth
      type: System.Single
    content.vb: Public Shared Sub SetVehicleNodesBackToOriginalInAngledArea(position1 As Vector3, position2 As Vector3, areaWidth As Single)
  overload: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea*
  nameWithType.vb: PathFind.SetVehicleNodesBackToOriginalInAngledArea(Vector3, Vector3, Single)
  fullName.vb: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, Single)
  name.vb: SetVehicleNodesBackToOriginalInAngledArea(Vector3, Vector3, Single)
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.PathFind.GetAllVehicleNodes*
  commentId: Overload:GTA.PathFind.GetAllVehicleNodes
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetAllVehicleNodes_System_Func_GTA_VehiclePathNodePropertyFlags_System_Boolean__
  name: GetAllVehicleNodes
  nameWithType: PathFind.GetAllVehicleNodes
  fullName: GTA.PathFind.GetAllVehicleNodes
- uid: System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
  commentId: T:System.Func{GTA.VehiclePathNodePropertyFlags,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<VehiclePathNodePropertyFlags, bool>
  nameWithType: Func<VehiclePathNodePropertyFlags, bool>
  fullName: System.Func<GTA.VehiclePathNodePropertyFlags, bool>
  nameWithType.vb: Func(Of VehiclePathNodePropertyFlags, Boolean)
  fullName.vb: System.Func(Of GTA.VehiclePathNodePropertyFlags, Boolean)
  name.vb: Func(Of VehiclePathNodePropertyFlags, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: GTA.VehiclePathNodePropertyFlags
    name: VehiclePathNodePropertyFlags
    isExternal: true
    href: GTA.VehiclePathNodePropertyFlags.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.VehiclePathNodePropertyFlags
    name: VehiclePathNodePropertyFlags
    isExternal: true
    href: GTA.VehiclePathNodePropertyFlags.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.PathNode[]
  isExternal: true
  href: GTA.PathNode.html
  name: PathNode[]
  nameWithType: PathNode[]
  fullName: GTA.PathNode[]
  nameWithType.vb: PathNode()
  fullName.vb: GTA.PathNode()
  name.vb: PathNode()
  spec.csharp:
  - uid: GTA.PathNode
    name: PathNode
    isExternal: true
    href: GTA.PathNode.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: GTA.PathNode
    name: PathNode
    isExternal: true
    href: GTA.PathNode.html
  - name: (
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: GTA.PathFind.GetNearbyVehicleNodes*
  commentId: Overload:GTA.PathFind.GetNearbyVehicleNodes
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetNearbyVehicleNodes_GTA_Math_Vector3_System_Single_System_Func_GTA_VehiclePathNodePropertyFlags_System_Boolean__
  name: GetNearbyVehicleNodes
  nameWithType: PathFind.GetNearbyVehicleNodes
  fullName: GTA.PathFind.GetNearbyVehicleNodes
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.PathFind.GetVehicleNodesInArea*
  commentId: Overload:GTA.PathFind.GetVehicleNodesInArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetVehicleNodesInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Func_GTA_VehiclePathNodePropertyFlags_System_Boolean__
  name: GetVehicleNodesInArea
  nameWithType: PathFind.GetVehicleNodesInArea
  fullName: GTA.PathFind.GetVehicleNodesInArea
- uid: GTA.PathFind.GetClosestVehicleNode*
  commentId: Overload:GTA.PathFind.GetClosestVehicleNode
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetClosestVehicleNode_GTA_Math_Vector3_System_Single_System_Func_GTA_VehiclePathNodePropertyFlags_System_Boolean__
  name: GetClosestVehicleNode
  nameWithType: PathFind.GetClosestVehicleNode
  fullName: GTA.PathFind.GetClosestVehicleNode
- uid: GTA.PathNode
  commentId: T:GTA.PathNode
  parent: GTA
  isExternal: true
  href: GTA.PathNode.html
  name: PathNode
  nameWithType: PathNode
  fullName: GTA.PathNode
- uid: GTA.PathFind.GetClosestVehicleNodePosition*
  commentId: Overload:GTA.PathFind.GetClosestVehicleNodePosition
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetClosestVehicleNodePosition_GTA_Math_Vector3_GTA_Math_Vector3__GTA_GetClosestVehicleNodeFlags_System_Single_System_Single_
  name: GetClosestVehicleNodePosition
  nameWithType: PathFind.GetClosestVehicleNodePosition
  fullName: GTA.PathFind.GetClosestVehicleNodePosition
- uid: GTA.GetClosestVehicleNodeFlags
  commentId: T:GTA.GetClosestVehicleNodeFlags
  parent: GTA
  isExternal: true
  href: GTA.GetClosestVehicleNodeFlags.html
  name: GetClosestVehicleNodeFlags
  nameWithType: GetClosestVehicleNodeFlags
  fullName: GTA.GetClosestVehicleNodeFlags
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.PathFind.GetNthClosestVehicleNode*
  commentId: Overload:GTA.PathFind.GetNthClosestVehicleNode
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetNthClosestVehicleNode_GTA_Math_Vector3_System_Int32_GTA_GetClosestVehicleNodeFlags_System_Single_System_Single_
  name: GetNthClosestVehicleNode
  nameWithType: PathFind.GetNthClosestVehicleNode
  fullName: GTA.PathFind.GetNthClosestVehicleNode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.PathFind.GetNthClosestVehicleNodePosition*
  commentId: Overload:GTA.PathFind.GetNthClosestVehicleNodePosition
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetNthClosestVehicleNodePosition_GTA_Math_Vector3_System_Int32_GTA_Math_Vector3__GTA_GetClosestVehicleNodeFlags_System_Single_System_Single_
  name: GetNthClosestVehicleNodePosition
  nameWithType: PathFind.GetNthClosestVehicleNodePosition
  fullName: GTA.PathFind.GetNthClosestVehicleNodePosition
- uid: GTA.PathFind.GetNthClosestVehicleNodeWithHeading*
  commentId: Overload:GTA.PathFind.GetNthClosestVehicleNodeWithHeading
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetNthClosestVehicleNodeWithHeading_GTA_Math_Vector3_System_Int32_System_Single__System_Int32__GTA_GetClosestVehicleNodeFlags_System_Single_System_Single_
  name: GetNthClosestVehicleNodeWithHeading
  nameWithType: PathFind.GetNthClosestVehicleNodeWithHeading
  fullName: GTA.PathFind.GetNthClosestVehicleNodeWithHeading
- uid: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading*
  commentId: Overload:GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_GetNthClosestVehicleNodePositionWithHeading_GTA_Math_Vector3_System_Int32_GTA_Math_Vector3__System_Single__System_Int32__GTA_GetClosestVehicleNodeFlags_System_Single_System_Single_
  name: GetNthClosestVehicleNodePositionWithHeading
  nameWithType: PathFind.GetNthClosestVehicleNodePositionWithHeading
  fullName: GTA.PathFind.GetNthClosestVehicleNodePositionWithHeading
- uid: GTA.PathFind.ArePathNodesLoadedForArea*
  commentId: Overload:GTA.PathFind.ArePathNodesLoadedForArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_ArePathNodesLoadedForArea_GTA_Math_Vector2_GTA_Math_Vector2_
  name: ArePathNodesLoadedForArea
  nameWithType: PathFind.ArePathNodesLoadedForArea
  fullName: GTA.PathFind.ArePathNodesLoadedForArea
- uid: GTA.Math.Vector2
  commentId: T:GTA.Math.Vector2
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: GTA.Math.Vector2
- uid: GTA.PathFind.RequestPathNodesInAreaThisFrame*
  commentId: Overload:GTA.PathFind.RequestPathNodesInAreaThisFrame
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_RequestPathNodesInAreaThisFrame_GTA_Math_Vector2_GTA_Math_Vector2_
  name: RequestPathNodesInAreaThisFrame
  nameWithType: PathFind.RequestPathNodesInAreaThisFrame
  fullName: GTA.PathFind.RequestPathNodesInAreaThisFrame
- uid: GTA.PathFind.SwitchPedPathsInArea*
  commentId: Overload:GTA.PathFind.SwitchPedPathsInArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SwitchPedPathsInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_
  name: SwitchPedPathsInArea
  nameWithType: PathFind.SwitchPedPathsInArea
  fullName: GTA.PathFind.SwitchPedPathsInArea
- uid: GTA.PathFind.SetPedPathsBackToOriginal*
  commentId: Overload:GTA.PathFind.SetPedPathsBackToOriginal
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SetPedPathsBackToOriginal_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_
  name: SetPedPathsBackToOriginal
  nameWithType: PathFind.SetPedPathsBackToOriginal
  fullName: GTA.PathFind.SetPedPathsBackToOriginal
- uid: GTA.PathFind.SwitchVehicleNodesInArea*
  commentId: Overload:GTA.PathFind.SwitchVehicleNodesInArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SwitchVehicleNodesInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_
  name: SwitchVehicleNodesInArea
  nameWithType: PathFind.SwitchVehicleNodesInArea
  fullName: GTA.PathFind.SwitchVehicleNodesInArea
- uid: GTA.PathFind.SwitchVehicleNodesInAngledArea*
  commentId: Overload:GTA.PathFind.SwitchVehicleNodesInAngledArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SwitchVehicleNodesInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_
  name: SwitchVehicleNodesInAngledArea
  nameWithType: PathFind.SwitchVehicleNodesInAngledArea
  fullName: GTA.PathFind.SwitchVehicleNodesInAngledArea
- uid: GTA.PathFind.SetVehicleNodesBackToOriginal*
  commentId: Overload:GTA.PathFind.SetVehicleNodesBackToOriginal
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SetVehicleNodesBackToOriginal_GTA_Math_Vector3_GTA_Math_Vector3_
  name: SetVehicleNodesBackToOriginal
  nameWithType: PathFind.SetVehicleNodesBackToOriginal
  fullName: GTA.PathFind.SetVehicleNodesBackToOriginal
- uid: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea*
  commentId: Overload:GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea
  isExternal: true
  href: GTA.PathFind.html#GTA_PathFind_SetVehicleNodesBackToOriginalInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_
  name: SetVehicleNodesBackToOriginalInAngledArea
  nameWithType: PathFind.SetVehicleNodesBackToOriginalInAngledArea
  fullName: GTA.PathFind.SetVehicleNodesBackToOriginalInAngledArea
