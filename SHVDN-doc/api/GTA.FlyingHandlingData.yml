### YamlMime:ManagedReference
items:
- uid: GTA.FlyingHandlingData
  commentId: T:GTA.FlyingHandlingData
  id: FlyingHandlingData
  parent: GTA
  children:
  - GTA.FlyingHandlingData.AttackDiveMultiplier
  - GTA.FlyingHandlingData.AttackLiftMultiplier
  - GTA.FlyingHandlingData.Equals(System.Object)
  - GTA.FlyingHandlingData.ExtraLiftWithRoll
  - GTA.FlyingHandlingData.FormLiftMultiplier
  - GTA.FlyingHandlingData.GearDownDragV
  - GTA.FlyingHandlingData.GearDownLiftMultiplier
  - GTA.FlyingHandlingData.GetHashCode
  - GTA.FlyingHandlingData.MoveResistance
  - GTA.FlyingHandlingData.PitchMultiplier
  - GTA.FlyingHandlingData.PitchStabilize
  - GTA.FlyingHandlingData.RollMultiplier
  - GTA.FlyingHandlingData.RollStabilize
  - GTA.FlyingHandlingData.SideSlipMultiplier
  - GTA.FlyingHandlingData.Thrust
  - GTA.FlyingHandlingData.ThrustFallOff
  - GTA.FlyingHandlingData.ThrustVectoring
  - GTA.FlyingHandlingData.VectorSpeedResistance
  - GTA.FlyingHandlingData.VectorTurnResistance
  - GTA.FlyingHandlingData.WindMultiplier
  - GTA.FlyingHandlingData.YawMultiplier
  - GTA.FlyingHandlingData.YawStabilize
  - GTA.FlyingHandlingData.op_Equality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  - GTA.FlyingHandlingData.op_Inequality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  langs:
  - csharp
  - vb
  name: FlyingHandlingData
  nameWithType: FlyingHandlingData
  fullName: GTA.FlyingHandlingData
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class FlyingHandlingData : BaseSubHandlingData'
    content.vb: Public NotInheritable Class FlyingHandlingData Inherits BaseSubHandlingData
  inheritance:
  - System.Object
  - GTA.BaseSubHandlingData
  inheritedMembers:
  - GTA.BaseSubHandlingData.MemoryAddress
  - GTA.BaseSubHandlingData.Parent
  - GTA.BaseSubHandlingData.HandlingType
  - GTA.BaseSubHandlingData.IsValid
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.FlyingHandlingData.Equals(System.Object)
  commentId: M:GTA.FlyingHandlingData.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: FlyingHandlingData.Equals(object)
  fullName: GTA.FlyingHandlingData.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: GTA.BaseSubHandlingData.Equals(System.Object)
  overload: GTA.FlyingHandlingData.Equals*
  nameWithType.vb: FlyingHandlingData.Equals(Object)
  fullName.vb: GTA.FlyingHandlingData.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.FlyingHandlingData.op_Equality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  commentId: M:GTA.FlyingHandlingData.op_Equality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  id: op_Equality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: operator ==(FlyingHandlingData, FlyingHandlingData)
  nameWithType: FlyingHandlingData.operator ==(FlyingHandlingData, FlyingHandlingData)
  fullName: GTA.FlyingHandlingData.operator ==(GTA.FlyingHandlingData, GTA.FlyingHandlingData)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(FlyingHandlingData left, FlyingHandlingData right)
    parameters:
    - id: left
      type: GTA.FlyingHandlingData
    - id: right
      type: GTA.FlyingHandlingData
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As FlyingHandlingData, right As FlyingHandlingData) As Boolean
  overload: GTA.FlyingHandlingData.op_Equality*
  nameWithType.vb: FlyingHandlingData.=(FlyingHandlingData, FlyingHandlingData)
  fullName.vb: GTA.FlyingHandlingData.=(GTA.FlyingHandlingData, GTA.FlyingHandlingData)
  name.vb: =(FlyingHandlingData, FlyingHandlingData)
- uid: GTA.FlyingHandlingData.op_Inequality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  commentId: M:GTA.FlyingHandlingData.op_Inequality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  id: op_Inequality(GTA.FlyingHandlingData,GTA.FlyingHandlingData)
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: operator !=(FlyingHandlingData, FlyingHandlingData)
  nameWithType: FlyingHandlingData.operator !=(FlyingHandlingData, FlyingHandlingData)
  fullName: GTA.FlyingHandlingData.operator !=(GTA.FlyingHandlingData, GTA.FlyingHandlingData)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(FlyingHandlingData left, FlyingHandlingData right)
    parameters:
    - id: left
      type: GTA.FlyingHandlingData
    - id: right
      type: GTA.FlyingHandlingData
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As FlyingHandlingData, right As FlyingHandlingData) As Boolean
  overload: GTA.FlyingHandlingData.op_Inequality*
  nameWithType.vb: FlyingHandlingData.<>(FlyingHandlingData, FlyingHandlingData)
  fullName.vb: GTA.FlyingHandlingData.<>(GTA.FlyingHandlingData, GTA.FlyingHandlingData)
  name.vb: <>(FlyingHandlingData, FlyingHandlingData)
- uid: GTA.FlyingHandlingData.GetHashCode
  commentId: M:GTA.FlyingHandlingData.GetHashCode
  id: GetHashCode
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FlyingHandlingData.GetHashCode()
  fullName: GTA.FlyingHandlingData.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: GTA.BaseSubHandlingData.GetHashCode
  overload: GTA.FlyingHandlingData.GetHashCode*
- uid: GTA.FlyingHandlingData.Thrust
  commentId: P:GTA.FlyingHandlingData.Thrust
  id: Thrust
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: Thrust
  nameWithType: FlyingHandlingData.Thrust
  fullName: GTA.FlyingHandlingData.Thrust
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float Thrust { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Thrust As Single
  overload: GTA.FlyingHandlingData.Thrust*
- uid: GTA.FlyingHandlingData.ThrustFallOff
  commentId: P:GTA.FlyingHandlingData.ThrustFallOff
  id: ThrustFallOff
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: ThrustFallOff
  nameWithType: FlyingHandlingData.ThrustFallOff
  fullName: GTA.FlyingHandlingData.ThrustFallOff
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ThrustFallOff { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ThrustFallOff As Single
  overload: GTA.FlyingHandlingData.ThrustFallOff*
- uid: GTA.FlyingHandlingData.ThrustVectoring
  commentId: P:GTA.FlyingHandlingData.ThrustVectoring
  id: ThrustVectoring
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: ThrustVectoring
  nameWithType: FlyingHandlingData.ThrustVectoring
  fullName: GTA.FlyingHandlingData.ThrustVectoring
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ThrustVectoring { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ThrustVectoring As Single
  overload: GTA.FlyingHandlingData.ThrustVectoring*
- uid: GTA.FlyingHandlingData.YawMultiplier
  commentId: P:GTA.FlyingHandlingData.YawMultiplier
  id: YawMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: YawMultiplier
  nameWithType: FlyingHandlingData.YawMultiplier
  fullName: GTA.FlyingHandlingData.YawMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float YawMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property YawMultiplier As Single
  overload: GTA.FlyingHandlingData.YawMultiplier*
- uid: GTA.FlyingHandlingData.YawStabilize
  commentId: P:GTA.FlyingHandlingData.YawStabilize
  id: YawStabilize
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: YawStabilize
  nameWithType: FlyingHandlingData.YawStabilize
  fullName: GTA.FlyingHandlingData.YawStabilize
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float YawStabilize { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property YawStabilize As Single
  overload: GTA.FlyingHandlingData.YawStabilize*
- uid: GTA.FlyingHandlingData.SideSlipMultiplier
  commentId: P:GTA.FlyingHandlingData.SideSlipMultiplier
  id: SideSlipMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: SideSlipMultiplier
  nameWithType: FlyingHandlingData.SideSlipMultiplier
  fullName: GTA.FlyingHandlingData.SideSlipMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float SideSlipMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property SideSlipMultiplier As Single
  overload: GTA.FlyingHandlingData.SideSlipMultiplier*
- uid: GTA.FlyingHandlingData.RollMultiplier
  commentId: P:GTA.FlyingHandlingData.RollMultiplier
  id: RollMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: RollMultiplier
  nameWithType: FlyingHandlingData.RollMultiplier
  fullName: GTA.FlyingHandlingData.RollMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float RollMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RollMultiplier As Single
  overload: GTA.FlyingHandlingData.RollMultiplier*
- uid: GTA.FlyingHandlingData.RollStabilize
  commentId: P:GTA.FlyingHandlingData.RollStabilize
  id: RollStabilize
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: RollStabilize
  nameWithType: FlyingHandlingData.RollStabilize
  fullName: GTA.FlyingHandlingData.RollStabilize
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float RollStabilize { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RollStabilize As Single
  overload: GTA.FlyingHandlingData.RollStabilize*
- uid: GTA.FlyingHandlingData.PitchMultiplier
  commentId: P:GTA.FlyingHandlingData.PitchMultiplier
  id: PitchMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: PitchMultiplier
  nameWithType: FlyingHandlingData.PitchMultiplier
  fullName: GTA.FlyingHandlingData.PitchMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float PitchMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PitchMultiplier As Single
  overload: GTA.FlyingHandlingData.PitchMultiplier*
- uid: GTA.FlyingHandlingData.PitchStabilize
  commentId: P:GTA.FlyingHandlingData.PitchStabilize
  id: PitchStabilize
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: PitchStabilize
  nameWithType: FlyingHandlingData.PitchStabilize
  fullName: GTA.FlyingHandlingData.PitchStabilize
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float PitchStabilize { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PitchStabilize As Single
  overload: GTA.FlyingHandlingData.PitchStabilize*
- uid: GTA.FlyingHandlingData.FormLiftMultiplier
  commentId: P:GTA.FlyingHandlingData.FormLiftMultiplier
  id: FormLiftMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: FormLiftMultiplier
  nameWithType: FlyingHandlingData.FormLiftMultiplier
  fullName: GTA.FlyingHandlingData.FormLiftMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float FormLiftMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FormLiftMultiplier As Single
  overload: GTA.FlyingHandlingData.FormLiftMultiplier*
- uid: GTA.FlyingHandlingData.AttackLiftMultiplier
  commentId: P:GTA.FlyingHandlingData.AttackLiftMultiplier
  id: AttackLiftMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: AttackLiftMultiplier
  nameWithType: FlyingHandlingData.AttackLiftMultiplier
  fullName: GTA.FlyingHandlingData.AttackLiftMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float AttackLiftMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AttackLiftMultiplier As Single
  overload: GTA.FlyingHandlingData.AttackLiftMultiplier*
- uid: GTA.FlyingHandlingData.AttackDiveMultiplier
  commentId: P:GTA.FlyingHandlingData.AttackDiveMultiplier
  id: AttackDiveMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: AttackDiveMultiplier
  nameWithType: FlyingHandlingData.AttackDiveMultiplier
  fullName: GTA.FlyingHandlingData.AttackDiveMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float AttackDiveMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AttackDiveMultiplier As Single
  overload: GTA.FlyingHandlingData.AttackDiveMultiplier*
- uid: GTA.FlyingHandlingData.GearDownDragV
  commentId: P:GTA.FlyingHandlingData.GearDownDragV
  id: GearDownDragV
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: GearDownDragV
  nameWithType: FlyingHandlingData.GearDownDragV
  fullName: GTA.FlyingHandlingData.GearDownDragV
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float GearDownDragV { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property GearDownDragV As Single
  overload: GTA.FlyingHandlingData.GearDownDragV*
- uid: GTA.FlyingHandlingData.GearDownLiftMultiplier
  commentId: P:GTA.FlyingHandlingData.GearDownLiftMultiplier
  id: GearDownLiftMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: GearDownLiftMultiplier
  nameWithType: FlyingHandlingData.GearDownLiftMultiplier
  fullName: GTA.FlyingHandlingData.GearDownLiftMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float GearDownLiftMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property GearDownLiftMultiplier As Single
  overload: GTA.FlyingHandlingData.GearDownLiftMultiplier*
- uid: GTA.FlyingHandlingData.WindMultiplier
  commentId: P:GTA.FlyingHandlingData.WindMultiplier
  id: WindMultiplier
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: WindMultiplier
  nameWithType: FlyingHandlingData.WindMultiplier
  fullName: GTA.FlyingHandlingData.WindMultiplier
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float WindMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WindMultiplier As Single
  overload: GTA.FlyingHandlingData.WindMultiplier*
- uid: GTA.FlyingHandlingData.MoveResistance
  commentId: P:GTA.FlyingHandlingData.MoveResistance
  id: MoveResistance
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: MoveResistance
  nameWithType: FlyingHandlingData.MoveResistance
  fullName: GTA.FlyingHandlingData.MoveResistance
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float MoveResistance { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MoveResistance As Single
  overload: GTA.FlyingHandlingData.MoveResistance*
- uid: GTA.FlyingHandlingData.VectorTurnResistance
  commentId: P:GTA.FlyingHandlingData.VectorTurnResistance
  id: VectorTurnResistance
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: VectorTurnResistance
  nameWithType: FlyingHandlingData.VectorTurnResistance
  fullName: GTA.FlyingHandlingData.VectorTurnResistance
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 VectorTurnResistance { get; set; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public Property VectorTurnResistance As Vector3
  overload: GTA.FlyingHandlingData.VectorTurnResistance*
- uid: GTA.FlyingHandlingData.VectorSpeedResistance
  commentId: P:GTA.FlyingHandlingData.VectorSpeedResistance
  id: VectorSpeedResistance
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: VectorSpeedResistance
  nameWithType: FlyingHandlingData.VectorSpeedResistance
  fullName: GTA.FlyingHandlingData.VectorSpeedResistance
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 VectorSpeedResistance { get; set; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public Property VectorSpeedResistance As Vector3
  overload: GTA.FlyingHandlingData.VectorSpeedResistance*
- uid: GTA.FlyingHandlingData.ExtraLiftWithRoll
  commentId: P:GTA.FlyingHandlingData.ExtraLiftWithRoll
  id: ExtraLiftWithRoll
  parent: GTA.FlyingHandlingData
  langs:
  - csharp
  - vb
  name: ExtraLiftWithRoll
  nameWithType: FlyingHandlingData.ExtraLiftWithRoll
  fullName: GTA.FlyingHandlingData.ExtraLiftWithRoll
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ExtraLiftWithRoll { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ExtraLiftWithRoll As Single
  overload: GTA.FlyingHandlingData.ExtraLiftWithRoll*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.BaseSubHandlingData
  commentId: T:GTA.BaseSubHandlingData
  parent: GTA
  isExternal: true
  href: GTA.BaseSubHandlingData.html
  name: BaseSubHandlingData
  nameWithType: BaseSubHandlingData
  fullName: GTA.BaseSubHandlingData
- uid: GTA.BaseSubHandlingData.MemoryAddress
  commentId: P:GTA.BaseSubHandlingData.MemoryAddress
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_MemoryAddress
  name: MemoryAddress
  nameWithType: BaseSubHandlingData.MemoryAddress
  fullName: GTA.BaseSubHandlingData.MemoryAddress
- uid: GTA.BaseSubHandlingData.Parent
  commentId: P:GTA.BaseSubHandlingData.Parent
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_Parent
  name: Parent
  nameWithType: BaseSubHandlingData.Parent
  fullName: GTA.BaseSubHandlingData.Parent
- uid: GTA.BaseSubHandlingData.HandlingType
  commentId: P:GTA.BaseSubHandlingData.HandlingType
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_HandlingType
  name: HandlingType
  nameWithType: BaseSubHandlingData.HandlingType
  fullName: GTA.BaseSubHandlingData.HandlingType
- uid: GTA.BaseSubHandlingData.IsValid
  commentId: P:GTA.BaseSubHandlingData.IsValid
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_IsValid
  name: IsValid
  nameWithType: BaseSubHandlingData.IsValid
  fullName: GTA.BaseSubHandlingData.IsValid
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.BaseSubHandlingData.Equals(System.Object)
  commentId: M:GTA.BaseSubHandlingData.Equals(System.Object)
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_Equals_System_Object_
  name: Equals(object)
  nameWithType: BaseSubHandlingData.Equals(object)
  fullName: GTA.BaseSubHandlingData.Equals(object)
  nameWithType.vb: BaseSubHandlingData.Equals(Object)
  fullName.vb: GTA.BaseSubHandlingData.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: GTA.BaseSubHandlingData.Equals(System.Object)
    name: Equals
    isExternal: true
    href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: GTA.BaseSubHandlingData.Equals(System.Object)
    name: Equals
    isExternal: true
    href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.FlyingHandlingData.Equals*
  commentId: Overload:GTA.FlyingHandlingData.Equals
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_Equals_System_Object_
  name: Equals
  nameWithType: FlyingHandlingData.Equals
  fullName: GTA.FlyingHandlingData.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.FlyingHandlingData.op_Equality*
  commentId: Overload:GTA.FlyingHandlingData.op_Equality
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_op_Equality_GTA_FlyingHandlingData_GTA_FlyingHandlingData_
  name: operator ==
  nameWithType: FlyingHandlingData.operator ==
  fullName: GTA.FlyingHandlingData.operator ==
  nameWithType.vb: FlyingHandlingData.=
  fullName.vb: GTA.FlyingHandlingData.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.FlyingHandlingData.op_Equality*
    name: ==
    isExternal: true
    href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_op_Equality_GTA_FlyingHandlingData_GTA_FlyingHandlingData_
- uid: GTA.FlyingHandlingData
  commentId: T:GTA.FlyingHandlingData
  parent: GTA
  isExternal: true
  href: GTA.FlyingHandlingData.html
  name: FlyingHandlingData
  nameWithType: FlyingHandlingData
  fullName: GTA.FlyingHandlingData
- uid: GTA.FlyingHandlingData.op_Inequality*
  commentId: Overload:GTA.FlyingHandlingData.op_Inequality
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_op_Inequality_GTA_FlyingHandlingData_GTA_FlyingHandlingData_
  name: operator !=
  nameWithType: FlyingHandlingData.operator !=
  fullName: GTA.FlyingHandlingData.operator !=
  nameWithType.vb: FlyingHandlingData.<>
  fullName.vb: GTA.FlyingHandlingData.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.FlyingHandlingData.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_op_Inequality_GTA_FlyingHandlingData_GTA_FlyingHandlingData_
- uid: GTA.BaseSubHandlingData.GetHashCode
  commentId: M:GTA.BaseSubHandlingData.GetHashCode
  parent: GTA.BaseSubHandlingData
  isExternal: true
  href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_GetHashCode
  name: GetHashCode()
  nameWithType: BaseSubHandlingData.GetHashCode()
  fullName: GTA.BaseSubHandlingData.GetHashCode()
  spec.csharp:
  - uid: GTA.BaseSubHandlingData.GetHashCode
    name: GetHashCode
    isExternal: true
    href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.BaseSubHandlingData.GetHashCode
    name: GetHashCode
    isExternal: true
    href: GTA.BaseSubHandlingData.html#GTA_BaseSubHandlingData_GetHashCode
  - name: (
  - name: )
- uid: GTA.FlyingHandlingData.GetHashCode*
  commentId: Overload:GTA.FlyingHandlingData.GetHashCode
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_GetHashCode
  name: GetHashCode
  nameWithType: FlyingHandlingData.GetHashCode
  fullName: GTA.FlyingHandlingData.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.FlyingHandlingData.Thrust*
  commentId: Overload:GTA.FlyingHandlingData.Thrust
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_Thrust
  name: Thrust
  nameWithType: FlyingHandlingData.Thrust
  fullName: GTA.FlyingHandlingData.Thrust
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.FlyingHandlingData.ThrustFallOff*
  commentId: Overload:GTA.FlyingHandlingData.ThrustFallOff
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_ThrustFallOff
  name: ThrustFallOff
  nameWithType: FlyingHandlingData.ThrustFallOff
  fullName: GTA.FlyingHandlingData.ThrustFallOff
- uid: GTA.FlyingHandlingData.ThrustVectoring*
  commentId: Overload:GTA.FlyingHandlingData.ThrustVectoring
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_ThrustVectoring
  name: ThrustVectoring
  nameWithType: FlyingHandlingData.ThrustVectoring
  fullName: GTA.FlyingHandlingData.ThrustVectoring
- uid: GTA.FlyingHandlingData.YawMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.YawMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_YawMultiplier
  name: YawMultiplier
  nameWithType: FlyingHandlingData.YawMultiplier
  fullName: GTA.FlyingHandlingData.YawMultiplier
- uid: GTA.FlyingHandlingData.YawStabilize*
  commentId: Overload:GTA.FlyingHandlingData.YawStabilize
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_YawStabilize
  name: YawStabilize
  nameWithType: FlyingHandlingData.YawStabilize
  fullName: GTA.FlyingHandlingData.YawStabilize
- uid: GTA.FlyingHandlingData.SideSlipMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.SideSlipMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_SideSlipMultiplier
  name: SideSlipMultiplier
  nameWithType: FlyingHandlingData.SideSlipMultiplier
  fullName: GTA.FlyingHandlingData.SideSlipMultiplier
- uid: GTA.FlyingHandlingData.RollMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.RollMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_RollMultiplier
  name: RollMultiplier
  nameWithType: FlyingHandlingData.RollMultiplier
  fullName: GTA.FlyingHandlingData.RollMultiplier
- uid: GTA.FlyingHandlingData.RollStabilize*
  commentId: Overload:GTA.FlyingHandlingData.RollStabilize
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_RollStabilize
  name: RollStabilize
  nameWithType: FlyingHandlingData.RollStabilize
  fullName: GTA.FlyingHandlingData.RollStabilize
- uid: GTA.FlyingHandlingData.PitchMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.PitchMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_PitchMultiplier
  name: PitchMultiplier
  nameWithType: FlyingHandlingData.PitchMultiplier
  fullName: GTA.FlyingHandlingData.PitchMultiplier
- uid: GTA.FlyingHandlingData.PitchStabilize*
  commentId: Overload:GTA.FlyingHandlingData.PitchStabilize
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_PitchStabilize
  name: PitchStabilize
  nameWithType: FlyingHandlingData.PitchStabilize
  fullName: GTA.FlyingHandlingData.PitchStabilize
- uid: GTA.FlyingHandlingData.FormLiftMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.FormLiftMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_FormLiftMultiplier
  name: FormLiftMultiplier
  nameWithType: FlyingHandlingData.FormLiftMultiplier
  fullName: GTA.FlyingHandlingData.FormLiftMultiplier
- uid: GTA.FlyingHandlingData.AttackLiftMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.AttackLiftMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_AttackLiftMultiplier
  name: AttackLiftMultiplier
  nameWithType: FlyingHandlingData.AttackLiftMultiplier
  fullName: GTA.FlyingHandlingData.AttackLiftMultiplier
- uid: GTA.FlyingHandlingData.AttackDiveMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.AttackDiveMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_AttackDiveMultiplier
  name: AttackDiveMultiplier
  nameWithType: FlyingHandlingData.AttackDiveMultiplier
  fullName: GTA.FlyingHandlingData.AttackDiveMultiplier
- uid: GTA.FlyingHandlingData.GearDownDragV*
  commentId: Overload:GTA.FlyingHandlingData.GearDownDragV
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_GearDownDragV
  name: GearDownDragV
  nameWithType: FlyingHandlingData.GearDownDragV
  fullName: GTA.FlyingHandlingData.GearDownDragV
- uid: GTA.FlyingHandlingData.GearDownLiftMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.GearDownLiftMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_GearDownLiftMultiplier
  name: GearDownLiftMultiplier
  nameWithType: FlyingHandlingData.GearDownLiftMultiplier
  fullName: GTA.FlyingHandlingData.GearDownLiftMultiplier
- uid: GTA.FlyingHandlingData.WindMultiplier*
  commentId: Overload:GTA.FlyingHandlingData.WindMultiplier
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_WindMultiplier
  name: WindMultiplier
  nameWithType: FlyingHandlingData.WindMultiplier
  fullName: GTA.FlyingHandlingData.WindMultiplier
- uid: GTA.FlyingHandlingData.MoveResistance*
  commentId: Overload:GTA.FlyingHandlingData.MoveResistance
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_MoveResistance
  name: MoveResistance
  nameWithType: FlyingHandlingData.MoveResistance
  fullName: GTA.FlyingHandlingData.MoveResistance
- uid: GTA.FlyingHandlingData.VectorTurnResistance*
  commentId: Overload:GTA.FlyingHandlingData.VectorTurnResistance
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_VectorTurnResistance
  name: VectorTurnResistance
  nameWithType: FlyingHandlingData.VectorTurnResistance
  fullName: GTA.FlyingHandlingData.VectorTurnResistance
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.FlyingHandlingData.VectorSpeedResistance*
  commentId: Overload:GTA.FlyingHandlingData.VectorSpeedResistance
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_VectorSpeedResistance
  name: VectorSpeedResistance
  nameWithType: FlyingHandlingData.VectorSpeedResistance
  fullName: GTA.FlyingHandlingData.VectorSpeedResistance
- uid: GTA.FlyingHandlingData.ExtraLiftWithRoll*
  commentId: Overload:GTA.FlyingHandlingData.ExtraLiftWithRoll
  isExternal: true
  href: GTA.FlyingHandlingData.html#GTA_FlyingHandlingData_ExtraLiftWithRoll
  name: ExtraLiftWithRoll
  nameWithType: FlyingHandlingData.ExtraLiftWithRoll
  fullName: GTA.FlyingHandlingData.ExtraLiftWithRoll
