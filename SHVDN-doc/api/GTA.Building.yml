### YamlMime:ManagedReference
items:
- uid: GTA.Building
  commentId: T:GTA.Building
  id: Building
  parent: GTA
  children:
  - GTA.Building.Equals(System.Object)
  - GTA.Building.Exists
  - GTA.Building.FromHandle(System.Int32)
  - GTA.Building.GetHashCode
  - GTA.Building.Handle
  - GTA.Building.Matrix
  - GTA.Building.MemoryAddress
  - GTA.Building.Model
  - GTA.Building.Position
  - GTA.Building.Quaternion
  - GTA.Building.Rotation
  - GTA.Building.op_Equality(GTA.Building,GTA.Building)
  - GTA.Building.op_Inequality(GTA.Building,GTA.Building)
  langs:
  - csharp
  - vb
  name: Building
  nameWithType: Building
  fullName: GTA.Building
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class Building : IExistable'
    content.vb: Public NotInheritable Class Building Implements IExistable
  inheritance:
  - System.Object
  implements:
  - GTA.IExistable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Building.FromHandle(System.Int32)
  commentId: M:GTA.Building.FromHandle(System.Int32)
  id: FromHandle(System.Int32)
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: FromHandle(int)
  nameWithType: Building.FromHandle(int)
  fullName: GTA.Building.FromHandle(int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static Building FromHandle(int handle)
    parameters:
    - id: handle
      type: System.Int32
    return:
      type: GTA.Building
    content.vb: Public Shared Function FromHandle(handle As Integer) As Building
  overload: GTA.Building.FromHandle*
  nameWithType.vb: Building.FromHandle(Integer)
  fullName.vb: GTA.Building.FromHandle(Integer)
  name.vb: FromHandle(Integer)
- uid: GTA.Building.Exists
  commentId: M:GTA.Building.Exists
  id: Exists
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: Building.Exists()
  fullName: GTA.Building.Exists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public bool Exists()
    return:
      type: System.Boolean
    content.vb: Public Function Exists() As Boolean
  overload: GTA.Building.Exists*
  implements:
  - GTA.IExistable.Exists
- uid: GTA.Building.Equals(System.Object)
  commentId: M:GTA.Building.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Building.Equals(object)
  fullName: GTA.Building.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTA.Building.Equals*
  nameWithType.vb: Building.Equals(Object)
  fullName.vb: GTA.Building.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Building.op_Equality(GTA.Building,GTA.Building)
  commentId: M:GTA.Building.op_Equality(GTA.Building,GTA.Building)
  id: op_Equality(GTA.Building,GTA.Building)
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: operator ==(Building, Building)
  nameWithType: Building.operator ==(Building, Building)
  fullName: GTA.Building.operator ==(GTA.Building, GTA.Building)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(Building left, Building right)
    parameters:
    - id: left
      type: GTA.Building
    - id: right
      type: GTA.Building
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Building, right As Building) As Boolean
  overload: GTA.Building.op_Equality*
  nameWithType.vb: Building.=(Building, Building)
  fullName.vb: GTA.Building.=(GTA.Building, GTA.Building)
  name.vb: =(Building, Building)
- uid: GTA.Building.op_Inequality(GTA.Building,GTA.Building)
  commentId: M:GTA.Building.op_Inequality(GTA.Building,GTA.Building)
  id: op_Inequality(GTA.Building,GTA.Building)
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: operator !=(Building, Building)
  nameWithType: Building.operator !=(Building, Building)
  fullName: GTA.Building.operator !=(GTA.Building, GTA.Building)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(Building left, Building right)
    parameters:
    - id: left
      type: GTA.Building
    - id: right
      type: GTA.Building
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Building, right As Building) As Boolean
  overload: GTA.Building.op_Inequality*
  nameWithType.vb: Building.<>(Building, Building)
  fullName.vb: GTA.Building.<>(GTA.Building, GTA.Building)
  name.vb: <>(Building, Building)
- uid: GTA.Building.GetHashCode
  commentId: M:GTA.Building.GetHashCode
  id: GetHashCode
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Building.GetHashCode()
  fullName: GTA.Building.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: GTA.Building.GetHashCode*
- uid: GTA.Building.Handle
  commentId: P:GTA.Building.Handle
  id: Handle
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: Building.Handle
  fullName: GTA.Building.Handle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Handle { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Handle As Integer
  overload: GTA.Building.Handle*
- uid: GTA.Building.MemoryAddress
  commentId: P:GTA.Building.MemoryAddress
  id: MemoryAddress
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: MemoryAddress
  nameWithType: Building.MemoryAddress
  fullName: GTA.Building.MemoryAddress
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public IntPtr MemoryAddress { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property MemoryAddress As IntPtr
  overload: GTA.Building.MemoryAddress*
- uid: GTA.Building.Model
  commentId: P:GTA.Building.Model
  id: Model
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Building.Model
  fullName: GTA.Building.Model
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Model Model { get; }
    parameters: []
    return:
      type: GTA.Model
    content.vb: Public ReadOnly Property Model As Model
  overload: GTA.Building.Model*
- uid: GTA.Building.Matrix
  commentId: P:GTA.Building.Matrix
  id: Matrix
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: Building.Matrix
  fullName: GTA.Building.Matrix
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Matrix Matrix { get; }
    parameters: []
    return:
      type: GTA.Math.Matrix
    content.vb: Public ReadOnly Property Matrix As Matrix
  overload: GTA.Building.Matrix*
- uid: GTA.Building.Rotation
  commentId: P:GTA.Building.Rotation
  id: Rotation
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Building.Rotation
  fullName: GTA.Building.Rotation
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Rotation { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Rotation As Vector3
  overload: GTA.Building.Rotation*
- uid: GTA.Building.Quaternion
  commentId: P:GTA.Building.Quaternion
  id: Quaternion
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: Building.Quaternion
  fullName: GTA.Building.Quaternion
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Quaternion Quaternion { get; }
    parameters: []
    return:
      type: GTA.Math.Quaternion
    content.vb: Public ReadOnly Property Quaternion As Quaternion
  overload: GTA.Building.Quaternion*
- uid: GTA.Building.Position
  commentId: P:GTA.Building.Position
  id: Position
  parent: GTA.Building
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Building.Position
  fullName: GTA.Building.Position
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: GTA.Building.Position*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.IExistable
  commentId: T:GTA.IExistable
  parent: GTA
  isExternal: true
  href: GTA.IExistable.html
  name: IExistable
  nameWithType: IExistable
  fullName: GTA.IExistable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Building.FromHandle*
  commentId: Overload:GTA.Building.FromHandle
  isExternal: true
  href: GTA.Building.html#GTA_Building_FromHandle_System_Int32_
  name: FromHandle
  nameWithType: Building.FromHandle
  fullName: GTA.Building.FromHandle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Building
  commentId: T:GTA.Building
  parent: GTA
  isExternal: true
  href: GTA.Building.html
  name: Building
  nameWithType: Building
  fullName: GTA.Building
- uid: GTA.Building.Exists*
  commentId: Overload:GTA.Building.Exists
  isExternal: true
  href: GTA.Building.html#GTA_Building_Exists
  name: Exists
  nameWithType: Building.Exists
  fullName: GTA.Building.Exists
- uid: GTA.IExistable.Exists
  commentId: M:GTA.IExistable.Exists
  parent: GTA.IExistable
  isExternal: true
  href: GTA.IExistable.html#GTA_IExistable_Exists
  name: Exists()
  nameWithType: IExistable.Exists()
  fullName: GTA.IExistable.Exists()
  spec.csharp:
  - uid: GTA.IExistable.Exists
    name: Exists
    isExternal: true
    href: GTA.IExistable.html#GTA_IExistable_Exists
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.IExistable.Exists
    name: Exists
    isExternal: true
    href: GTA.IExistable.html#GTA_IExistable_Exists
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Building.Equals*
  commentId: Overload:GTA.Building.Equals
  isExternal: true
  href: GTA.Building.html#GTA_Building_Equals_System_Object_
  name: Equals
  nameWithType: Building.Equals
  fullName: GTA.Building.Equals
- uid: GTA.Building.op_Equality*
  commentId: Overload:GTA.Building.op_Equality
  isExternal: true
  href: GTA.Building.html#GTA_Building_op_Equality_GTA_Building_GTA_Building_
  name: operator ==
  nameWithType: Building.operator ==
  fullName: GTA.Building.operator ==
  nameWithType.vb: Building.=
  fullName.vb: GTA.Building.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Building.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Building.html#GTA_Building_op_Equality_GTA_Building_GTA_Building_
- uid: GTA.Building.op_Inequality*
  commentId: Overload:GTA.Building.op_Inequality
  isExternal: true
  href: GTA.Building.html#GTA_Building_op_Inequality_GTA_Building_GTA_Building_
  name: operator !=
  nameWithType: Building.operator !=
  fullName: GTA.Building.operator !=
  nameWithType.vb: Building.<>
  fullName.vb: GTA.Building.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Building.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Building.html#GTA_Building_op_Inequality_GTA_Building_GTA_Building_
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: GTA.Building.GetHashCode*
  commentId: Overload:GTA.Building.GetHashCode
  isExternal: true
  href: GTA.Building.html#GTA_Building_GetHashCode
  name: GetHashCode
  nameWithType: Building.GetHashCode
  fullName: GTA.Building.GetHashCode
- uid: GTA.Building.Handle*
  commentId: Overload:GTA.Building.Handle
  isExternal: true
  href: GTA.Building.html#GTA_Building_Handle
  name: Handle
  nameWithType: Building.Handle
  fullName: GTA.Building.Handle
- uid: GTA.Building.MemoryAddress*
  commentId: Overload:GTA.Building.MemoryAddress
  isExternal: true
  href: GTA.Building.html#GTA_Building_MemoryAddress
  name: MemoryAddress
  nameWithType: Building.MemoryAddress
  fullName: GTA.Building.MemoryAddress
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: GTA.Building.Model*
  commentId: Overload:GTA.Building.Model
  isExternal: true
  href: GTA.Building.html#GTA_Building_Model
  name: Model
  nameWithType: Building.Model
  fullName: GTA.Building.Model
- uid: GTA.Model
  commentId: T:GTA.Model
  parent: GTA
  isExternal: true
  href: GTA.Model.html
  name: Model
  nameWithType: Model
  fullName: GTA.Model
- uid: GTA.Building.Matrix*
  commentId: Overload:GTA.Building.Matrix
  isExternal: true
  href: GTA.Building.html#GTA_Building_Matrix
  name: Matrix
  nameWithType: Building.Matrix
  fullName: GTA.Building.Matrix
- uid: GTA.Math.Matrix
  commentId: T:GTA.Math.Matrix
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Matrix.html
  name: Matrix
  nameWithType: Matrix
  fullName: GTA.Math.Matrix
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.Building.Rotation*
  commentId: Overload:GTA.Building.Rotation
  isExternal: true
  href: GTA.Building.html#GTA_Building_Rotation
  name: Rotation
  nameWithType: Building.Rotation
  fullName: GTA.Building.Rotation
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Building.Quaternion*
  commentId: Overload:GTA.Building.Quaternion
  isExternal: true
  href: GTA.Building.html#GTA_Building_Quaternion
  name: Quaternion
  nameWithType: Building.Quaternion
  fullName: GTA.Building.Quaternion
- uid: GTA.Math.Quaternion
  commentId: T:GTA.Math.Quaternion
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: GTA.Math.Quaternion
- uid: GTA.Building.Position*
  commentId: Overload:GTA.Building.Position
  isExternal: true
  href: GTA.Building.html#GTA_Building_Position
  name: Position
  nameWithType: Building.Position
  fullName: GTA.Building.Position
