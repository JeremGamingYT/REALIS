### YamlMime:ManagedReference
items:
- uid: GTA.PathNode
  commentId: T:GTA.PathNode
  id: PathNode
  parent: GTA
  children:
  - GTA.PathNode.AreaId
  - GTA.PathNode.Equals(System.Object)
  - GTA.PathNode.GetAllPathNodeLinks
  - GTA.PathNode.GetHashCode
  - GTA.PathNode.GetVehicleNodePropertyFlags
  - GTA.PathNode.Handle
  - GTA.PathNode.IsGpsAllowed
  - GTA.PathNode.IsLoaded
  - GTA.PathNode.IsSwitchedOff
  - GTA.PathNode.MemoryAddress
  - GTA.PathNode.NativeValue
  - GTA.PathNode.NodeId
  - GTA.PathNode.Position
  - GTA.PathNode.VehicleDensity
  - GTA.PathNode.op_Equality(GTA.PathNode,GTA.PathNode)
  - GTA.PathNode.op_Implicit(GTA.PathNode)~GTA.Native.InputArgument
  - GTA.PathNode.op_Inequality(GTA.PathNode,GTA.PathNode)
  langs:
  - csharp
  - vb
  name: PathNode
  nameWithType: PathNode
  fullName: GTA.PathNode
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class PathNode : INativeValue'
    content.vb: Public NotInheritable Class PathNode Implements INativeValue
  inheritance:
  - System.Object
  implements:
  - GTA.Native.INativeValue
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.PathNode.GetVehicleNodePropertyFlags
  commentId: M:GTA.PathNode.GetVehicleNodePropertyFlags
  id: GetVehicleNodePropertyFlags
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: GetVehicleNodePropertyFlags()
  nameWithType: PathNode.GetVehicleNodePropertyFlags()
  fullName: GTA.PathNode.GetVehicleNodePropertyFlags()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public VehiclePathNodePropertyFlags GetVehicleNodePropertyFlags()
    return:
      type: GTA.VehiclePathNodePropertyFlags
    content.vb: Public Function GetVehicleNodePropertyFlags() As VehiclePathNodePropertyFlags
  overload: GTA.PathNode.GetVehicleNodePropertyFlags*
- uid: GTA.PathNode.GetAllPathNodeLinks
  commentId: M:GTA.PathNode.GetAllPathNodeLinks
  id: GetAllPathNodeLinks
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: GetAllPathNodeLinks()
  nameWithType: PathNode.GetAllPathNodeLinks()
  fullName: GTA.PathNode.GetAllPathNodeLinks()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PathNodeLink[] GetAllPathNodeLinks()
    return:
      type: GTA.PathNodeLink[]
    content.vb: Public Function GetAllPathNodeLinks() As PathNodeLink()
  overload: GTA.PathNode.GetAllPathNodeLinks*
- uid: GTA.PathNode.Equals(System.Object)
  commentId: M:GTA.PathNode.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: PathNode.Equals(object)
  fullName: GTA.PathNode.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTA.PathNode.Equals*
  nameWithType.vb: PathNode.Equals(Object)
  fullName.vb: GTA.PathNode.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.PathNode.op_Equality(GTA.PathNode,GTA.PathNode)
  commentId: M:GTA.PathNode.op_Equality(GTA.PathNode,GTA.PathNode)
  id: op_Equality(GTA.PathNode,GTA.PathNode)
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: operator ==(PathNode, PathNode)
  nameWithType: PathNode.operator ==(PathNode, PathNode)
  fullName: GTA.PathNode.operator ==(GTA.PathNode, GTA.PathNode)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(PathNode left, PathNode right)
    parameters:
    - id: left
      type: GTA.PathNode
    - id: right
      type: GTA.PathNode
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As PathNode, right As PathNode) As Boolean
  overload: GTA.PathNode.op_Equality*
  nameWithType.vb: PathNode.=(PathNode, PathNode)
  fullName.vb: GTA.PathNode.=(GTA.PathNode, GTA.PathNode)
  name.vb: =(PathNode, PathNode)
- uid: GTA.PathNode.op_Inequality(GTA.PathNode,GTA.PathNode)
  commentId: M:GTA.PathNode.op_Inequality(GTA.PathNode,GTA.PathNode)
  id: op_Inequality(GTA.PathNode,GTA.PathNode)
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: operator !=(PathNode, PathNode)
  nameWithType: PathNode.operator !=(PathNode, PathNode)
  fullName: GTA.PathNode.operator !=(GTA.PathNode, GTA.PathNode)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(PathNode left, PathNode right)
    parameters:
    - id: left
      type: GTA.PathNode
    - id: right
      type: GTA.PathNode
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As PathNode, right As PathNode) As Boolean
  overload: GTA.PathNode.op_Inequality*
  nameWithType.vb: PathNode.<>(PathNode, PathNode)
  fullName.vb: GTA.PathNode.<>(GTA.PathNode, GTA.PathNode)
  name.vb: <>(PathNode, PathNode)
- uid: GTA.PathNode.op_Implicit(GTA.PathNode)~GTA.Native.InputArgument
  commentId: M:GTA.PathNode.op_Implicit(GTA.PathNode)~GTA.Native.InputArgument
  id: op_Implicit(GTA.PathNode)~GTA.Native.InputArgument
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: implicit operator InputArgument(PathNode)
  nameWithType: PathNode.implicit operator InputArgument(PathNode)
  fullName: GTA.PathNode.implicit operator GTA.Native.InputArgument(GTA.PathNode)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator InputArgument(PathNode value)
    parameters:
    - id: value
      type: GTA.PathNode
    return:
      type: GTA.Native.InputArgument
    content.vb: Public Shared Widening Operator CType(value As PathNode) As InputArgument
  overload: GTA.PathNode.op_Implicit*
  nameWithType.vb: PathNode.CType(PathNode)
  fullName.vb: GTA.PathNode.CType(GTA.PathNode)
  name.vb: CType(PathNode)
- uid: GTA.PathNode.GetHashCode
  commentId: M:GTA.PathNode.GetHashCode
  id: GetHashCode
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PathNode.GetHashCode()
  fullName: GTA.PathNode.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: GTA.PathNode.GetHashCode*
- uid: GTA.PathNode.AreaId
  commentId: P:GTA.PathNode.AreaId
  id: AreaId
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: AreaId
  nameWithType: PathNode.AreaId
  fullName: GTA.PathNode.AreaId
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int AreaId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AreaId As Integer
  overload: GTA.PathNode.AreaId*
- uid: GTA.PathNode.NodeId
  commentId: P:GTA.PathNode.NodeId
  id: NodeId
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: PathNode.NodeId
  fullName: GTA.PathNode.NodeId
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int NodeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NodeId As Integer
  overload: GTA.PathNode.NodeId*
- uid: GTA.PathNode.Handle
  commentId: P:GTA.PathNode.Handle
  id: Handle
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: PathNode.Handle
  fullName: GTA.PathNode.Handle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Handle { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Handle As Integer
  overload: GTA.PathNode.Handle*
- uid: GTA.PathNode.NativeValue
  commentId: P:GTA.PathNode.NativeValue
  id: NativeValue
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: NativeValue
  nameWithType: PathNode.NativeValue
  fullName: GTA.PathNode.NativeValue
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public ulong NativeValue { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property NativeValue As ULong
  overload: GTA.PathNode.NativeValue*
  implements:
  - GTA.Native.INativeValue.NativeValue
- uid: GTA.PathNode.MemoryAddress
  commentId: P:GTA.PathNode.MemoryAddress
  id: MemoryAddress
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: MemoryAddress
  nameWithType: PathNode.MemoryAddress
  fullName: GTA.PathNode.MemoryAddress
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public IntPtr MemoryAddress { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property MemoryAddress As IntPtr
  overload: GTA.PathNode.MemoryAddress*
- uid: GTA.PathNode.IsLoaded
  commentId: P:GTA.PathNode.IsLoaded
  id: IsLoaded
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: IsLoaded
  nameWithType: PathNode.IsLoaded
  fullName: GTA.PathNode.IsLoaded
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsLoaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLoaded As Boolean
  overload: GTA.PathNode.IsLoaded*
- uid: GTA.PathNode.Position
  commentId: P:GTA.PathNode.Position
  id: Position
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: PathNode.Position
  fullName: GTA.PathNode.Position
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: GTA.PathNode.Position*
- uid: GTA.PathNode.IsSwitchedOff
  commentId: P:GTA.PathNode.IsSwitchedOff
  id: IsSwitchedOff
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: IsSwitchedOff
  nameWithType: PathNode.IsSwitchedOff
  fullName: GTA.PathNode.IsSwitchedOff
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSwitchedOff { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSwitchedOff As Boolean
  overload: GTA.PathNode.IsSwitchedOff*
- uid: GTA.PathNode.IsGpsAllowed
  commentId: P:GTA.PathNode.IsGpsAllowed
  id: IsGpsAllowed
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: IsGpsAllowed
  nameWithType: PathNode.IsGpsAllowed
  fullName: GTA.PathNode.IsGpsAllowed
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsGpsAllowed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGpsAllowed As Boolean
  overload: GTA.PathNode.IsGpsAllowed*
- uid: GTA.PathNode.VehicleDensity
  commentId: P:GTA.PathNode.VehicleDensity
  id: VehicleDensity
  parent: GTA.PathNode
  langs:
  - csharp
  - vb
  name: VehicleDensity
  nameWithType: PathNode.VehicleDensity
  fullName: GTA.PathNode.VehicleDensity
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int VehicleDensity { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property VehicleDensity As Integer
  overload: GTA.PathNode.VehicleDensity*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.Native.INativeValue
  commentId: T:GTA.Native.INativeValue
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.INativeValue.html
  name: INativeValue
  nameWithType: INativeValue
  fullName: GTA.Native.INativeValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Native
  commentId: N:GTA.Native
  isExternal: true
  href: GTA.html
  name: GTA.Native
  nameWithType: GTA.Native
  fullName: GTA.Native
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
- uid: GTA.PathNode.GetVehicleNodePropertyFlags*
  commentId: Overload:GTA.PathNode.GetVehicleNodePropertyFlags
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_GetVehicleNodePropertyFlags
  name: GetVehicleNodePropertyFlags
  nameWithType: PathNode.GetVehicleNodePropertyFlags
  fullName: GTA.PathNode.GetVehicleNodePropertyFlags
- uid: GTA.VehiclePathNodePropertyFlags
  commentId: T:GTA.VehiclePathNodePropertyFlags
  parent: GTA
  isExternal: true
  href: GTA.VehiclePathNodePropertyFlags.html
  name: VehiclePathNodePropertyFlags
  nameWithType: VehiclePathNodePropertyFlags
  fullName: GTA.VehiclePathNodePropertyFlags
- uid: GTA.PathNode.GetAllPathNodeLinks*
  commentId: Overload:GTA.PathNode.GetAllPathNodeLinks
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_GetAllPathNodeLinks
  name: GetAllPathNodeLinks
  nameWithType: PathNode.GetAllPathNodeLinks
  fullName: GTA.PathNode.GetAllPathNodeLinks
- uid: GTA.PathNodeLink[]
  isExternal: true
  href: GTA.PathNodeLink.html
  name: PathNodeLink[]
  nameWithType: PathNodeLink[]
  fullName: GTA.PathNodeLink[]
  nameWithType.vb: PathNodeLink()
  fullName.vb: GTA.PathNodeLink()
  name.vb: PathNodeLink()
  spec.csharp:
  - uid: GTA.PathNodeLink
    name: PathNodeLink
    isExternal: true
    href: GTA.PathNodeLink.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: GTA.PathNodeLink
    name: PathNodeLink
    isExternal: true
    href: GTA.PathNodeLink.html
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.PathNode.Equals*
  commentId: Overload:GTA.PathNode.Equals
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_Equals_System_Object_
  name: Equals
  nameWithType: PathNode.Equals
  fullName: GTA.PathNode.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.PathNode.op_Equality*
  commentId: Overload:GTA.PathNode.op_Equality
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_op_Equality_GTA_PathNode_GTA_PathNode_
  name: operator ==
  nameWithType: PathNode.operator ==
  fullName: GTA.PathNode.operator ==
  nameWithType.vb: PathNode.=
  fullName.vb: GTA.PathNode.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.PathNode.op_Equality*
    name: ==
    isExternal: true
    href: GTA.PathNode.html#GTA_PathNode_op_Equality_GTA_PathNode_GTA_PathNode_
- uid: GTA.PathNode
  commentId: T:GTA.PathNode
  parent: GTA
  isExternal: true
  href: GTA.PathNode.html
  name: PathNode
  nameWithType: PathNode
  fullName: GTA.PathNode
- uid: GTA.PathNode.op_Inequality*
  commentId: Overload:GTA.PathNode.op_Inequality
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_op_Inequality_GTA_PathNode_GTA_PathNode_
  name: operator !=
  nameWithType: PathNode.operator !=
  fullName: GTA.PathNode.operator !=
  nameWithType.vb: PathNode.<>
  fullName.vb: GTA.PathNode.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.PathNode.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.PathNode.html#GTA_PathNode_op_Inequality_GTA_PathNode_GTA_PathNode_
- uid: GTA.PathNode.op_Implicit*
  commentId: Overload:GTA.PathNode.op_Implicit
  name: implicit operator
  nameWithType: PathNode.implicit operator
  fullName: GTA.PathNode.implicit operator
  nameWithType.vb: PathNode.CType
  fullName.vb: GTA.PathNode.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: GTA.Native.InputArgument
  commentId: T:GTA.Native.InputArgument
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.InputArgument.html
  name: InputArgument
  nameWithType: InputArgument
  fullName: GTA.Native.InputArgument
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: GTA.PathNode.GetHashCode*
  commentId: Overload:GTA.PathNode.GetHashCode
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_GetHashCode
  name: GetHashCode
  nameWithType: PathNode.GetHashCode
  fullName: GTA.PathNode.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.PathNode.AreaId*
  commentId: Overload:GTA.PathNode.AreaId
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_AreaId
  name: AreaId
  nameWithType: PathNode.AreaId
  fullName: GTA.PathNode.AreaId
- uid: GTA.PathNode.NodeId*
  commentId: Overload:GTA.PathNode.NodeId
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_NodeId
  name: NodeId
  nameWithType: PathNode.NodeId
  fullName: GTA.PathNode.NodeId
- uid: GTA.PathNode.Handle*
  commentId: Overload:GTA.PathNode.Handle
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_Handle
  name: Handle
  nameWithType: PathNode.Handle
  fullName: GTA.PathNode.Handle
- uid: GTA.PathNode.NativeValue*
  commentId: Overload:GTA.PathNode.NativeValue
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_NativeValue
  name: NativeValue
  nameWithType: PathNode.NativeValue
  fullName: GTA.PathNode.NativeValue
- uid: GTA.Native.INativeValue.NativeValue
  commentId: P:GTA.Native.INativeValue.NativeValue
  parent: GTA.Native.INativeValue
  isExternal: true
  href: GTA.Native.INativeValue.html#GTA_Native_INativeValue_NativeValue
  name: NativeValue
  nameWithType: INativeValue.NativeValue
  fullName: GTA.Native.INativeValue.NativeValue
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: GTA.PathNode.MemoryAddress*
  commentId: Overload:GTA.PathNode.MemoryAddress
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_MemoryAddress
  name: MemoryAddress
  nameWithType: PathNode.MemoryAddress
  fullName: GTA.PathNode.MemoryAddress
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: GTA.PathNode.IsLoaded*
  commentId: Overload:GTA.PathNode.IsLoaded
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_IsLoaded
  name: IsLoaded
  nameWithType: PathNode.IsLoaded
  fullName: GTA.PathNode.IsLoaded
- uid: GTA.PathNode.Position*
  commentId: Overload:GTA.PathNode.Position
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_Position
  name: Position
  nameWithType: PathNode.Position
  fullName: GTA.PathNode.Position
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.PathNode.IsSwitchedOff*
  commentId: Overload:GTA.PathNode.IsSwitchedOff
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_IsSwitchedOff
  name: IsSwitchedOff
  nameWithType: PathNode.IsSwitchedOff
  fullName: GTA.PathNode.IsSwitchedOff
- uid: GTA.PathNode.IsGpsAllowed*
  commentId: Overload:GTA.PathNode.IsGpsAllowed
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_IsGpsAllowed
  name: IsGpsAllowed
  nameWithType: PathNode.IsGpsAllowed
  fullName: GTA.PathNode.IsGpsAllowed
- uid: GTA.PathNode.VehicleDensity*
  commentId: Overload:GTA.PathNode.VehicleDensity
  isExternal: true
  href: GTA.PathNode.html#GTA_PathNode_VehicleDensity
  name: VehicleDensity
  nameWithType: PathNode.VehicleDensity
  fullName: GTA.PathNode.VehicleDensity
