### YamlMime:ManagedReference
items:
- uid: GTA.Ped
  commentId: T:GTA.Ped
  id: Ped
  parent: GTA
  children:
  - GTA.Ped.Accuracy
  - GTA.Ped.ApplyDamage(System.Int32)
  - GTA.Ped.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  - GTA.Ped.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Ped.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Ped.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  - GTA.Ped.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Ped.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Ped.Armor
  - GTA.Ped.ArmorFloat
  - GTA.Ped.BlockPermanentEvents
  - GTA.Ped.Bones
  - GTA.Ped.CanBeDraggedOutOfVehicle
  - GTA.Ped.CanBeKnockedOffVehicle
  - GTA.Ped.CanBeShotInVehicle
  - GTA.Ped.CanBeTargetted
  - GTA.Ped.CanFlyThroughWindscreen
  - GTA.Ped.CanPlayGestures
  - GTA.Ped.CanRagdoll
  - GTA.Ped.CanSufferCriticalHits
  - GTA.Ped.CanSwitchWeapons
  - GTA.Ped.CanWearHelmet
  - GTA.Ped.CanWrithe
  - GTA.Ped.CancelRagdoll
  - GTA.Ped.CauseOfDeath
  - GTA.Ped.ClearBloodDamage
  - GTA.Ped.ClearCauseOfDeathRecord
  - GTA.Ped.ClearKillerRecord
  - GTA.Ped.ClearLastWeaponDamage
  - GTA.Ped.ClearRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  - GTA.Ped.ClearTimeOfDeathRecord
  - GTA.Ped.ClearVisibleDamage
  - GTA.Ped.Clone(System.Boolean)
  - GTA.Ped.CloneAlt(System.Boolean,System.Boolean)
  - GTA.Ped.CloneToTarget(GTA.Ped)
  - GTA.Ped.CloneToTargetAlt(GTA.Ped,System.Boolean)
  - GTA.Ped.CombatAbility
  - GTA.Ped.CombatMovement
  - GTA.Ped.CombatRange
  - GTA.Ped.CombatTarget
  - GTA.Ped.CurrentScriptTaskNameHash
  - GTA.Ped.CurrentScriptTaskStatus
  - GTA.Ped.CurrentVehicle
  - GTA.Ped.DecisionMaker
  - GTA.Ped.DiesInstantlyInWater
  - GTA.Ped.DiesOnLowHealth
  - GTA.Ped.DrivingAggressiveness
  - GTA.Ped.DrivingSpeed
  - GTA.Ped.DropsEquippedWeaponOnDeath
  - GTA.Ped.DrownsInSinkingVehicle
  - GTA.Ped.DrownsInWater
  - GTA.Ped.DryOff
  - GTA.Ped.Euphoria
  - GTA.Ped.Exists
  - GTA.Ped.FatalInjuryHealthThreshold
  - GTA.Ped.FireVehicleWeaponAt(GTA.Entity)
  - GTA.Ped.FireVehicleWeaponAt(GTA.Math.Vector3)
  - GTA.Ped.FiringPattern
  - GTA.Ped.ForceMotionStateThisFrame(GTA.PedMotionState,System.Boolean,GTA.ForceAnimAIUpdateState,System.Boolean)
  - GTA.Ped.Gender
  - GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds
  - GTA.Ped.GetAllModels
  - GTA.Ped.GetCombatFloatAttribute(GTA.CombatFloatAttributes)
  - GTA.Ped.GetConfigFlag(GTA.PedConfigFlagToggles)
  - GTA.Ped.GetCurrentScriptTaskNameHashAndStatus(GTA.ScriptTaskNameHash@,GTA.ScriptTaskStatus@)
  - GTA.Ped.GetNavMeshRouteResult
  - GTA.Ped.GetRelationshipWithPed(GTA.Ped)
  - GTA.Ped.GetResetFlag(GTA.PedResetFlagToggles)
  - GTA.Ped.GetScriptTaskStatus(GTA.ScriptTaskNameHash)
  - GTA.Ped.GiveHelmet(System.Boolean,GTA.HelmetPropFlags,System.Int32)
  - GTA.Ped.GroundEntity
  - GTA.Ped.HasBeenDamagedBy(GTA.WeaponHash)
  - GTA.Ped.HasBeenDamagedByAnyMeleeWeapon
  - GTA.Ped.HasBeenDamagedByAnyWeapon
  - GTA.Ped.HasReceivedEvent(GTA.EventType)
  - GTA.Ped.HearingRange
  - GTA.Ped.InjuryHealthThreshold
  - GTA.Ped.IsAiming
  - GTA.Ped.IsAimingFromCover
  - GTA.Ped.IsAmbientSpeechEnabled
  - GTA.Ped.IsAmbientSpeechPlaying
  - GTA.Ped.IsAnySpeechPlaying
  - GTA.Ped.IsBeingJacked
  - GTA.Ped.IsBeingStealthKilled
  - GTA.Ped.IsBeingStunned
  - GTA.Ped.IsClimbing
  - GTA.Ped.IsClimbingLadder
  - GTA.Ped.IsCuffed
  - GTA.Ped.IsDiving
  - GTA.Ped.IsDoingDriveBy
  - GTA.Ped.IsDucking
  - GTA.Ped.IsEnemy
  - GTA.Ped.IsEnteringVehicle
  - GTA.Ped.IsExitingVehicle
  - GTA.Ped.IsFalling
  - GTA.Ped.IsFleeing
  - GTA.Ped.IsGettingUp
  - GTA.Ped.IsGoingIntoCover
  - GTA.Ped.IsHeadtracking(GTA.Entity)
  - GTA.Ped.IsHuman
  - GTA.Ped.IsIdle
  - GTA.Ped.IsInBoat
  - GTA.Ped.IsInCombat
  - GTA.Ped.IsInCombatAgainst(GTA.Ped)
  - GTA.Ped.IsInCover
  - GTA.Ped.IsInCoverFacingLeft
  - GTA.Ped.IsInFlyingVehicle
  - GTA.Ped.IsInGroup
  - GTA.Ped.IsInHeli
  - GTA.Ped.IsInMeleeCombat
  - GTA.Ped.IsInParachuteFreeFall
  - GTA.Ped.IsInPlane
  - GTA.Ped.IsInPoliceVehicle
  - GTA.Ped.IsInStealthMode
  - GTA.Ped.IsInSub
  - GTA.Ped.IsInTaxi
  - GTA.Ped.IsInTrain
  - GTA.Ped.IsInVehicle
  - GTA.Ped.IsInVehicle(GTA.Vehicle)
  - GTA.Ped.IsInjured
  - GTA.Ped.IsJacking
  - GTA.Ped.IsJumping
  - GTA.Ped.IsJumpingOutOfVehicle
  - GTA.Ped.IsOnBike
  - GTA.Ped.IsOnFoot
  - GTA.Ped.IsPainAudioEnabled
  - GTA.Ped.IsPerformingCounterAttack
  - GTA.Ped.IsPerformingMeleeAction
  - GTA.Ped.IsPerformingStealthKill
  - GTA.Ped.IsPlantingBomb
  - GTA.Ped.IsPlayer
  - GTA.Ped.IsPriorityTargetForEnemies
  - GTA.Ped.IsProne
  - GTA.Ped.IsRagdoll
  - GTA.Ped.IsReloading
  - GTA.Ped.IsRespondingToEvent(GTA.EventType)
  - GTA.Ped.IsRunning
  - GTA.Ped.IsRunningRagdollTask
  - GTA.Ped.IsScriptedSpeechPlaying
  - GTA.Ped.IsShooting
  - GTA.Ped.IsSittingInVehicle
  - GTA.Ped.IsSittingInVehicle(GTA.Vehicle)
  - GTA.Ped.IsSprinting
  - GTA.Ped.IsStandingOnVehicle
  - GTA.Ped.IsStandingOnVehicle(GTA.Vehicle)
  - GTA.Ped.IsStopped
  - GTA.Ped.IsSwimming
  - GTA.Ped.IsSwimmingUnderWater
  - GTA.Ped.IsTakingOffHelmet
  - GTA.Ped.IsTryingToEnterALockedVehicle
  - GTA.Ped.IsVaulting
  - GTA.Ped.IsWalking
  - GTA.Ped.IsWearingHelmet
  - GTA.Ped.IsWet
  - GTA.Ped.JackTarget
  - GTA.Ped.Jacker
  - GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  - GTA.Ped.Kill
  - GTA.Ped.Killer
  - GTA.Ped.KnockOffVehicleType
  - GTA.Ped.LastVehicle
  - GTA.Ped.LastWeaponImpactPosition
  - GTA.Ped.LeaveGroup
  - GTA.Ped.LowerWetnessHeight
  - GTA.Ped.LowerWetnessLevel
  - GTA.Ped.MaxDrivingSpeed
  - GTA.Ped.MaxHealth
  - GTA.Ped.MeleeTarget
  - GTA.Ped.Money
  - GTA.Ped.MoveNetworkTaskInterface
  - GTA.Ped.NeverLeavesGroup
  - GTA.Ped.OpenParachute
  - GTA.Ped.ParachuteLandingType
  - GTA.Ped.ParachuteState
  - GTA.Ped.PedConfigFlags
  - GTA.Ped.PedGroup
  - GTA.Ped.PedResetFlags
  - GTA.Ped.PedType
  - GTA.Ped.PlayAmbientSpeech(System.String,GTA.SpeechModifier)
  - GTA.Ped.PlayAmbientSpeech(System.String,System.String,GTA.SpeechModifier)
  - GTA.Ped.Ragdoll(System.Int32,GTA.RagdollType)
  - GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
  - GTA.Ped.RelationshipGroup
  - GTA.Ped.RemoveHelmet(System.Boolean)
  - GTA.Ped.ResetConfigFlag(System.Int32)
  - GTA.Ped.ResetMovementClipSet(System.Nullable{GTA.AnimationBlendDuration})
  - GTA.Ped.ResetStrafeClipSet
  - GTA.Ped.ResetWeaponMovementClipSet
  - GTA.Ped.Resurrect
  - GTA.Ped.SeatIndex
  - GTA.Ped.SeeingRange
  - GTA.Ped.SetAsCop(System.Boolean)
  - GTA.Ped.SetCombatAttribute(GTA.CombatAttributes,System.Boolean)
  - GTA.Ped.SetCombatFloatAttribute(GTA.CombatFloatAttributes,System.Single)
  - GTA.Ped.SetConfigFlag(GTA.PedConfigFlagToggles,System.Boolean)
  - GTA.Ped.SetFleeAttributes(GTA.FleeAttributes,System.Boolean)
  - GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Entity,System.Int32,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  - GTA.Ped.SetIKTarget(GTA.IKPart,GTA.EntityBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  - GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  - GTA.Ped.SetIKTarget(GTA.IKPart,GTA.PedBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  - GTA.Ped.SetIntoVehicle(GTA.Vehicle,GTA.VehicleSeat)
  - GTA.Ped.SetIsPersistentNoClearTask(System.Boolean)
  - GTA.Ped.SetMovementClipSet(GTA.ClipSet,System.Nullable{GTA.AnimationBlendDuration})
  - GTA.Ped.SetRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  - GTA.Ped.SetResetFlag(GTA.PedResetFlagToggles,System.Boolean)
  - GTA.Ped.SetStrafeClipSet(GTA.ClipSet)
  - GTA.Ped.SetToRagdoll(System.Int32,System.Int32,GTA.RagdollType,System.Boolean)
  - GTA.Ped.SetToRagdollWithFall(System.Int32,System.Int32,GTA.RagdollFallType,GTA.Math.Vector3,System.Single)
  - GTA.Ped.SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags,System.Boolean)
  - GTA.Ped.SetVehicleChaseIdealPursuitDistance(System.Single)
  - GTA.Ped.SetWeaponMovementClipSet(GTA.ClipSet)
  - GTA.Ped.SetWetnessEnabledThisFrame
  - GTA.Ped.ShootRate
  - GTA.Ped.StaysInVehicleWhenJacked
  - GTA.Ped.StopCurrentPlayingAmbientSpeech
  - GTA.Ped.StopCurrentPlayingSpeech
  - GTA.Ped.Style
  - GTA.Ped.Sweat
  - GTA.Ped.TargetLossResponse
  - GTA.Ped.Task
  - GTA.Ped.TaskSequenceProgress
  - GTA.Ped.TimeOfDeath
  - GTA.Ped.TrySetVehicleWeapon(GTA.VehicleWeaponHash)
  - GTA.Ped.UpperWetnessHeight
  - GTA.Ped.UpperWetnessLevel
  - GTA.Ped.VehicleDrivingFlags
  - GTA.Ped.VehicleTryingToEnter
  - GTA.Ped.VehicleWeapon
  - GTA.Ped.VisualFieldCenterAngle
  - GTA.Ped.VisualFieldMaxAngle
  - GTA.Ped.VisualFieldMaxElevationAngle
  - GTA.Ped.VisualFieldMinAngle
  - GTA.Ped.VisualFieldMinElevationAngle
  - GTA.Ped.VisualFieldPeripheralRange
  - GTA.Ped.Voice
  - GTA.Ped.WasKilledByStealth
  - GTA.Ped.WasKilledByTakedown
  - GTA.Ped.Weapons
  - GTA.Ped.Wet(System.Single)
  - GTA.Ped.Wet(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Ped
  nameWithType: Ped
  fullName: GTA.Ped
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class Ped : Entity, INativeValue, IDeletable, IExistable, ISpatial'
    content.vb: Public NotInheritable Class Ped Inherits Entity Implements INativeValue, IDeletable, IExistable, ISpatial
  inheritance:
  - System.Object
  - GTA.PoolObject
  - GTA.Entity
  implements:
  - GTA.Native.INativeValue
  - GTA.IDeletable
  - GTA.IExistable
  - GTA.ISpatial
  inheritedMembers:
  - GTA.Entity.FromHandle(System.Int32)
  - GTA.Entity.SetOpacity(System.Int32,System.Boolean)
  - GTA.Entity.ResetOpacity
  - GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
  - GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
  - GTA.Entity.GetSpeedVector(System.Boolean)
  - GTA.Entity.HasBeenDamagedBy(GTA.Entity)
  - GTA.Entity.DetachFragmentPart(System.Int32)
  - GTA.Entity.SetShouldFreezeWaitingOnCollision(System.Boolean)
  - GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
  - GTA.Entity.ClearOnlyDamagedByRelGroup
  - GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
  - GTA.Entity.ClearNotDamagedByRelGroup
  - GTA.Entity.IsUprightWithin(System.Single)
  - GTA.Entity.RemoveParticleEffects
  - GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity@)
  - GTA.Entity.SetNoCollision(GTA.Entity,System.Boolean)
  - GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3)
  - GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  - GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  - GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  - GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,GTA.PedTransportMode)
  - GTA.Entity.IsInRange(GTA.Math.Vector3,System.Single)
  - GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3)
  - GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  - GTA.Entity.IsTouching(GTA.Model)
  - GTA.Entity.IsTouching(GTA.Entity)
  - GTA.Entity.AddBlip
  - GTA.Entity.Detach
  - GTA.Entity.Detach(System.Boolean,System.Boolean)
  - GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3)
  - GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3)
  - GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  - GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  - GTA.Entity.AttachToMatrixPhysically(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  - GTA.Entity.AttachToBonePhysically(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  - GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  - GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  - GTA.Entity.IsAttached
  - GTA.Entity.IsAttachedTo(GTA.Entity)
  - GTA.Entity.IsAttachedToAnyProp
  - GTA.Entity.IsAttachedToAnyPed
  - GTA.Entity.IsAttachedToAnyVehicle
  - GTA.Entity.ProcessEntityAttachments
  - GTA.Entity.ActivatePhysics
  - GTA.Entity.DeactivatePhysics
  - GTA.Entity.SetToRespondToPhysicsSystem
  - GTA.Entity.SetDamping(GTA.PhysicsDampingType,System.Single)
  - GTA.Entity.SetCenterOfGravityAtBoundCenter
  - GTA.Entity.ApplyForce(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  - GTA.Entity.ApplyForceRelative(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  - GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  - GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  - GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  - GTA.Entity.PlayAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Boolean,System.Boolean,System.Boolean,System.Single,GTA.AnimationFlags)
  - GTA.Entity.StopAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta)
  - GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  - GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  - GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
  - GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset,System.Single)
  - GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset,System.Single)
  - GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
  - GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
  - GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset,System.String,System.Single@,System.Single@)
  - GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  - GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta,System.Boolean)
  - GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  - GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.AnimationBlendDelta)
  - GTA.Entity.HasClearLineOfSightTo(GTA.Entity,GTA.IntersectFlags)
  - GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity,GTA.IntersectFlags)
  - GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
  - GTA.Entity.MarkAsMissionEntity(System.Boolean)
  - GTA.Entity.MarkAsNoLongerNeeded
  - GTA.Entity.Delete
  - GTA.Entity.Equals(System.Object)
  - GTA.Entity.GetHashCode
  - GTA.Entity.MemoryAddress
  - GTA.Entity.EntityType
  - GTA.Entity.PopulationType
  - GTA.Entity.IsDead
  - GTA.Entity.IsAlive
  - GTA.Entity.HasDrawable
  - GTA.Entity.HasSkeleton
  - GTA.Entity.HasAnimationDirector
  - GTA.Entity.IsOwnedByShvdnScript
  - GTA.Entity.IsOwnedByAnyScript
  - GTA.Entity.OwnerScriptName
  - GTA.Entity.Model
  - GTA.Entity.Opacity
  - GTA.Entity.LodDistance
  - GTA.Entity.IsPersistent
  - GTA.Entity.IsPositionFrozen
  - GTA.Entity.Health
  - GTA.Entity.HealthFloat
  - GTA.Entity.MaxHealthFloat
  - GTA.Entity.Matrix
  - GTA.Entity.Position
  - GTA.Entity.PositionNoOffset
  - GTA.Entity.Rotation
  - GTA.Entity.Heading
  - GTA.Entity.SubmersionLevel
  - GTA.Entity.HeightAboveGround
  - GTA.Entity.Quaternion
  - GTA.Entity.UpVector
  - GTA.Entity.RightVector
  - GTA.Entity.ForwardVector
  - GTA.Entity.LeftPosition
  - GTA.Entity.RightPosition
  - GTA.Entity.RearPosition
  - GTA.Entity.FrontPosition
  - GTA.Entity.AbovePosition
  - GTA.Entity.BelowPosition
  - GTA.Entity.Speed
  - GTA.Entity.MaxSpeed
  - GTA.Entity.Velocity
  - GTA.Entity.RotationVelocity
  - GTA.Entity.WorldRotationVelocity
  - GTA.Entity.LocalRotationVelocity
  - GTA.Entity.DamageRecords
  - GTA.Entity.FragmentGroupCount
  - GTA.Entity.IsFragmentObject
  - GTA.Entity.IsInWater
  - GTA.Entity.IsInWaterStrict
  - GTA.Entity.WasInWater
  - GTA.Entity.DontLoadCollision
  - GTA.Entity.AllowsFreezeWaitingOnCollision
  - GTA.Entity.IsFireProof
  - GTA.Entity.IsMeleeProof
  - GTA.Entity.IsBulletProof
  - GTA.Entity.IsExplosionProof
  - GTA.Entity.IsCollisionProof
  - GTA.Entity.IsSteamProof
  - GTA.Entity.IsSmokeProof
  - GTA.Entity.IsInvincible
  - GTA.Entity.BlocksAnyDamageButHasReactions
  - GTA.Entity.IsOnlyDamagedByPlayer
  - GTA.Entity.CanOnlyBeDamagedByRelGroup
  - GTA.Entity.BlocksDamageByRelGroup
  - GTA.Entity.ShouldRenderScorched
  - GTA.Entity.CanBeAutoVaulted
  - GTA.Entity.CanBeClimbed
  - GTA.Entity.IsPickupByCargobobDisabled
  - GTA.Entity.KeepsDamageFlagsOnCleanupMissionState
  - GTA.Entity.SpecificRelGroupForInflictorChecks
  - GTA.Entity.IsVisible
  - GTA.Entity.IsOccluded
  - GTA.Entity.IsRendered
  - GTA.Entity.IsOnFire
  - GTA.Entity.IsOnScreen
  - GTA.Entity.IsUpright
  - GTA.Entity.IsUpsideDown
  - GTA.Entity.IsInAir
  - GTA.Entity.UprightValue
  - GTA.Entity.HasGravity
  - GTA.Entity.HasCollided
  - GTA.Entity.HasCollidedWithBuildingOrAnimatedBuilding
  - GTA.Entity.MaterialCollidingWith
  - GTA.Entity.VehicleCollidingWith
  - GTA.Entity.PedCollidingWith
  - GTA.Entity.PropCollidingWith
  - GTA.Entity.IsCollisionEnabled
  - GTA.Entity.IsRecordingCollisions
  - GTA.Entity.AttachedBlip
  - GTA.Entity.AttachedBlips
  - GTA.Entity.AttachedEntity
  - GTA.Entity.HasPhysics
  - GTA.Entity.IsStatic
  - GTA.Entity.CenterOfGravityOffset
  - GTA.Entity.CurrentInteriorProxy
  - GTA.Entity.CurrentInteriorRoomKey
  - GTA.PoolObject.Handle
  - GTA.PoolObject.NativeValue
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Ped.SetAsCop(System.Boolean)
  commentId: M:GTA.Ped.SetAsCop(System.Boolean)
  id: SetAsCop(System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetAsCop(bool)
  nameWithType: Ped.SetAsCop(bool)
  fullName: GTA.Ped.SetAsCop(bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetAsCop(bool setRelationshipGroup = true)
    parameters:
    - id: setRelationshipGroup
      type: System.Boolean
    content.vb: Public Sub SetAsCop(setRelationshipGroup As Boolean = True)
  overload: GTA.Ped.SetAsCop*
  nameWithType.vb: Ped.SetAsCop(Boolean)
  fullName.vb: GTA.Ped.SetAsCop(Boolean)
  name.vb: SetAsCop(Boolean)
- uid: GTA.Ped.Clone(System.Boolean)
  commentId: M:GTA.Ped.Clone(System.Boolean)
  id: Clone(System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Clone(bool)
  nameWithType: Ped.Clone(bool)
  fullName: GTA.Ped.Clone(bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped Clone(bool linkBlends)
    parameters:
    - id: linkBlends
      type: System.Boolean
    return:
      type: GTA.Ped
    content.vb: Public Function Clone(linkBlends As Boolean) As Ped
  overload: GTA.Ped.Clone*
  nameWithType.vb: Ped.Clone(Boolean)
  fullName.vb: GTA.Ped.Clone(Boolean)
  name.vb: Clone(Boolean)
- uid: GTA.Ped.CloneAlt(System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.CloneAlt(System.Boolean,System.Boolean)
  id: CloneAlt(System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CloneAlt(bool, bool)
  nameWithType: Ped.CloneAlt(bool, bool)
  fullName: GTA.Ped.CloneAlt(bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped CloneAlt(bool linkBlends = true, bool cloneCompressedDamage = true)
    parameters:
    - id: linkBlends
      type: System.Boolean
    - id: cloneCompressedDamage
      type: System.Boolean
    return:
      type: GTA.Ped
    content.vb: Public Function CloneAlt(linkBlends As Boolean = True, cloneCompressedDamage As Boolean = True) As Ped
  overload: GTA.Ped.CloneAlt*
  nameWithType.vb: Ped.CloneAlt(Boolean, Boolean)
  fullName.vb: GTA.Ped.CloneAlt(Boolean, Boolean)
  name.vb: CloneAlt(Boolean, Boolean)
- uid: GTA.Ped.CloneToTarget(GTA.Ped)
  commentId: M:GTA.Ped.CloneToTarget(GTA.Ped)
  id: CloneToTarget(GTA.Ped)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CloneToTarget(Ped)
  nameWithType: Ped.CloneToTarget(Ped)
  fullName: GTA.Ped.CloneToTarget(GTA.Ped)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void CloneToTarget(Ped target)
    parameters:
    - id: target
      type: GTA.Ped
    content.vb: Public Sub CloneToTarget(target As Ped)
  overload: GTA.Ped.CloneToTarget*
- uid: GTA.Ped.CloneToTargetAlt(GTA.Ped,System.Boolean)
  commentId: M:GTA.Ped.CloneToTargetAlt(GTA.Ped,System.Boolean)
  id: CloneToTargetAlt(GTA.Ped,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CloneToTargetAlt(Ped, bool)
  nameWithType: Ped.CloneToTargetAlt(Ped, bool)
  fullName: GTA.Ped.CloneToTargetAlt(GTA.Ped, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void CloneToTargetAlt(Ped target, bool cloneCompressedDamage = true)
    parameters:
    - id: target
      type: GTA.Ped
    - id: cloneCompressedDamage
      type: System.Boolean
    content.vb: Public Sub CloneToTargetAlt(target As Ped, cloneCompressedDamage As Boolean = True)
  overload: GTA.Ped.CloneToTargetAlt*
  nameWithType.vb: Ped.CloneToTargetAlt(Ped, Boolean)
  fullName.vb: GTA.Ped.CloneToTargetAlt(GTA.Ped, Boolean)
  name.vb: CloneToTargetAlt(Ped, Boolean)
- uid: GTA.Ped.Kill
  commentId: M:GTA.Ped.Kill
  id: Kill
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Kill()
  nameWithType: Ped.Kill()
  fullName: GTA.Ped.Kill()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Kill()
    content.vb: Public Sub Kill()
  overload: GTA.Ped.Kill*
- uid: GTA.Ped.Resurrect
  commentId: M:GTA.Ped.Resurrect
  id: Resurrect
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Resurrect()
  nameWithType: Ped.Resurrect()
  fullName: GTA.Ped.Resurrect()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Resurrect()
    content.vb: Public Sub Resurrect()
  overload: GTA.Ped.Resurrect*
- uid: GTA.Ped.Exists
  commentId: M:GTA.Ped.Exists
  id: Exists
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: Ped.Exists()
  fullName: GTA.Ped.Exists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool Exists()
    return:
      type: System.Boolean
    content.vb: Public Function Exists() As Boolean
  overload: GTA.Ped.Exists*
- uid: GTA.Ped.ClearBloodDamage
  commentId: M:GTA.Ped.ClearBloodDamage
  id: ClearBloodDamage
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearBloodDamage()
  nameWithType: Ped.ClearBloodDamage()
  fullName: GTA.Ped.ClearBloodDamage()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearBloodDamage()
    content.vb: Public Sub ClearBloodDamage()
  overload: GTA.Ped.ClearBloodDamage*
- uid: GTA.Ped.ClearVisibleDamage
  commentId: M:GTA.Ped.ClearVisibleDamage
  id: ClearVisibleDamage
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearVisibleDamage()
  nameWithType: Ped.ClearVisibleDamage()
  fullName: GTA.Ped.ClearVisibleDamage()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearVisibleDamage()
    content.vb: Public Sub ClearVisibleDamage()
  overload: GTA.Ped.ClearVisibleDamage*
- uid: GTA.Ped.GiveHelmet(System.Boolean,GTA.HelmetPropFlags,System.Int32)
  commentId: M:GTA.Ped.GiveHelmet(System.Boolean,GTA.HelmetPropFlags,System.Int32)
  id: GiveHelmet(System.Boolean,GTA.HelmetPropFlags,System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GiveHelmet(bool, HelmetPropFlags, int)
  nameWithType: Ped.GiveHelmet(bool, HelmetPropFlags, int)
  fullName: GTA.Ped.GiveHelmet(bool, GTA.HelmetPropFlags, int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void GiveHelmet(bool dontTakeOffHelmet = true, HelmetPropFlags helmetPropFlags = HelmetPropFlags.DefaultHelmet, int overwriteHelmetTextureId = -1)
    parameters:
    - id: dontTakeOffHelmet
      type: System.Boolean
    - id: helmetPropFlags
      type: GTA.HelmetPropFlags
    - id: overwriteHelmetTextureId
      type: System.Int32
    content.vb: Public Sub GiveHelmet(dontTakeOffHelmet As Boolean = True, helmetPropFlags As HelmetPropFlags = HelmetPropFlags.DefaultHelmet, overwriteHelmetTextureId As Integer = -1)
  overload: GTA.Ped.GiveHelmet*
  nameWithType.vb: Ped.GiveHelmet(Boolean, HelmetPropFlags, Integer)
  fullName.vb: GTA.Ped.GiveHelmet(Boolean, GTA.HelmetPropFlags, Integer)
  name.vb: GiveHelmet(Boolean, HelmetPropFlags, Integer)
- uid: GTA.Ped.RemoveHelmet(System.Boolean)
  commentId: M:GTA.Ped.RemoveHelmet(System.Boolean)
  id: RemoveHelmet(System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: RemoveHelmet(bool)
  nameWithType: Ped.RemoveHelmet(bool)
  fullName: GTA.Ped.RemoveHelmet(bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void RemoveHelmet(bool instantly)
    parameters:
    - id: instantly
      type: System.Boolean
    content.vb: Public Sub RemoveHelmet(instantly As Boolean)
  overload: GTA.Ped.RemoveHelmet*
  nameWithType.vb: Ped.RemoveHelmet(Boolean)
  fullName.vb: GTA.Ped.RemoveHelmet(Boolean)
  name.vb: RemoveHelmet(Boolean)
- uid: GTA.Ped.Wet(System.Single)
  commentId: M:GTA.Ped.Wet(System.Single)
  id: Wet(System.Single)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Wet(float)
  nameWithType: Ped.Wet(float)
  fullName: GTA.Ped.Wet(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Wet(float height)
    parameters:
    - id: height
      type: System.Single
    content.vb: Public Sub Wet(height As Single)
  overload: GTA.Ped.Wet*
  nameWithType.vb: Ped.Wet(Single)
  fullName.vb: GTA.Ped.Wet(Single)
  name.vb: Wet(Single)
- uid: GTA.Ped.Wet(System.Single,System.Single)
  commentId: M:GTA.Ped.Wet(System.Single,System.Single)
  id: Wet(System.Single,System.Single)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Wet(float, float)
  nameWithType: Ped.Wet(float, float)
  fullName: GTA.Ped.Wet(float, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Wet(float height, float wetLevel)
    parameters:
    - id: height
      type: System.Single
    - id: wetLevel
      type: System.Single
    content.vb: Public Sub Wet(height As Single, wetLevel As Single)
  overload: GTA.Ped.Wet*
  nameWithType.vb: Ped.Wet(Single, Single)
  fullName.vb: GTA.Ped.Wet(Single, Single)
  name.vb: Wet(Single, Single)
- uid: GTA.Ped.DryOff
  commentId: M:GTA.Ped.DryOff
  id: DryOff
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DryOff()
  nameWithType: Ped.DryOff()
  fullName: GTA.Ped.DryOff()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void DryOff()
    content.vb: Public Sub DryOff()
  overload: GTA.Ped.DryOff*
- uid: GTA.Ped.SetWetnessEnabledThisFrame
  commentId: M:GTA.Ped.SetWetnessEnabledThisFrame
  id: SetWetnessEnabledThisFrame
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetWetnessEnabledThisFrame()
  nameWithType: Ped.SetWetnessEnabledThisFrame()
  fullName: GTA.Ped.SetWetnessEnabledThisFrame()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetWetnessEnabledThisFrame()
    content.vb: Public Sub SetWetnessEnabledThisFrame()
  overload: GTA.Ped.SetWetnessEnabledThisFrame*
- uid: GTA.Ped.GetConfigFlag(GTA.PedConfigFlagToggles)
  commentId: M:GTA.Ped.GetConfigFlag(GTA.PedConfigFlagToggles)
  id: GetConfigFlag(GTA.PedConfigFlagToggles)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetConfigFlag(PedConfigFlagToggles)
  nameWithType: Ped.GetConfigFlag(PedConfigFlagToggles)
  fullName: GTA.Ped.GetConfigFlag(GTA.PedConfigFlagToggles)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool GetConfigFlag(PedConfigFlagToggles configFlagToggle)
    parameters:
    - id: configFlagToggle
      type: GTA.PedConfigFlagToggles
    return:
      type: System.Boolean
    content.vb: Public Function GetConfigFlag(configFlagToggle As PedConfigFlagToggles) As Boolean
  overload: GTA.Ped.GetConfigFlag*
- uid: GTA.Ped.SetConfigFlag(GTA.PedConfigFlagToggles,System.Boolean)
  commentId: M:GTA.Ped.SetConfigFlag(GTA.PedConfigFlagToggles,System.Boolean)
  id: SetConfigFlag(GTA.PedConfigFlagToggles,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetConfigFlag(PedConfigFlagToggles, bool)
  nameWithType: Ped.SetConfigFlag(PedConfigFlagToggles, bool)
  fullName: GTA.Ped.SetConfigFlag(GTA.PedConfigFlagToggles, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetConfigFlag(PedConfigFlagToggles configFlagToggle, bool value)
    parameters:
    - id: configFlagToggle
      type: GTA.PedConfigFlagToggles
    - id: value
      type: System.Boolean
    content.vb: Public Sub SetConfigFlag(configFlagToggle As PedConfigFlagToggles, value As Boolean)
  overload: GTA.Ped.SetConfigFlag*
  nameWithType.vb: Ped.SetConfigFlag(PedConfigFlagToggles, Boolean)
  fullName.vb: GTA.Ped.SetConfigFlag(GTA.PedConfigFlagToggles, Boolean)
  name.vb: SetConfigFlag(PedConfigFlagToggles, Boolean)
- uid: GTA.Ped.GetResetFlag(GTA.PedResetFlagToggles)
  commentId: M:GTA.Ped.GetResetFlag(GTA.PedResetFlagToggles)
  id: GetResetFlag(GTA.PedResetFlagToggles)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetResetFlag(PedResetFlagToggles)
  nameWithType: Ped.GetResetFlag(PedResetFlagToggles)
  fullName: GTA.Ped.GetResetFlag(GTA.PedResetFlagToggles)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool GetResetFlag(PedResetFlagToggles configFlag)
    parameters:
    - id: configFlag
      type: GTA.PedResetFlagToggles
    return:
      type: System.Boolean
    content.vb: Public Function GetResetFlag(configFlag As PedResetFlagToggles) As Boolean
  overload: GTA.Ped.GetResetFlag*
- uid: GTA.Ped.SetResetFlag(GTA.PedResetFlagToggles,System.Boolean)
  commentId: M:GTA.Ped.SetResetFlag(GTA.PedResetFlagToggles,System.Boolean)
  id: SetResetFlag(GTA.PedResetFlagToggles,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetResetFlag(PedResetFlagToggles, bool)
  nameWithType: Ped.SetResetFlag(PedResetFlagToggles, bool)
  fullName: GTA.Ped.SetResetFlag(GTA.PedResetFlagToggles, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetResetFlag(PedResetFlagToggles configFlag, bool value)
    parameters:
    - id: configFlag
      type: GTA.PedResetFlagToggles
    - id: value
      type: System.Boolean
    content.vb: Public Sub SetResetFlag(configFlag As PedResetFlagToggles, value As Boolean)
  overload: GTA.Ped.SetResetFlag*
  nameWithType.vb: Ped.SetResetFlag(PedResetFlagToggles, Boolean)
  fullName.vb: GTA.Ped.SetResetFlag(GTA.PedResetFlagToggles, Boolean)
  name.vb: SetResetFlag(PedResetFlagToggles, Boolean)
- uid: GTA.Ped.ResetConfigFlag(System.Int32)
  commentId: M:GTA.Ped.ResetConfigFlag(System.Int32)
  id: ResetConfigFlag(System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ResetConfigFlag(int)
  nameWithType: Ped.ResetConfigFlag(int)
  fullName: GTA.Ped.ResetConfigFlag(int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: >-
      [Obsolete("Ped.ResetConfigFlag is obsolete since SET_PED_RESET_FLAG uses different flag IDs from the IDs GET_PED_CONFIG_FLAG and SET_PED_CONFIG_FLAG use and the said overload always set the flag (2nd argument of SET_PED_RESET_FLAG) to true. Use Ped.SetResetFlag or Ped.GetResetFlag instead", true)]

      public void ResetConfigFlag(int flagID)
    parameters:
    - id: flagID
      type: System.Int32
    content.vb: >-
      <Obsolete("Ped.ResetConfigFlag is obsolete since SET_PED_RESET_FLAG uses different flag IDs from the IDs GET_PED_CONFIG_FLAG and SET_PED_CONFIG_FLAG use and the said overload always set the flag (2nd argument of SET_PED_RESET_FLAG) to true. Use Ped.SetResetFlag or Ped.GetResetFlag instead", True)>

      Public Sub ResetConfigFlag(flagID As Integer)
  overload: GTA.Ped.ResetConfigFlag*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Ped.ResetConfigFlag is obsolete since SET_PED_RESET_FLAG uses different flag IDs from the IDs GET_PED_CONFIG_FLAG and SET_PED_CONFIG_FLAG use and the said overload always set the flag (2nd argument of SET_PED_RESET_FLAG) to true. Use Ped.SetResetFlag or Ped.GetResetFlag instead
    - type: System.Boolean
      value: true
  nameWithType.vb: Ped.ResetConfigFlag(Integer)
  fullName.vb: GTA.Ped.ResetConfigFlag(Integer)
  name.vb: ResetConfigFlag(Integer)
- uid: GTA.Ped.SetIsPersistentNoClearTask(System.Boolean)
  commentId: M:GTA.Ped.SetIsPersistentNoClearTask(System.Boolean)
  id: SetIsPersistentNoClearTask(System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIsPersistentNoClearTask(bool)
  nameWithType: Ped.SetIsPersistentNoClearTask(bool)
  fullName: GTA.Ped.SetIsPersistentNoClearTask(bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIsPersistentNoClearTask(bool value)
    parameters:
    - id: value
      type: System.Boolean
    content.vb: Public Sub SetIsPersistentNoClearTask(value As Boolean)
  overload: GTA.Ped.SetIsPersistentNoClearTask*
  nameWithType.vb: Ped.SetIsPersistentNoClearTask(Boolean)
  fullName.vb: GTA.Ped.SetIsPersistentNoClearTask(Boolean)
  name.vb: SetIsPersistentNoClearTask(Boolean)
- uid: GTA.Ped.IsHeadtracking(GTA.Entity)
  commentId: M:GTA.Ped.IsHeadtracking(GTA.Entity)
  id: IsHeadtracking(GTA.Entity)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsHeadtracking(Entity)
  nameWithType: Ped.IsHeadtracking(Entity)
  fullName: GTA.Ped.IsHeadtracking(GTA.Entity)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsHeadtracking(Entity entity)
    parameters:
    - id: entity
      type: GTA.Entity
    return:
      type: System.Boolean
    content.vb: Public Function IsHeadtracking(entity As Entity) As Boolean
  overload: GTA.Ped.IsHeadtracking*
- uid: GTA.Ped.GetScriptTaskStatus(GTA.ScriptTaskNameHash)
  commentId: M:GTA.Ped.GetScriptTaskStatus(GTA.ScriptTaskNameHash)
  id: GetScriptTaskStatus(GTA.ScriptTaskNameHash)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetScriptTaskStatus(ScriptTaskNameHash)
  nameWithType: Ped.GetScriptTaskStatus(ScriptTaskNameHash)
  fullName: GTA.Ped.GetScriptTaskStatus(GTA.ScriptTaskNameHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public ScriptTaskStatus GetScriptTaskStatus(ScriptTaskNameHash taskNameHash)
    parameters:
    - id: taskNameHash
      type: GTA.ScriptTaskNameHash
    return:
      type: GTA.ScriptTaskStatus
    content.vb: Public Function GetScriptTaskStatus(taskNameHash As ScriptTaskNameHash) As ScriptTaskStatus
  overload: GTA.Ped.GetScriptTaskStatus*
- uid: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus(GTA.ScriptTaskNameHash@,GTA.ScriptTaskStatus@)
  commentId: M:GTA.Ped.GetCurrentScriptTaskNameHashAndStatus(GTA.ScriptTaskNameHash@,GTA.ScriptTaskStatus@)
  id: GetCurrentScriptTaskNameHashAndStatus(GTA.ScriptTaskNameHash@,GTA.ScriptTaskStatus@)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetCurrentScriptTaskNameHashAndStatus(out ScriptTaskNameHash, out ScriptTaskStatus)
  nameWithType: Ped.GetCurrentScriptTaskNameHashAndStatus(out ScriptTaskNameHash, out ScriptTaskStatus)
  fullName: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus(out GTA.ScriptTaskNameHash, out GTA.ScriptTaskStatus)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void GetCurrentScriptTaskNameHashAndStatus(out ScriptTaskNameHash nameHash, out ScriptTaskStatus status)
    parameters:
    - id: nameHash
      type: GTA.ScriptTaskNameHash
    - id: status
      type: GTA.ScriptTaskStatus
    content.vb: Public Sub GetCurrentScriptTaskNameHashAndStatus(nameHash As ScriptTaskNameHash, status As ScriptTaskStatus)
  overload: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus*
  nameWithType.vb: Ped.GetCurrentScriptTaskNameHashAndStatus(ScriptTaskNameHash, ScriptTaskStatus)
  fullName.vb: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus(GTA.ScriptTaskNameHash, GTA.ScriptTaskStatus)
  name.vb: GetCurrentScriptTaskNameHashAndStatus(ScriptTaskNameHash, ScriptTaskStatus)
- uid: GTA.Ped.GetNavMeshRouteResult
  commentId: M:GTA.Ped.GetNavMeshRouteResult
  id: GetNavMeshRouteResult
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetNavMeshRouteResult()
  nameWithType: Ped.GetNavMeshRouteResult()
  fullName: GTA.Ped.GetNavMeshRouteResult()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public NavMeshRouteResult GetNavMeshRouteResult()
    return:
      type: GTA.NavMeshRouteResult
    content.vb: Public Function GetNavMeshRouteResult() As NavMeshRouteResult
  overload: GTA.Ped.GetNavMeshRouteResult*
- uid: GTA.Ped.SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags,System.Boolean)
  commentId: M:GTA.Ped.SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags,System.Boolean)
  id: SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetVehicleChaseBehaviorFlags(VehicleChaseBehaviorFlags, bool)
  nameWithType: Ped.SetVehicleChaseBehaviorFlags(VehicleChaseBehaviorFlags, bool)
  fullName: GTA.Ped.SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetVehicleChaseBehaviorFlags(VehicleChaseBehaviorFlags flags, bool value)
    parameters:
    - id: flags
      type: GTA.VehicleChaseBehaviorFlags
    - id: value
      type: System.Boolean
    content.vb: Public Sub SetVehicleChaseBehaviorFlags(flags As VehicleChaseBehaviorFlags, value As Boolean)
  overload: GTA.Ped.SetVehicleChaseBehaviorFlags*
  nameWithType.vb: Ped.SetVehicleChaseBehaviorFlags(VehicleChaseBehaviorFlags, Boolean)
  fullName.vb: GTA.Ped.SetVehicleChaseBehaviorFlags(GTA.VehicleChaseBehaviorFlags, Boolean)
  name.vb: SetVehicleChaseBehaviorFlags(VehicleChaseBehaviorFlags, Boolean)
- uid: GTA.Ped.SetVehicleChaseIdealPursuitDistance(System.Single)
  commentId: M:GTA.Ped.SetVehicleChaseIdealPursuitDistance(System.Single)
  id: SetVehicleChaseIdealPursuitDistance(System.Single)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetVehicleChaseIdealPursuitDistance(float)
  nameWithType: Ped.SetVehicleChaseIdealPursuitDistance(float)
  fullName: GTA.Ped.SetVehicleChaseIdealPursuitDistance(float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetVehicleChaseIdealPursuitDistance(float distance)
    parameters:
    - id: distance
      type: System.Single
    content.vb: Public Sub SetVehicleChaseIdealPursuitDistance(distance As Single)
  overload: GTA.Ped.SetVehicleChaseIdealPursuitDistance*
  nameWithType.vb: Ped.SetVehicleChaseIdealPursuitDistance(Single)
  fullName.vb: GTA.Ped.SetVehicleChaseIdealPursuitDistance(Single)
  name.vb: SetVehicleChaseIdealPursuitDistance(Single)
- uid: GTA.Ped.ForceMotionStateThisFrame(GTA.PedMotionState,System.Boolean,GTA.ForceAnimAIUpdateState,System.Boolean)
  commentId: M:GTA.Ped.ForceMotionStateThisFrame(GTA.PedMotionState,System.Boolean,GTA.ForceAnimAIUpdateState,System.Boolean)
  id: ForceMotionStateThisFrame(GTA.PedMotionState,System.Boolean,GTA.ForceAnimAIUpdateState,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ForceMotionStateThisFrame(PedMotionState, bool, ForceAnimAIUpdateState, bool)
  nameWithType: Ped.ForceMotionStateThisFrame(PedMotionState, bool, ForceAnimAIUpdateState, bool)
  fullName: GTA.Ped.ForceMotionStateThisFrame(GTA.PedMotionState, bool, GTA.ForceAnimAIUpdateState, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool ForceMotionStateThisFrame(PedMotionState state, bool restartState = false, ForceAnimAIUpdateState exitState = ForceAnimAIUpdateState.Default, bool forceAIPreCameraUpdate = false)
    parameters:
    - id: state
      type: GTA.PedMotionState
    - id: restartState
      type: System.Boolean
    - id: exitState
      type: GTA.ForceAnimAIUpdateState
    - id: forceAIPreCameraUpdate
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function ForceMotionStateThisFrame(state As PedMotionState, restartState As Boolean = False, exitState As ForceAnimAIUpdateState = ForceAnimAIUpdateState.Default, forceAIPreCameraUpdate As Boolean = False) As Boolean
  overload: GTA.Ped.ForceMotionStateThisFrame*
  nameWithType.vb: Ped.ForceMotionStateThisFrame(PedMotionState, Boolean, ForceAnimAIUpdateState, Boolean)
  fullName.vb: GTA.Ped.ForceMotionStateThisFrame(GTA.PedMotionState, Boolean, GTA.ForceAnimAIUpdateState, Boolean)
  name.vb: ForceMotionStateThisFrame(PedMotionState, Boolean, ForceAnimAIUpdateState, Boolean)
- uid: GTA.Ped.HasReceivedEvent(GTA.EventType)
  commentId: M:GTA.Ped.HasReceivedEvent(GTA.EventType)
  id: HasReceivedEvent(GTA.EventType)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: HasReceivedEvent(EventType)
  nameWithType: Ped.HasReceivedEvent(EventType)
  fullName: GTA.Ped.HasReceivedEvent(GTA.EventType)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool HasReceivedEvent(EventType eventType)
    parameters:
    - id: eventType
      type: GTA.EventType
    return:
      type: System.Boolean
    content.vb: Public Function HasReceivedEvent(eventType As EventType) As Boolean
  overload: GTA.Ped.HasReceivedEvent*
- uid: GTA.Ped.IsRespondingToEvent(GTA.EventType)
  commentId: M:GTA.Ped.IsRespondingToEvent(GTA.EventType)
  id: IsRespondingToEvent(GTA.EventType)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsRespondingToEvent(EventType)
  nameWithType: Ped.IsRespondingToEvent(EventType)
  fullName: GTA.Ped.IsRespondingToEvent(GTA.EventType)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsRespondingToEvent(EventType eventType)
    parameters:
    - id: eventType
      type: GTA.EventType
    return:
      type: System.Boolean
    content.vb: Public Function IsRespondingToEvent(eventType As EventType) As Boolean
  overload: GTA.Ped.IsRespondingToEvent*
- uid: GTA.Ped.Ragdoll(System.Int32,GTA.RagdollType)
  commentId: M:GTA.Ped.Ragdoll(System.Int32,GTA.RagdollType)
  id: Ragdoll(System.Int32,GTA.RagdollType)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Ragdoll(int, RagdollType)
  nameWithType: Ped.Ragdoll(int, RagdollType)
  fullName: GTA.Ped.Ragdoll(int, GTA.RagdollType)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Ragdoll(int duration = -1, RagdollType ragdollType = RagdollType.Normal)
    parameters:
    - id: duration
      type: System.Int32
    - id: ragdollType
      type: GTA.RagdollType
    content.vb: Public Sub Ragdoll(duration As Integer = -1, ragdollType As RagdollType = RagdollType.Normal)
  overload: GTA.Ped.Ragdoll*
  nameWithType.vb: Ped.Ragdoll(Integer, RagdollType)
  fullName.vb: GTA.Ped.Ragdoll(Integer, GTA.RagdollType)
  name.vb: Ragdoll(Integer, RagdollType)
- uid: GTA.Ped.SetToRagdoll(System.Int32,System.Int32,GTA.RagdollType,System.Boolean)
  commentId: M:GTA.Ped.SetToRagdoll(System.Int32,System.Int32,GTA.RagdollType,System.Boolean)
  id: SetToRagdoll(System.Int32,System.Int32,GTA.RagdollType,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetToRagdoll(int, int, RagdollType, bool)
  nameWithType: Ped.SetToRagdoll(int, int, RagdollType, bool)
  fullName: GTA.Ped.SetToRagdoll(int, int, GTA.RagdollType, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool SetToRagdoll(int minTime, int maxTime, RagdollType ragdollType, bool forceScriptControl = false)
    parameters:
    - id: minTime
      type: System.Int32
    - id: maxTime
      type: System.Int32
    - id: ragdollType
      type: GTA.RagdollType
    - id: forceScriptControl
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function SetToRagdoll(minTime As Integer, maxTime As Integer, ragdollType As RagdollType, forceScriptControl As Boolean = False) As Boolean
  overload: GTA.Ped.SetToRagdoll*
  nameWithType.vb: Ped.SetToRagdoll(Integer, Integer, RagdollType, Boolean)
  fullName.vb: GTA.Ped.SetToRagdoll(Integer, Integer, GTA.RagdollType, Boolean)
  name.vb: SetToRagdoll(Integer, Integer, RagdollType, Boolean)
- uid: GTA.Ped.SetToRagdollWithFall(System.Int32,System.Int32,GTA.RagdollFallType,GTA.Math.Vector3,System.Single)
  commentId: M:GTA.Ped.SetToRagdollWithFall(System.Int32,System.Int32,GTA.RagdollFallType,GTA.Math.Vector3,System.Single)
  id: SetToRagdollWithFall(System.Int32,System.Int32,GTA.RagdollFallType,GTA.Math.Vector3,System.Single)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetToRagdollWithFall(int, int, RagdollFallType, Vector3, float)
  nameWithType: Ped.SetToRagdollWithFall(int, int, RagdollFallType, Vector3, float)
  fullName: GTA.Ped.SetToRagdollWithFall(int, int, GTA.RagdollFallType, GTA.Math.Vector3, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool SetToRagdollWithFall(int minTime, int maxTime, RagdollFallType fallType, Vector3 direction, float groundHeight)
    parameters:
    - id: minTime
      type: System.Int32
    - id: maxTime
      type: System.Int32
    - id: fallType
      type: GTA.RagdollFallType
    - id: direction
      type: GTA.Math.Vector3
    - id: groundHeight
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function SetToRagdollWithFall(minTime As Integer, maxTime As Integer, fallType As RagdollFallType, direction As Vector3, groundHeight As Single) As Boolean
  overload: GTA.Ped.SetToRagdollWithFall*
  nameWithType.vb: Ped.SetToRagdollWithFall(Integer, Integer, RagdollFallType, Vector3, Single)
  fullName.vb: GTA.Ped.SetToRagdollWithFall(Integer, Integer, GTA.RagdollFallType, GTA.Math.Vector3, Single)
  name.vb: SetToRagdollWithFall(Integer, Integer, RagdollFallType, Vector3, Single)
- uid: GTA.Ped.CancelRagdoll
  commentId: M:GTA.Ped.CancelRagdoll
  id: CancelRagdoll
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CancelRagdoll()
  nameWithType: Ped.CancelRagdoll()
  fullName: GTA.Ped.CancelRagdoll()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void CancelRagdoll()
    content.vb: Public Sub CancelRagdoll()
  overload: GTA.Ped.CancelRagdoll*
- uid: GTA.Ped.SetRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  commentId: M:GTA.Ped.SetRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  id: SetRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetRagdollBlockingFlags(RagdollBlockingFlags)
  nameWithType: Ped.SetRagdollBlockingFlags(RagdollBlockingFlags)
  fullName: GTA.Ped.SetRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetRagdollBlockingFlags(RagdollBlockingFlags flags = RagdollBlockingFlags.BulletImpact)
    parameters:
    - id: flags
      type: GTA.RagdollBlockingFlags
    content.vb: Public Sub SetRagdollBlockingFlags(flags As RagdollBlockingFlags = RagdollBlockingFlags.BulletImpact)
  overload: GTA.Ped.SetRagdollBlockingFlags*
- uid: GTA.Ped.ClearRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  commentId: M:GTA.Ped.ClearRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  id: ClearRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearRagdollBlockingFlags(RagdollBlockingFlags)
  nameWithType: Ped.ClearRagdollBlockingFlags(RagdollBlockingFlags)
  fullName: GTA.Ped.ClearRagdollBlockingFlags(GTA.RagdollBlockingFlags)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearRagdollBlockingFlags(RagdollBlockingFlags flags = RagdollBlockingFlags.BulletImpact)
    parameters:
    - id: flags
      type: GTA.RagdollBlockingFlags
    content.vb: Public Sub ClearRagdollBlockingFlags(flags As RagdollBlockingFlags = RagdollBlockingFlags.BulletImpact)
  overload: GTA.Ped.ClearRagdollBlockingFlags*
- uid: GTA.Ped.SetCombatAttribute(GTA.CombatAttributes,System.Boolean)
  commentId: M:GTA.Ped.SetCombatAttribute(GTA.CombatAttributes,System.Boolean)
  id: SetCombatAttribute(GTA.CombatAttributes,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetCombatAttribute(CombatAttributes, bool)
  nameWithType: Ped.SetCombatAttribute(CombatAttributes, bool)
  fullName: GTA.Ped.SetCombatAttribute(GTA.CombatAttributes, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetCombatAttribute(CombatAttributes attribute, bool activeSkill)
    parameters:
    - id: attribute
      type: GTA.CombatAttributes
    - id: activeSkill
      type: System.Boolean
    content.vb: Public Sub SetCombatAttribute(attribute As CombatAttributes, activeSkill As Boolean)
  overload: GTA.Ped.SetCombatAttribute*
  nameWithType.vb: Ped.SetCombatAttribute(CombatAttributes, Boolean)
  fullName.vb: GTA.Ped.SetCombatAttribute(GTA.CombatAttributes, Boolean)
  name.vb: SetCombatAttribute(CombatAttributes, Boolean)
- uid: GTA.Ped.SetCombatFloatAttribute(GTA.CombatFloatAttributes,System.Single)
  commentId: M:GTA.Ped.SetCombatFloatAttribute(GTA.CombatFloatAttributes,System.Single)
  id: SetCombatFloatAttribute(GTA.CombatFloatAttributes,System.Single)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetCombatFloatAttribute(CombatFloatAttributes, float)
  nameWithType: Ped.SetCombatFloatAttribute(CombatFloatAttributes, float)
  fullName: GTA.Ped.SetCombatFloatAttribute(GTA.CombatFloatAttributes, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetCombatFloatAttribute(CombatFloatAttributes attribute, float newValue)
    parameters:
    - id: attribute
      type: GTA.CombatFloatAttributes
    - id: newValue
      type: System.Single
    content.vb: Public Sub SetCombatFloatAttribute(attribute As CombatFloatAttributes, newValue As Single)
  overload: GTA.Ped.SetCombatFloatAttribute*
  nameWithType.vb: Ped.SetCombatFloatAttribute(CombatFloatAttributes, Single)
  fullName.vb: GTA.Ped.SetCombatFloatAttribute(GTA.CombatFloatAttributes, Single)
  name.vb: SetCombatFloatAttribute(CombatFloatAttributes, Single)
- uid: GTA.Ped.GetCombatFloatAttribute(GTA.CombatFloatAttributes)
  commentId: M:GTA.Ped.GetCombatFloatAttribute(GTA.CombatFloatAttributes)
  id: GetCombatFloatAttribute(GTA.CombatFloatAttributes)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetCombatFloatAttribute(CombatFloatAttributes)
  nameWithType: Ped.GetCombatFloatAttribute(CombatFloatAttributes)
  fullName: GTA.Ped.GetCombatFloatAttribute(GTA.CombatFloatAttributes)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float GetCombatFloatAttribute(CombatFloatAttributes attribute)
    parameters:
    - id: attribute
      type: GTA.CombatFloatAttributes
    return:
      type: System.Single
    content.vb: Public Function GetCombatFloatAttribute(attribute As CombatFloatAttributes) As Single
  overload: GTA.Ped.GetCombatFloatAttribute*
- uid: GTA.Ped.SetFleeAttributes(GTA.FleeAttributes,System.Boolean)
  commentId: M:GTA.Ped.SetFleeAttributes(GTA.FleeAttributes,System.Boolean)
  id: SetFleeAttributes(GTA.FleeAttributes,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetFleeAttributes(FleeAttributes, bool)
  nameWithType: Ped.SetFleeAttributes(FleeAttributes, bool)
  fullName: GTA.Ped.SetFleeAttributes(GTA.FleeAttributes, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetFleeAttributes(FleeAttributes attributes, bool activeSkill)
    parameters:
    - id: attributes
      type: GTA.FleeAttributes
    - id: activeSkill
      type: System.Boolean
    content.vb: Public Sub SetFleeAttributes(attributes As FleeAttributes, activeSkill As Boolean)
  overload: GTA.Ped.SetFleeAttributes*
  nameWithType.vb: Ped.SetFleeAttributes(FleeAttributes, Boolean)
  fullName.vb: GTA.Ped.SetFleeAttributes(GTA.FleeAttributes, Boolean)
  name.vb: SetFleeAttributes(FleeAttributes, Boolean)
- uid: GTA.Ped.TrySetVehicleWeapon(GTA.VehicleWeaponHash)
  commentId: M:GTA.Ped.TrySetVehicleWeapon(GTA.VehicleWeaponHash)
  id: TrySetVehicleWeapon(GTA.VehicleWeaponHash)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: TrySetVehicleWeapon(VehicleWeaponHash)
  nameWithType: Ped.TrySetVehicleWeapon(VehicleWeaponHash)
  fullName: GTA.Ped.TrySetVehicleWeapon(GTA.VehicleWeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool TrySetVehicleWeapon(VehicleWeaponHash hash)
    parameters:
    - id: hash
      type: GTA.VehicleWeaponHash
    return:
      type: System.Boolean
    content.vb: Public Function TrySetVehicleWeapon(hash As VehicleWeaponHash) As Boolean
  overload: GTA.Ped.TrySetVehicleWeapon*
- uid: GTA.Ped.FireVehicleWeaponAt(GTA.Entity)
  commentId: M:GTA.Ped.FireVehicleWeaponAt(GTA.Entity)
  id: FireVehicleWeaponAt(GTA.Entity)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: FireVehicleWeaponAt(Entity)
  nameWithType: Ped.FireVehicleWeaponAt(Entity)
  fullName: GTA.Ped.FireVehicleWeaponAt(GTA.Entity)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void FireVehicleWeaponAt(Entity target)
    parameters:
    - id: target
      type: GTA.Entity
    content.vb: Public Sub FireVehicleWeaponAt(target As Entity)
  overload: GTA.Ped.FireVehicleWeaponAt*
- uid: GTA.Ped.FireVehicleWeaponAt(GTA.Math.Vector3)
  commentId: M:GTA.Ped.FireVehicleWeaponAt(GTA.Math.Vector3)
  id: FireVehicleWeaponAt(GTA.Math.Vector3)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: FireVehicleWeaponAt(Vector3)
  nameWithType: Ped.FireVehicleWeaponAt(Vector3)
  fullName: GTA.Ped.FireVehicleWeaponAt(GTA.Math.Vector3)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void FireVehicleWeaponAt(Vector3 target)
    parameters:
    - id: target
      type: GTA.Math.Vector3
    content.vb: Public Sub FireVehicleWeaponAt(target As Vector3)
  overload: GTA.Ped.FireVehicleWeaponAt*
- uid: GTA.Ped.IsInVehicle
  commentId: M:GTA.Ped.IsInVehicle
  id: IsInVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInVehicle()
  nameWithType: Ped.IsInVehicle()
  fullName: GTA.Ped.IsInVehicle()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInVehicle()
    return:
      type: System.Boolean
    content.vb: Public Function IsInVehicle() As Boolean
  overload: GTA.Ped.IsInVehicle*
- uid: GTA.Ped.IsInVehicle(GTA.Vehicle)
  commentId: M:GTA.Ped.IsInVehicle(GTA.Vehicle)
  id: IsInVehicle(GTA.Vehicle)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInVehicle(Vehicle)
  nameWithType: Ped.IsInVehicle(Vehicle)
  fullName: GTA.Ped.IsInVehicle(GTA.Vehicle)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInVehicle(Vehicle vehicle)
    parameters:
    - id: vehicle
      type: GTA.Vehicle
    return:
      type: System.Boolean
    content.vb: Public Function IsInVehicle(vehicle As Vehicle) As Boolean
  overload: GTA.Ped.IsInVehicle*
- uid: GTA.Ped.IsSittingInVehicle
  commentId: M:GTA.Ped.IsSittingInVehicle
  id: IsSittingInVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsSittingInVehicle()
  nameWithType: Ped.IsSittingInVehicle()
  fullName: GTA.Ped.IsSittingInVehicle()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSittingInVehicle()
    return:
      type: System.Boolean
    content.vb: Public Function IsSittingInVehicle() As Boolean
  overload: GTA.Ped.IsSittingInVehicle*
- uid: GTA.Ped.IsSittingInVehicle(GTA.Vehicle)
  commentId: M:GTA.Ped.IsSittingInVehicle(GTA.Vehicle)
  id: IsSittingInVehicle(GTA.Vehicle)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsSittingInVehicle(Vehicle)
  nameWithType: Ped.IsSittingInVehicle(Vehicle)
  fullName: GTA.Ped.IsSittingInVehicle(GTA.Vehicle)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSittingInVehicle(Vehicle vehicle)
    parameters:
    - id: vehicle
      type: GTA.Vehicle
    return:
      type: System.Boolean
    content.vb: Public Function IsSittingInVehicle(vehicle As Vehicle) As Boolean
  overload: GTA.Ped.IsSittingInVehicle*
- uid: GTA.Ped.IsStandingOnVehicle
  commentId: M:GTA.Ped.IsStandingOnVehicle
  id: IsStandingOnVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsStandingOnVehicle()
  nameWithType: Ped.IsStandingOnVehicle()
  fullName: GTA.Ped.IsStandingOnVehicle()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsStandingOnVehicle()
    return:
      type: System.Boolean
    content.vb: Public Function IsStandingOnVehicle() As Boolean
  overload: GTA.Ped.IsStandingOnVehicle*
- uid: GTA.Ped.IsStandingOnVehicle(GTA.Vehicle)
  commentId: M:GTA.Ped.IsStandingOnVehicle(GTA.Vehicle)
  id: IsStandingOnVehicle(GTA.Vehicle)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsStandingOnVehicle(Vehicle)
  nameWithType: Ped.IsStandingOnVehicle(Vehicle)
  fullName: GTA.Ped.IsStandingOnVehicle(GTA.Vehicle)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsStandingOnVehicle(Vehicle vehicle)
    parameters:
    - id: vehicle
      type: GTA.Vehicle
    return:
      type: System.Boolean
    content.vb: Public Function IsStandingOnVehicle(vehicle As Vehicle) As Boolean
  overload: GTA.Ped.IsStandingOnVehicle*
- uid: GTA.Ped.SetIntoVehicle(GTA.Vehicle,GTA.VehicleSeat)
  commentId: M:GTA.Ped.SetIntoVehicle(GTA.Vehicle,GTA.VehicleSeat)
  id: SetIntoVehicle(GTA.Vehicle,GTA.VehicleSeat)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIntoVehicle(Vehicle, VehicleSeat)
  nameWithType: Ped.SetIntoVehicle(Vehicle, VehicleSeat)
  fullName: GTA.Ped.SetIntoVehicle(GTA.Vehicle, GTA.VehicleSeat)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIntoVehicle(Vehicle vehicle, VehicleSeat seat)
    parameters:
    - id: vehicle
      type: GTA.Vehicle
    - id: seat
      type: GTA.VehicleSeat
    content.vb: Public Sub SetIntoVehicle(vehicle As Vehicle, seat As VehicleSeat)
  overload: GTA.Ped.SetIntoVehicle*
- uid: GTA.Ped.OpenParachute
  commentId: M:GTA.Ped.OpenParachute
  id: OpenParachute
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: OpenParachute()
  nameWithType: Ped.OpenParachute()
  fullName: GTA.Ped.OpenParachute()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void OpenParachute()
    content.vb: Public Sub OpenParachute()
  overload: GTA.Ped.OpenParachute*
- uid: GTA.Ped.IsInCombatAgainst(GTA.Ped)
  commentId: M:GTA.Ped.IsInCombatAgainst(GTA.Ped)
  id: IsInCombatAgainst(GTA.Ped)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInCombatAgainst(Ped)
  nameWithType: Ped.IsInCombatAgainst(Ped)
  fullName: GTA.Ped.IsInCombatAgainst(GTA.Ped)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInCombatAgainst(Ped target)
    parameters:
    - id: target
      type: GTA.Ped
    return:
      type: System.Boolean
    content.vb: Public Function IsInCombatAgainst(target As Ped) As Boolean
  overload: GTA.Ped.IsInCombatAgainst*
- uid: GTA.Ped.ClearKillerRecord
  commentId: M:GTA.Ped.ClearKillerRecord
  id: ClearKillerRecord
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearKillerRecord()
  nameWithType: Ped.ClearKillerRecord()
  fullName: GTA.Ped.ClearKillerRecord()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearKillerRecord()
    content.vb: Public Sub ClearKillerRecord()
  overload: GTA.Ped.ClearKillerRecord*
- uid: GTA.Ped.ClearCauseOfDeathRecord
  commentId: M:GTA.Ped.ClearCauseOfDeathRecord
  id: ClearCauseOfDeathRecord
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearCauseOfDeathRecord()
  nameWithType: Ped.ClearCauseOfDeathRecord()
  fullName: GTA.Ped.ClearCauseOfDeathRecord()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearCauseOfDeathRecord()
    content.vb: Public Sub ClearCauseOfDeathRecord()
  overload: GTA.Ped.ClearCauseOfDeathRecord*
- uid: GTA.Ped.ClearTimeOfDeathRecord
  commentId: M:GTA.Ped.ClearTimeOfDeathRecord
  id: ClearTimeOfDeathRecord
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearTimeOfDeathRecord()
  nameWithType: Ped.ClearTimeOfDeathRecord()
  fullName: GTA.Ped.ClearTimeOfDeathRecord()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearTimeOfDeathRecord()
    content.vb: Public Sub ClearTimeOfDeathRecord()
  overload: GTA.Ped.ClearTimeOfDeathRecord*
- uid: GTA.Ped.ApplyDamage(System.Int32)
  commentId: M:GTA.Ped.ApplyDamage(System.Int32)
  id: ApplyDamage(System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyDamage(int)
  nameWithType: Ped.ApplyDamage(int)
  fullName: GTA.Ped.ApplyDamage(int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyDamage(int damageAmount)
    parameters:
    - id: damageAmount
      type: System.Int32
    content.vb: Public Sub ApplyDamage(damageAmount As Integer)
  overload: GTA.Ped.ApplyDamage*
  nameWithType.vb: Ped.ApplyDamage(Integer)
  fullName.vb: GTA.Ped.ApplyDamage(Integer)
  name.vb: ApplyDamage(Integer)
- uid: GTA.Ped.HasBeenDamagedBy(GTA.WeaponHash)
  commentId: M:GTA.Ped.HasBeenDamagedBy(GTA.WeaponHash)
  id: HasBeenDamagedBy(GTA.WeaponHash)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: HasBeenDamagedBy(WeaponHash)
  nameWithType: Ped.HasBeenDamagedBy(WeaponHash)
  fullName: GTA.Ped.HasBeenDamagedBy(GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool HasBeenDamagedBy(WeaponHash weapon)
    parameters:
    - id: weapon
      type: GTA.WeaponHash
    return:
      type: System.Boolean
    content.vb: Public Overrides Function HasBeenDamagedBy(weapon As WeaponHash) As Boolean
  overridden: GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
  overload: GTA.Ped.HasBeenDamagedBy*
- uid: GTA.Ped.HasBeenDamagedByAnyWeapon
  commentId: M:GTA.Ped.HasBeenDamagedByAnyWeapon
  id: HasBeenDamagedByAnyWeapon
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: HasBeenDamagedByAnyWeapon()
  nameWithType: Ped.HasBeenDamagedByAnyWeapon()
  fullName: GTA.Ped.HasBeenDamagedByAnyWeapon()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool HasBeenDamagedByAnyWeapon()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function HasBeenDamagedByAnyWeapon() As Boolean
  overridden: GTA.Entity.HasBeenDamagedByAnyWeapon
  overload: GTA.Ped.HasBeenDamagedByAnyWeapon*
- uid: GTA.Ped.HasBeenDamagedByAnyMeleeWeapon
  commentId: M:GTA.Ped.HasBeenDamagedByAnyMeleeWeapon
  id: HasBeenDamagedByAnyMeleeWeapon
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: HasBeenDamagedByAnyMeleeWeapon()
  nameWithType: Ped.HasBeenDamagedByAnyMeleeWeapon()
  fullName: GTA.Ped.HasBeenDamagedByAnyMeleeWeapon()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool HasBeenDamagedByAnyMeleeWeapon()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function HasBeenDamagedByAnyMeleeWeapon() As Boolean
  overridden: GTA.Entity.HasBeenDamagedByAnyMeleeWeapon
  overload: GTA.Ped.HasBeenDamagedByAnyMeleeWeapon*
- uid: GTA.Ped.ClearLastWeaponDamage
  commentId: M:GTA.Ped.ClearLastWeaponDamage
  id: ClearLastWeaponDamage
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ClearLastWeaponDamage()
  nameWithType: Ped.ClearLastWeaponDamage()
  fullName: GTA.Ped.ClearLastWeaponDamage()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override void ClearLastWeaponDamage()
    content.vb: Public Overrides Sub ClearLastWeaponDamage()
  overridden: GTA.Entity.ClearLastWeaponDamage
  overload: GTA.Ped.ClearLastWeaponDamage*
- uid: GTA.Ped.GetRelationshipWithPed(GTA.Ped)
  commentId: M:GTA.Ped.GetRelationshipWithPed(GTA.Ped)
  id: GetRelationshipWithPed(GTA.Ped)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetRelationshipWithPed(Ped)
  nameWithType: Ped.GetRelationshipWithPed(Ped)
  fullName: GTA.Ped.GetRelationshipWithPed(GTA.Ped)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Relationship GetRelationshipWithPed(Ped ped)
    parameters:
    - id: ped
      type: GTA.Ped
    return:
      type: GTA.Relationship
    content.vb: Public Function GetRelationshipWithPed(ped As Ped) As Relationship
  overload: GTA.Ped.GetRelationshipWithPed*
- uid: GTA.Ped.LeaveGroup
  commentId: M:GTA.Ped.LeaveGroup
  id: LeaveGroup
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: LeaveGroup()
  nameWithType: Ped.LeaveGroup()
  fullName: GTA.Ped.LeaveGroup()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void LeaveGroup()
    content.vb: Public Sub LeaveGroup()
  overload: GTA.Ped.LeaveGroup*
- uid: GTA.Ped.PlayAmbientSpeech(System.String,GTA.SpeechModifier)
  commentId: M:GTA.Ped.PlayAmbientSpeech(System.String,GTA.SpeechModifier)
  id: PlayAmbientSpeech(System.String,GTA.SpeechModifier)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PlayAmbientSpeech(string, SpeechModifier)
  nameWithType: Ped.PlayAmbientSpeech(string, SpeechModifier)
  fullName: GTA.Ped.PlayAmbientSpeech(string, GTA.SpeechModifier)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void PlayAmbientSpeech(string speechName, SpeechModifier modifier = SpeechModifier.Standard)
    parameters:
    - id: speechName
      type: System.String
    - id: modifier
      type: GTA.SpeechModifier
    content.vb: Public Sub PlayAmbientSpeech(speechName As String, modifier As SpeechModifier = SpeechModifier.Standard)
  overload: GTA.Ped.PlayAmbientSpeech*
  nameWithType.vb: Ped.PlayAmbientSpeech(String, SpeechModifier)
  fullName.vb: GTA.Ped.PlayAmbientSpeech(String, GTA.SpeechModifier)
  name.vb: PlayAmbientSpeech(String, SpeechModifier)
- uid: GTA.Ped.PlayAmbientSpeech(System.String,System.String,GTA.SpeechModifier)
  commentId: M:GTA.Ped.PlayAmbientSpeech(System.String,System.String,GTA.SpeechModifier)
  id: PlayAmbientSpeech(System.String,System.String,GTA.SpeechModifier)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PlayAmbientSpeech(string, string, SpeechModifier)
  nameWithType: Ped.PlayAmbientSpeech(string, string, SpeechModifier)
  fullName: GTA.Ped.PlayAmbientSpeech(string, string, GTA.SpeechModifier)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void PlayAmbientSpeech(string speechName, string voiceName, SpeechModifier modifier = SpeechModifier.Standard)
    parameters:
    - id: speechName
      type: System.String
    - id: voiceName
      type: System.String
    - id: modifier
      type: GTA.SpeechModifier
    content.vb: Public Sub PlayAmbientSpeech(speechName As String, voiceName As String, modifier As SpeechModifier = SpeechModifier.Standard)
  overload: GTA.Ped.PlayAmbientSpeech*
  nameWithType.vb: Ped.PlayAmbientSpeech(String, String, SpeechModifier)
  fullName.vb: GTA.Ped.PlayAmbientSpeech(String, String, GTA.SpeechModifier)
  name.vb: PlayAmbientSpeech(String, String, SpeechModifier)
- uid: GTA.Ped.StopCurrentPlayingSpeech
  commentId: M:GTA.Ped.StopCurrentPlayingSpeech
  id: StopCurrentPlayingSpeech
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: StopCurrentPlayingSpeech()
  nameWithType: Ped.StopCurrentPlayingSpeech()
  fullName: GTA.Ped.StopCurrentPlayingSpeech()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void StopCurrentPlayingSpeech()
    content.vb: Public Sub StopCurrentPlayingSpeech()
  overload: GTA.Ped.StopCurrentPlayingSpeech*
- uid: GTA.Ped.StopCurrentPlayingAmbientSpeech
  commentId: M:GTA.Ped.StopCurrentPlayingAmbientSpeech
  id: StopCurrentPlayingAmbientSpeech
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: StopCurrentPlayingAmbientSpeech()
  nameWithType: Ped.StopCurrentPlayingAmbientSpeech()
  fullName: GTA.Ped.StopCurrentPlayingAmbientSpeech()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void StopCurrentPlayingAmbientSpeech()
    content.vb: Public Sub StopCurrentPlayingAmbientSpeech()
  overload: GTA.Ped.StopCurrentPlayingAmbientSpeech*
- uid: GTA.Ped.SetMovementClipSet(GTA.ClipSet,System.Nullable{GTA.AnimationBlendDuration})
  commentId: M:GTA.Ped.SetMovementClipSet(GTA.ClipSet,System.Nullable{GTA.AnimationBlendDuration})
  id: SetMovementClipSet(GTA.ClipSet,System.Nullable{GTA.AnimationBlendDuration})
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetMovementClipSet(ClipSet, AnimationBlendDuration?)
  nameWithType: Ped.SetMovementClipSet(ClipSet, AnimationBlendDuration?)
  fullName: GTA.Ped.SetMovementClipSet(GTA.ClipSet, GTA.AnimationBlendDuration?)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetMovementClipSet(ClipSet clipSet, AnimationBlendDuration? blendDuration = null)
    parameters:
    - id: clipSet
      type: GTA.ClipSet
    - id: blendDuration
      type: System.Nullable{GTA.AnimationBlendDuration}
    content.vb: Public Sub SetMovementClipSet(clipSet As ClipSet, blendDuration As AnimationBlendDuration? = Nothing)
  overload: GTA.Ped.SetMovementClipSet*
- uid: GTA.Ped.ResetMovementClipSet(System.Nullable{GTA.AnimationBlendDuration})
  commentId: M:GTA.Ped.ResetMovementClipSet(System.Nullable{GTA.AnimationBlendDuration})
  id: ResetMovementClipSet(System.Nullable{GTA.AnimationBlendDuration})
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ResetMovementClipSet(AnimationBlendDuration?)
  nameWithType: Ped.ResetMovementClipSet(AnimationBlendDuration?)
  fullName: GTA.Ped.ResetMovementClipSet(GTA.AnimationBlendDuration?)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ResetMovementClipSet(AnimationBlendDuration? blendDuration = null)
    parameters:
    - id: blendDuration
      type: System.Nullable{GTA.AnimationBlendDuration}
    content.vb: Public Sub ResetMovementClipSet(blendDuration As AnimationBlendDuration? = Nothing)
  overload: GTA.Ped.ResetMovementClipSet*
- uid: GTA.Ped.SetStrafeClipSet(GTA.ClipSet)
  commentId: M:GTA.Ped.SetStrafeClipSet(GTA.ClipSet)
  id: SetStrafeClipSet(GTA.ClipSet)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetStrafeClipSet(ClipSet)
  nameWithType: Ped.SetStrafeClipSet(ClipSet)
  fullName: GTA.Ped.SetStrafeClipSet(GTA.ClipSet)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetStrafeClipSet(ClipSet clipSet)
    parameters:
    - id: clipSet
      type: GTA.ClipSet
    content.vb: Public Sub SetStrafeClipSet(clipSet As ClipSet)
  overload: GTA.Ped.SetStrafeClipSet*
- uid: GTA.Ped.ResetStrafeClipSet
  commentId: M:GTA.Ped.ResetStrafeClipSet
  id: ResetStrafeClipSet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ResetStrafeClipSet()
  nameWithType: Ped.ResetStrafeClipSet()
  fullName: GTA.Ped.ResetStrafeClipSet()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ResetStrafeClipSet()
    content.vb: Public Sub ResetStrafeClipSet()
  overload: GTA.Ped.ResetStrafeClipSet*
- uid: GTA.Ped.SetWeaponMovementClipSet(GTA.ClipSet)
  commentId: M:GTA.Ped.SetWeaponMovementClipSet(GTA.ClipSet)
  id: SetWeaponMovementClipSet(GTA.ClipSet)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetWeaponMovementClipSet(ClipSet)
  nameWithType: Ped.SetWeaponMovementClipSet(ClipSet)
  fullName: GTA.Ped.SetWeaponMovementClipSet(GTA.ClipSet)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetWeaponMovementClipSet(ClipSet clipSet)
    parameters:
    - id: clipSet
      type: GTA.ClipSet
    content.vb: Public Sub SetWeaponMovementClipSet(clipSet As ClipSet)
  overload: GTA.Ped.SetWeaponMovementClipSet*
- uid: GTA.Ped.ResetWeaponMovementClipSet
  commentId: M:GTA.Ped.ResetWeaponMovementClipSet
  id: ResetWeaponMovementClipSet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ResetWeaponMovementClipSet()
  nameWithType: Ped.ResetWeaponMovementClipSet()
  fullName: GTA.Ped.ResetWeaponMovementClipSet()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ResetWeaponMovementClipSet()
    content.vb: Public Sub ResetWeaponMovementClipSet()
  overload: GTA.Ped.ResetWeaponMovementClipSet*
- uid: GTA.Ped.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  id: ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  nameWithType: Ped.ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  fullName: GTA.Ped.ApplyWorldForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyWorldForceWorldOffset(Vector3 force, Vector3 offset, ForceType forceType, RagdollComponent component, bool scaleByMass, bool triggerAudio = false, bool scaleByTimeScale = true)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: offset
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: triggerAudio
      type: System.Boolean
    - id: scaleByTimeScale
      type: System.Boolean
    content.vb: Public Sub ApplyWorldForceWorldOffset(force As Vector3, offset As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, triggerAudio As Boolean = False, scaleByTimeScale As Boolean = True)
  overload: GTA.Ped.ApplyWorldForceWorldOffset*
  nameWithType.vb: Ped.ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyWorldForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean, Boolean)
  name.vb: ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
- uid: GTA.Ped.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  id: ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  nameWithType: Ped.ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  fullName: GTA.Ped.ApplyWorldForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyWorldForceRelativeOffset(Vector3 force, Vector3 offset, ForceType forceType, RagdollComponent component, bool scaleByMass, bool triggerAudio = false, bool scaleByTimeScale = true)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: offset
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: triggerAudio
      type: System.Boolean
    - id: scaleByTimeScale
      type: System.Boolean
    content.vb: Public Sub ApplyWorldForceRelativeOffset(force As Vector3, offset As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, triggerAudio As Boolean = False, scaleByTimeScale As Boolean = True)
  overload: GTA.Ped.ApplyWorldForceRelativeOffset*
  nameWithType.vb: Ped.ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyWorldForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean, Boolean)
  name.vb: ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
- uid: GTA.Ped.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  id: ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  nameWithType: Ped.ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  fullName: GTA.Ped.ApplyRelativeForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyRelativeForceWorldOffset(Vector3 force, Vector3 offset, ForceType forceType, RagdollComponent component, bool scaleByMass, bool triggerAudio = false, bool scaleByTimeScale = true)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: offset
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: triggerAudio
      type: System.Boolean
    - id: scaleByTimeScale
      type: System.Boolean
    content.vb: Public Sub ApplyRelativeForceWorldOffset(force As Vector3, offset As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, triggerAudio As Boolean = False, scaleByTimeScale As Boolean = True)
  overload: GTA.Ped.ApplyRelativeForceWorldOffset*
  nameWithType.vb: Ped.ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyRelativeForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean, Boolean)
  name.vb: ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
- uid: GTA.Ped.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  id: ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  nameWithType: Ped.ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, bool, bool, bool)
  fullName: GTA.Ped.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyRelativeForceRelativeOffset(Vector3 force, Vector3 offset, ForceType forceType, RagdollComponent component, bool scaleByMass, bool triggerAudio = false, bool scaleByTimeScale = true)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: offset
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: triggerAudio
      type: System.Boolean
    - id: scaleByTimeScale
      type: System.Boolean
    content.vb: Public Sub ApplyRelativeForceRelativeOffset(force As Vector3, offset As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, triggerAudio As Boolean = False, scaleByTimeScale As Boolean = True)
  overload: GTA.Ped.ApplyRelativeForceRelativeOffset*
  nameWithType.vb: Ped.ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean, Boolean)
  name.vb: ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, RagdollComponent, Boolean, Boolean, Boolean)
- uid: GTA.Ped.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  id: ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyWorldForceCenterOfMass(Vector3, ForceType, RagdollComponent, bool, bool)
  nameWithType: Ped.ApplyWorldForceCenterOfMass(Vector3, ForceType, RagdollComponent, bool, bool)
  fullName: GTA.Ped.ApplyWorldForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyWorldForceCenterOfMass(Vector3 force, ForceType forceType, RagdollComponent component, bool scaleByMass, bool applyToChildren = false)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: applyToChildren
      type: System.Boolean
    content.vb: Public Sub ApplyWorldForceCenterOfMass(force As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, applyToChildren As Boolean = False)
  overload: GTA.Ped.ApplyWorldForceCenterOfMass*
  nameWithType.vb: Ped.ApplyWorldForceCenterOfMass(Vector3, ForceType, RagdollComponent, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyWorldForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean)
  name.vb: ApplyWorldForceCenterOfMass(Vector3, ForceType, RagdollComponent, Boolean, Boolean)
- uid: GTA.Ped.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  commentId: M:GTA.Ped.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  id: ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,GTA.RagdollComponent,System.Boolean,System.Boolean)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ApplyRelativeForceCenterOfMass(Vector3, ForceType, RagdollComponent, bool, bool)
  nameWithType: Ped.ApplyRelativeForceCenterOfMass(Vector3, ForceType, RagdollComponent, bool, bool)
  fullName: GTA.Ped.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ApplyRelativeForceCenterOfMass(Vector3 force, ForceType forceType, RagdollComponent component, bool scaleByMass, bool applyToChildren = false)
    parameters:
    - id: force
      type: GTA.Math.Vector3
    - id: forceType
      type: GTA.ForceType
    - id: component
      type: GTA.RagdollComponent
    - id: scaleByMass
      type: System.Boolean
    - id: applyToChildren
      type: System.Boolean
    content.vb: Public Sub ApplyRelativeForceCenterOfMass(force As Vector3, forceType As ForceType, component As RagdollComponent, scaleByMass As Boolean, applyToChildren As Boolean = False)
  overload: GTA.Ped.ApplyRelativeForceCenterOfMass*
  nameWithType.vb: Ped.ApplyRelativeForceCenterOfMass(Vector3, ForceType, RagdollComponent, Boolean, Boolean)
  fullName.vb: GTA.Ped.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, GTA.RagdollComponent, Boolean, Boolean)
  name.vb: ApplyRelativeForceCenterOfMass(Vector3, ForceType, RagdollComponent, Boolean, Boolean)
- uid: GTA.Ped.SetIKTarget(GTA.IKPart,GTA.PedBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  commentId: M:GTA.Ped.SetIKTarget(GTA.IKPart,GTA.PedBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  id: SetIKTarget(GTA.IKPart,GTA.PedBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIKTarget(IKPart, PedBone, Vector3, IKTargetFlags, int, int)
  nameWithType: Ped.SetIKTarget(IKPart, PedBone, Vector3, IKTargetFlags, int, int)
  fullName: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.PedBone, GTA.Math.Vector3, GTA.IKTargetFlags, int, int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIKTarget(IKPart ikPart, PedBone targetBone, Vector3 targetOffset, IKTargetFlags flags, int blendInTimeMS = -1, int blendOutTimeMS = -1)
    parameters:
    - id: ikPart
      type: GTA.IKPart
    - id: targetBone
      type: GTA.PedBone
    - id: targetOffset
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.IKTargetFlags
    - id: blendInTimeMS
      type: System.Int32
    - id: blendOutTimeMS
      type: System.Int32
    content.vb: Public Sub SetIKTarget(ikPart As IKPart, targetBone As PedBone, targetOffset As Vector3, flags As IKTargetFlags, blendInTimeMS As Integer = -1, blendOutTimeMS As Integer = -1)
  overload: GTA.Ped.SetIKTarget*
  nameWithType.vb: Ped.SetIKTarget(IKPart, PedBone, Vector3, IKTargetFlags, Integer, Integer)
  fullName.vb: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.PedBone, GTA.Math.Vector3, GTA.IKTargetFlags, Integer, Integer)
  name.vb: SetIKTarget(IKPart, PedBone, Vector3, IKTargetFlags, Integer, Integer)
- uid: GTA.Ped.SetIKTarget(GTA.IKPart,GTA.EntityBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  commentId: M:GTA.Ped.SetIKTarget(GTA.IKPart,GTA.EntityBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  id: SetIKTarget(GTA.IKPart,GTA.EntityBone,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIKTarget(IKPart, EntityBone, Vector3, IKTargetFlags, int, int)
  nameWithType: Ped.SetIKTarget(IKPart, EntityBone, Vector3, IKTargetFlags, int, int)
  fullName: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.EntityBone, GTA.Math.Vector3, GTA.IKTargetFlags, int, int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIKTarget(IKPart ikPart, EntityBone targetBone, Vector3 targetOffset, IKTargetFlags flags, int blendInTimeMS = -1, int blendOutTimeMS = -1)
    parameters:
    - id: ikPart
      type: GTA.IKPart
    - id: targetBone
      type: GTA.EntityBone
    - id: targetOffset
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.IKTargetFlags
    - id: blendInTimeMS
      type: System.Int32
    - id: blendOutTimeMS
      type: System.Int32
    content.vb: Public Sub SetIKTarget(ikPart As IKPart, targetBone As EntityBone, targetOffset As Vector3, flags As IKTargetFlags, blendInTimeMS As Integer = -1, blendOutTimeMS As Integer = -1)
  overload: GTA.Ped.SetIKTarget*
  nameWithType.vb: Ped.SetIKTarget(IKPart, EntityBone, Vector3, IKTargetFlags, Integer, Integer)
  fullName.vb: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.EntityBone, GTA.Math.Vector3, GTA.IKTargetFlags, Integer, Integer)
  name.vb: SetIKTarget(IKPart, EntityBone, Vector3, IKTargetFlags, Integer, Integer)
- uid: GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Entity,System.Int32,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  commentId: M:GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Entity,System.Int32,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  id: SetIKTarget(GTA.IKPart,GTA.Entity,System.Int32,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIKTarget(IKPart, Entity, int, Vector3, IKTargetFlags, int, int)
  nameWithType: Ped.SetIKTarget(IKPart, Entity, int, Vector3, IKTargetFlags, int, int)
  fullName: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.Entity, int, GTA.Math.Vector3, GTA.IKTargetFlags, int, int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIKTarget(IKPart ikPart, Entity targetEntity, int boneTag, Vector3 targetOffset, IKTargetFlags flags, int blendInTimeMS = -1, int blendOutTimeMS = -1)
    parameters:
    - id: ikPart
      type: GTA.IKPart
    - id: targetEntity
      type: GTA.Entity
    - id: boneTag
      type: System.Int32
    - id: targetOffset
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.IKTargetFlags
    - id: blendInTimeMS
      type: System.Int32
    - id: blendOutTimeMS
      type: System.Int32
    content.vb: Public Sub SetIKTarget(ikPart As IKPart, targetEntity As Entity, boneTag As Integer, targetOffset As Vector3, flags As IKTargetFlags, blendInTimeMS As Integer = -1, blendOutTimeMS As Integer = -1)
  overload: GTA.Ped.SetIKTarget*
  nameWithType.vb: Ped.SetIKTarget(IKPart, Entity, Integer, Vector3, IKTargetFlags, Integer, Integer)
  fullName.vb: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.Entity, Integer, GTA.Math.Vector3, GTA.IKTargetFlags, Integer, Integer)
  name.vb: SetIKTarget(IKPart, Entity, Integer, Vector3, IKTargetFlags, Integer, Integer)
- uid: GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  commentId: M:GTA.Ped.SetIKTarget(GTA.IKPart,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  id: SetIKTarget(GTA.IKPart,GTA.Math.Vector3,GTA.IKTargetFlags,System.Int32,System.Int32)
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SetIKTarget(IKPart, Vector3, IKTargetFlags, int, int)
  nameWithType: Ped.SetIKTarget(IKPart, Vector3, IKTargetFlags, int, int)
  fullName: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.Math.Vector3, GTA.IKTargetFlags, int, int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetIKTarget(IKPart ikPart, Vector3 target, IKTargetFlags flags, int blendInTimeMS = -1, int blendOutTimeMS = -1)
    parameters:
    - id: ikPart
      type: GTA.IKPart
    - id: target
      type: GTA.Math.Vector3
    - id: flags
      type: GTA.IKTargetFlags
    - id: blendInTimeMS
      type: System.Int32
    - id: blendOutTimeMS
      type: System.Int32
    content.vb: Public Sub SetIKTarget(ikPart As IKPart, target As Vector3, flags As IKTargetFlags, blendInTimeMS As Integer = -1, blendOutTimeMS As Integer = -1)
  overload: GTA.Ped.SetIKTarget*
  nameWithType.vb: Ped.SetIKTarget(IKPart, Vector3, IKTargetFlags, Integer, Integer)
  fullName.vb: GTA.Ped.SetIKTarget(GTA.IKPart, GTA.Math.Vector3, GTA.IKTargetFlags, Integer, Integer)
  name.vb: SetIKTarget(IKPart, Vector3, IKTargetFlags, Integer, Integer)
- uid: GTA.Ped.GetAllModels
  commentId: M:GTA.Ped.GetAllModels
  id: GetAllModels
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetAllModels()
  nameWithType: Ped.GetAllModels()
  fullName: GTA.Ped.GetAllModels()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PedHash[] GetAllModels()
    return:
      type: GTA.PedHash[]
    content.vb: Public Shared Function GetAllModels() As PedHash()
  overload: GTA.Ped.GetAllModels*
- uid: GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds
  commentId: M:GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds
  id: GetAllLoadedModelsAppropriateForAmbientPeds
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GetAllLoadedModelsAppropriateForAmbientPeds()
  nameWithType: Ped.GetAllLoadedModelsAppropriateForAmbientPeds()
  fullName: GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static PedHash[] GetAllLoadedModelsAppropriateForAmbientPeds()
    return:
      type: GTA.PedHash[]
    content.vb: Public Shared Function GetAllLoadedModelsAppropriateForAmbientPeds() As PedHash()
  overload: GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds*
- uid: GTA.Ped.PedType
  commentId: P:GTA.Ped.PedType
  id: PedType
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PedType
  nameWithType: Ped.PedType
  fullName: GTA.Ped.PedType
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedType PedType { get; }
    parameters: []
    return:
      type: GTA.PedType
    content.vb: Public ReadOnly Property PedType As PedType
  overload: GTA.Ped.PedType*
- uid: GTA.Ped.IsHuman
  commentId: P:GTA.Ped.IsHuman
  id: IsHuman
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsHuman
  nameWithType: Ped.IsHuman
  fullName: GTA.Ped.IsHuman
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsHuman { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHuman As Boolean
  overload: GTA.Ped.IsHuman*
- uid: GTA.Ped.IsCuffed
  commentId: P:GTA.Ped.IsCuffed
  id: IsCuffed
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsCuffed
  nameWithType: Ped.IsCuffed
  fullName: GTA.Ped.IsCuffed
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsCuffed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCuffed As Boolean
  overload: GTA.Ped.IsCuffed*
- uid: GTA.Ped.CanWearHelmet
  commentId: P:GTA.Ped.CanWearHelmet
  id: CanWearHelmet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanWearHelmet
  nameWithType: Ped.CanWearHelmet
  fullName: GTA.Ped.CanWearHelmet
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanWearHelmet { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property CanWearHelmet As Boolean
  overload: GTA.Ped.CanWearHelmet*
- uid: GTA.Ped.IsWearingHelmet
  commentId: P:GTA.Ped.IsWearingHelmet
  id: IsWearingHelmet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsWearingHelmet
  nameWithType: Ped.IsWearingHelmet
  fullName: GTA.Ped.IsWearingHelmet
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWearingHelmet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWearingHelmet As Boolean
  overload: GTA.Ped.IsWearingHelmet*
- uid: GTA.Ped.IsTakingOffHelmet
  commentId: P:GTA.Ped.IsTakingOffHelmet
  id: IsTakingOffHelmet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsTakingOffHelmet
  nameWithType: Ped.IsTakingOffHelmet
  fullName: GTA.Ped.IsTakingOffHelmet
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsTakingOffHelmet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTakingOffHelmet As Boolean
  overload: GTA.Ped.IsTakingOffHelmet*
- uid: GTA.Ped.Style
  commentId: P:GTA.Ped.Style
  id: Style
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: Ped.Style
  fullName: GTA.Ped.Style
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Style Style { get; }
    parameters: []
    return:
      type: GTA.Style
    content.vb: Public ReadOnly Property Style As Style
  overload: GTA.Ped.Style*
- uid: GTA.Ped.Gender
  commentId: P:GTA.Ped.Gender
  id: Gender
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Gender
  nameWithType: Ped.Gender
  fullName: GTA.Ped.Gender
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Gender Gender { get; }
    parameters: []
    return:
      type: GTA.Gender
    content.vb: Public ReadOnly Property Gender As Gender
  overload: GTA.Ped.Gender*
- uid: GTA.Ped.Sweat
  commentId: P:GTA.Ped.Sweat
  id: Sweat
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Sweat
  nameWithType: Ped.Sweat
  fullName: GTA.Ped.Sweat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float Sweat { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Sweat As Single
  overload: GTA.Ped.Sweat*
- uid: GTA.Ped.LowerWetnessHeight
  commentId: P:GTA.Ped.LowerWetnessHeight
  id: LowerWetnessHeight
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: LowerWetnessHeight
  nameWithType: Ped.LowerWetnessHeight
  fullName: GTA.Ped.LowerWetnessHeight
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float LowerWetnessHeight { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property LowerWetnessHeight As Single
  overload: GTA.Ped.LowerWetnessHeight*
- uid: GTA.Ped.UpperWetnessHeight
  commentId: P:GTA.Ped.UpperWetnessHeight
  id: UpperWetnessHeight
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: UpperWetnessHeight
  nameWithType: Ped.UpperWetnessHeight
  fullName: GTA.Ped.UpperWetnessHeight
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float UpperWetnessHeight { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property UpperWetnessHeight As Single
  overload: GTA.Ped.UpperWetnessHeight*
- uid: GTA.Ped.LowerWetnessLevel
  commentId: P:GTA.Ped.LowerWetnessLevel
  id: LowerWetnessLevel
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: LowerWetnessLevel
  nameWithType: Ped.LowerWetnessLevel
  fullName: GTA.Ped.LowerWetnessLevel
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float LowerWetnessLevel { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property LowerWetnessLevel As Single
  overload: GTA.Ped.LowerWetnessLevel*
- uid: GTA.Ped.UpperWetnessLevel
  commentId: P:GTA.Ped.UpperWetnessLevel
  id: UpperWetnessLevel
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: UpperWetnessLevel
  nameWithType: Ped.UpperWetnessLevel
  fullName: GTA.Ped.UpperWetnessLevel
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float UpperWetnessLevel { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property UpperWetnessLevel As Single
  overload: GTA.Ped.UpperWetnessLevel*
- uid: GTA.Ped.IsWet
  commentId: P:GTA.Ped.IsWet
  id: IsWet
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsWet
  nameWithType: Ped.IsWet
  fullName: GTA.Ped.IsWet
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWet As Boolean
  overload: GTA.Ped.IsWet*
- uid: GTA.Ped.Armor
  commentId: P:GTA.Ped.Armor
  id: Armor
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Armor
  nameWithType: Ped.Armor
  fullName: GTA.Ped.Armor
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Armor { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Armor As Integer
  overload: GTA.Ped.Armor*
- uid: GTA.Ped.ArmorFloat
  commentId: P:GTA.Ped.ArmorFloat
  id: ArmorFloat
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ArmorFloat
  nameWithType: Ped.ArmorFloat
  fullName: GTA.Ped.ArmorFloat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float ArmorFloat { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ArmorFloat As Single
  overload: GTA.Ped.ArmorFloat*
- uid: GTA.Ped.Money
  commentId: P:GTA.Ped.Money
  id: Money
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: Ped.Money
  fullName: GTA.Ped.Money
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Money { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Money As Integer
  overload: GTA.Ped.Money*
- uid: GTA.Ped.MaxHealth
  commentId: P:GTA.Ped.MaxHealth
  id: MaxHealth
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: MaxHealth
  nameWithType: Ped.MaxHealth
  fullName: GTA.Ped.MaxHealth
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int MaxHealth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property MaxHealth As Integer
  overridden: GTA.Entity.MaxHealth
  overload: GTA.Ped.MaxHealth*
- uid: GTA.Ped.IsPlayer
  commentId: P:GTA.Ped.IsPlayer
  id: IsPlayer
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPlayer
  nameWithType: Ped.IsPlayer
  fullName: GTA.Ped.IsPlayer
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPlayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPlayer As Boolean
  overload: GTA.Ped.IsPlayer*
- uid: GTA.Ped.PedConfigFlags
  commentId: P:GTA.Ped.PedConfigFlags
  id: PedConfigFlags
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PedConfigFlags
  nameWithType: Ped.PedConfigFlags
  fullName: GTA.Ped.PedConfigFlags
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedConfigFlags PedConfigFlags { get; }
    parameters: []
    return:
      type: GTA.PedConfigFlags
    content.vb: Public ReadOnly Property PedConfigFlags As PedConfigFlags
  overload: GTA.Ped.PedConfigFlags*
- uid: GTA.Ped.PedResetFlags
  commentId: P:GTA.Ped.PedResetFlags
  id: PedResetFlags
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PedResetFlags
  nameWithType: Ped.PedResetFlags
  fullName: GTA.Ped.PedResetFlags
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedResetFlags PedResetFlags { get; }
    parameters: []
    return:
      type: GTA.PedResetFlags
    content.vb: Public ReadOnly Property PedResetFlags As PedResetFlags
  overload: GTA.Ped.PedResetFlags*
- uid: GTA.Ped.Bones
  commentId: P:GTA.Ped.Bones
  id: Bones
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Bones
  nameWithType: Ped.Bones
  fullName: GTA.Ped.Bones
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedBoneCollection Bones { get; }
    parameters: []
    return:
      type: GTA.PedBoneCollection
    content.vb: Public ReadOnly Property Bones As PedBoneCollection
  overload: GTA.Ped.Bones*
- uid: GTA.Ped.IsIdle
  commentId: P:GTA.Ped.IsIdle
  id: IsIdle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsIdle
  nameWithType: Ped.IsIdle
  fullName: GTA.Ped.IsIdle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsIdle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIdle As Boolean
  overload: GTA.Ped.IsIdle*
- uid: GTA.Ped.IsProne
  commentId: P:GTA.Ped.IsProne
  id: IsProne
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsProne
  nameWithType: Ped.IsProne
  fullName: GTA.Ped.IsProne
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsProne { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProne As Boolean
  overload: GTA.Ped.IsProne*
- uid: GTA.Ped.IsGettingUp
  commentId: P:GTA.Ped.IsGettingUp
  id: IsGettingUp
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsGettingUp
  nameWithType: Ped.IsGettingUp
  fullName: GTA.Ped.IsGettingUp
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsGettingUp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGettingUp As Boolean
  overload: GTA.Ped.IsGettingUp*
- uid: GTA.Ped.IsDiving
  commentId: P:GTA.Ped.IsDiving
  id: IsDiving
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsDiving
  nameWithType: Ped.IsDiving
  fullName: GTA.Ped.IsDiving
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsDiving { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDiving As Boolean
  overload: GTA.Ped.IsDiving*
- uid: GTA.Ped.IsJumping
  commentId: P:GTA.Ped.IsJumping
  id: IsJumping
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsJumping
  nameWithType: Ped.IsJumping
  fullName: GTA.Ped.IsJumping
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsJumping { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJumping As Boolean
  overload: GTA.Ped.IsJumping*
- uid: GTA.Ped.IsFalling
  commentId: P:GTA.Ped.IsFalling
  id: IsFalling
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsFalling
  nameWithType: Ped.IsFalling
  fullName: GTA.Ped.IsFalling
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsFalling { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFalling As Boolean
  overload: GTA.Ped.IsFalling*
- uid: GTA.Ped.IsVaulting
  commentId: P:GTA.Ped.IsVaulting
  id: IsVaulting
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsVaulting
  nameWithType: Ped.IsVaulting
  fullName: GTA.Ped.IsVaulting
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsVaulting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVaulting As Boolean
  overload: GTA.Ped.IsVaulting*
- uid: GTA.Ped.IsClimbing
  commentId: P:GTA.Ped.IsClimbing
  id: IsClimbing
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsClimbing
  nameWithType: Ped.IsClimbing
  fullName: GTA.Ped.IsClimbing
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsClimbing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClimbing As Boolean
  overload: GTA.Ped.IsClimbing*
- uid: GTA.Ped.IsClimbingLadder
  commentId: P:GTA.Ped.IsClimbingLadder
  id: IsClimbingLadder
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsClimbingLadder
  nameWithType: Ped.IsClimbingLadder
  fullName: GTA.Ped.IsClimbingLadder
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsClimbingLadder { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClimbingLadder As Boolean
  overload: GTA.Ped.IsClimbingLadder*
- uid: GTA.Ped.IsWalking
  commentId: P:GTA.Ped.IsWalking
  id: IsWalking
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsWalking
  nameWithType: Ped.IsWalking
  fullName: GTA.Ped.IsWalking
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWalking { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWalking As Boolean
  overload: GTA.Ped.IsWalking*
- uid: GTA.Ped.IsRunning
  commentId: P:GTA.Ped.IsRunning
  id: IsRunning
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: Ped.IsRunning
  fullName: GTA.Ped.IsRunning
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRunning As Boolean
  overload: GTA.Ped.IsRunning*
- uid: GTA.Ped.IsSprinting
  commentId: P:GTA.Ped.IsSprinting
  id: IsSprinting
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsSprinting
  nameWithType: Ped.IsSprinting
  fullName: GTA.Ped.IsSprinting
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSprinting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSprinting As Boolean
  overload: GTA.Ped.IsSprinting*
- uid: GTA.Ped.IsStopped
  commentId: P:GTA.Ped.IsStopped
  id: IsStopped
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsStopped
  nameWithType: Ped.IsStopped
  fullName: GTA.Ped.IsStopped
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsStopped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStopped As Boolean
  overload: GTA.Ped.IsStopped*
- uid: GTA.Ped.IsSwimming
  commentId: P:GTA.Ped.IsSwimming
  id: IsSwimming
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsSwimming
  nameWithType: Ped.IsSwimming
  fullName: GTA.Ped.IsSwimming
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSwimming { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSwimming As Boolean
  overload: GTA.Ped.IsSwimming*
- uid: GTA.Ped.IsSwimmingUnderWater
  commentId: P:GTA.Ped.IsSwimmingUnderWater
  id: IsSwimmingUnderWater
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsSwimmingUnderWater
  nameWithType: Ped.IsSwimmingUnderWater
  fullName: GTA.Ped.IsSwimmingUnderWater
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsSwimmingUnderWater { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSwimmingUnderWater As Boolean
  overload: GTA.Ped.IsSwimmingUnderWater*
- uid: GTA.Ped.IsDucking
  commentId: P:GTA.Ped.IsDucking
  id: IsDucking
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsDucking
  nameWithType: Ped.IsDucking
  fullName: GTA.Ped.IsDucking
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsDucking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDucking As Boolean
  overload: GTA.Ped.IsDucking*
- uid: GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  commentId: P:GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  id: KeepTaskWhenMarkedAsNoLongerNeeded
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: KeepTaskWhenMarkedAsNoLongerNeeded
  nameWithType: Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  fullName: GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool KeepTaskWhenMarkedAsNoLongerNeeded { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property KeepTaskWhenMarkedAsNoLongerNeeded As Boolean
  overload: GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded*
- uid: GTA.Ped.Task
  commentId: P:GTA.Ped.Task
  id: Task
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: Ped.Task
  fullName: GTA.Ped.Task
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public TaskInvoker Task { get; }
    parameters: []
    return:
      type: GTA.TaskInvoker
    content.vb: Public ReadOnly Property Task As TaskInvoker
  overload: GTA.Ped.Task*
- uid: GTA.Ped.TaskSequenceProgress
  commentId: P:GTA.Ped.TaskSequenceProgress
  id: TaskSequenceProgress
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: TaskSequenceProgress
  nameWithType: Ped.TaskSequenceProgress
  fullName: GTA.Ped.TaskSequenceProgress
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int TaskSequenceProgress { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TaskSequenceProgress As Integer
  overload: GTA.Ped.TaskSequenceProgress*
- uid: GTA.Ped.CurrentScriptTaskNameHash
  commentId: P:GTA.Ped.CurrentScriptTaskNameHash
  id: CurrentScriptTaskNameHash
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CurrentScriptTaskNameHash
  nameWithType: Ped.CurrentScriptTaskNameHash
  fullName: GTA.Ped.CurrentScriptTaskNameHash
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public ScriptTaskNameHash CurrentScriptTaskNameHash { get; }
    parameters: []
    return:
      type: GTA.ScriptTaskNameHash
    content.vb: Public ReadOnly Property CurrentScriptTaskNameHash As ScriptTaskNameHash
  overload: GTA.Ped.CurrentScriptTaskNameHash*
- uid: GTA.Ped.CurrentScriptTaskStatus
  commentId: P:GTA.Ped.CurrentScriptTaskStatus
  id: CurrentScriptTaskStatus
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CurrentScriptTaskStatus
  nameWithType: Ped.CurrentScriptTaskStatus
  fullName: GTA.Ped.CurrentScriptTaskStatus
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public ScriptTaskStatus CurrentScriptTaskStatus { get; }
    parameters: []
    return:
      type: GTA.ScriptTaskStatus
    content.vb: Public ReadOnly Property CurrentScriptTaskStatus As ScriptTaskStatus
  overload: GTA.Ped.CurrentScriptTaskStatus*
- uid: GTA.Ped.DecisionMaker
  commentId: P:GTA.Ped.DecisionMaker
  id: DecisionMaker
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DecisionMaker
  nameWithType: Ped.DecisionMaker
  fullName: GTA.Ped.DecisionMaker
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public DecisionMaker DecisionMaker { get; set; }
    parameters: []
    return:
      type: GTA.DecisionMaker
    content.vb: Public Property DecisionMaker As DecisionMaker
  overload: GTA.Ped.DecisionMaker*
- uid: GTA.Ped.BlockPermanentEvents
  commentId: P:GTA.Ped.BlockPermanentEvents
  id: BlockPermanentEvents
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: BlockPermanentEvents
  nameWithType: Ped.BlockPermanentEvents
  fullName: GTA.Ped.BlockPermanentEvents
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool BlockPermanentEvents { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BlockPermanentEvents As Boolean
  overload: GTA.Ped.BlockPermanentEvents*
- uid: GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
  commentId: P:GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
  id: RandomPedsBlockingNonTempEventsThisFrame
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: RandomPedsBlockingNonTempEventsThisFrame
  nameWithType: Ped.RandomPedsBlockingNonTempEventsThisFrame
  fullName: GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool RandomPedsBlockingNonTempEventsThisFrame { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared WriteOnly Property RandomPedsBlockingNonTempEventsThisFrame As Boolean
  overload: GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame*
- uid: GTA.Ped.IsRagdoll
  commentId: P:GTA.Ped.IsRagdoll
  id: IsRagdoll
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsRagdoll
  nameWithType: Ped.IsRagdoll
  fullName: GTA.Ped.IsRagdoll
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsRagdoll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRagdoll As Boolean
  overload: GTA.Ped.IsRagdoll*
- uid: GTA.Ped.IsRunningRagdollTask
  commentId: P:GTA.Ped.IsRunningRagdollTask
  id: IsRunningRagdollTask
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsRunningRagdollTask
  nameWithType: Ped.IsRunningRagdollTask
  fullName: GTA.Ped.IsRunningRagdollTask
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsRunningRagdollTask { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRunningRagdollTask As Boolean
  overload: GTA.Ped.IsRunningRagdollTask*
- uid: GTA.Ped.CanRagdoll
  commentId: P:GTA.Ped.CanRagdoll
  id: CanRagdoll
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanRagdoll
  nameWithType: Ped.CanRagdoll
  fullName: GTA.Ped.CanRagdoll
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanRagdoll { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanRagdoll As Boolean
  overload: GTA.Ped.CanRagdoll*
- uid: GTA.Ped.Euphoria
  commentId: P:GTA.Ped.Euphoria
  id: Euphoria
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Euphoria
  nameWithType: Ped.Euphoria
  fullName: GTA.Ped.Euphoria
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Euphoria Euphoria { get; }
    parameters: []
    return:
      type: GTA.NaturalMotion.Euphoria
    content.vb: Public ReadOnly Property Euphoria As Euphoria
  overload: GTA.Ped.Euphoria*
- uid: GTA.Ped.Accuracy
  commentId: P:GTA.Ped.Accuracy
  id: Accuracy
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Accuracy
  nameWithType: Ped.Accuracy
  fullName: GTA.Ped.Accuracy
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Accuracy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Accuracy As Integer
  overload: GTA.Ped.Accuracy*
- uid: GTA.Ped.ShootRate
  commentId: P:GTA.Ped.ShootRate
  id: ShootRate
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ShootRate
  nameWithType: Ped.ShootRate
  fullName: GTA.Ped.ShootRate
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int ShootRate { set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public WriteOnly Property ShootRate As Integer
  overload: GTA.Ped.ShootRate*
- uid: GTA.Ped.FiringPattern
  commentId: P:GTA.Ped.FiringPattern
  id: FiringPattern
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: FiringPattern
  nameWithType: Ped.FiringPattern
  fullName: GTA.Ped.FiringPattern
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public FiringPattern FiringPattern { get; set; }
    parameters: []
    return:
      type: GTA.FiringPattern
    content.vb: Public Property FiringPattern As FiringPattern
  overload: GTA.Ped.FiringPattern*
- uid: GTA.Ped.CombatMovement
  commentId: P:GTA.Ped.CombatMovement
  id: CombatMovement
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CombatMovement
  nameWithType: Ped.CombatMovement
  fullName: GTA.Ped.CombatMovement
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public CombatMovement CombatMovement { get; set; }
    parameters: []
    return:
      type: GTA.CombatMovement
    content.vb: Public Property CombatMovement As CombatMovement
  overload: GTA.Ped.CombatMovement*
- uid: GTA.Ped.CombatAbility
  commentId: P:GTA.Ped.CombatAbility
  id: CombatAbility
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CombatAbility
  nameWithType: Ped.CombatAbility
  fullName: GTA.Ped.CombatAbility
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public CombatAbility CombatAbility { set; }
    parameters: []
    return:
      type: GTA.CombatAbility
    content.vb: Public WriteOnly Property CombatAbility As CombatAbility
  overload: GTA.Ped.CombatAbility*
- uid: GTA.Ped.CombatRange
  commentId: P:GTA.Ped.CombatRange
  id: CombatRange
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CombatRange
  nameWithType: Ped.CombatRange
  fullName: GTA.Ped.CombatRange
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public CombatRange CombatRange { get; set; }
    parameters: []
    return:
      type: GTA.CombatRange
    content.vb: Public Property CombatRange As CombatRange
  overload: GTA.Ped.CombatRange*
- uid: GTA.Ped.TargetLossResponse
  commentId: P:GTA.Ped.TargetLossResponse
  id: TargetLossResponse
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: TargetLossResponse
  nameWithType: Ped.TargetLossResponse
  fullName: GTA.Ped.TargetLossResponse
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public TargetLossResponse TargetLossResponse { set; }
    parameters: []
    return:
      type: GTA.TargetLossResponse
    content.vb: Public WriteOnly Property TargetLossResponse As TargetLossResponse
  overload: GTA.Ped.TargetLossResponse*
- uid: GTA.Ped.Weapons
  commentId: P:GTA.Ped.Weapons
  id: Weapons
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Weapons
  nameWithType: Ped.Weapons
  fullName: GTA.Ped.Weapons
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public WeaponCollection Weapons { get; }
    parameters: []
    return:
      type: GTA.WeaponCollection
    content.vb: Public ReadOnly Property Weapons As WeaponCollection
  overload: GTA.Ped.Weapons*
- uid: GTA.Ped.VehicleWeapon
  commentId: P:GTA.Ped.VehicleWeapon
  id: VehicleWeapon
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VehicleWeapon
  nameWithType: Ped.VehicleWeapon
  fullName: GTA.Ped.VehicleWeapon
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public VehicleWeaponHash VehicleWeapon { get; set; }
    parameters: []
    return:
      type: GTA.VehicleWeaponHash
    content.vb: Public Property VehicleWeapon As VehicleWeaponHash
  overload: GTA.Ped.VehicleWeapon*
- uid: GTA.Ped.CanSwitchWeapons
  commentId: P:GTA.Ped.CanSwitchWeapons
  id: CanSwitchWeapons
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanSwitchWeapons
  nameWithType: Ped.CanSwitchWeapons
  fullName: GTA.Ped.CanSwitchWeapons
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanSwitchWeapons { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property CanSwitchWeapons As Boolean
  overload: GTA.Ped.CanSwitchWeapons*
- uid: GTA.Ped.IsOnBike
  commentId: P:GTA.Ped.IsOnBike
  id: IsOnBike
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsOnBike
  nameWithType: Ped.IsOnBike
  fullName: GTA.Ped.IsOnBike
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsOnBike { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnBike As Boolean
  overload: GTA.Ped.IsOnBike*
- uid: GTA.Ped.IsOnFoot
  commentId: P:GTA.Ped.IsOnFoot
  id: IsOnFoot
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsOnFoot
  nameWithType: Ped.IsOnFoot
  fullName: GTA.Ped.IsOnFoot
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsOnFoot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnFoot As Boolean
  overload: GTA.Ped.IsOnFoot*
- uid: GTA.Ped.IsInSub
  commentId: P:GTA.Ped.IsInSub
  id: IsInSub
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInSub
  nameWithType: Ped.IsInSub
  fullName: GTA.Ped.IsInSub
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInSub { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInSub As Boolean
  overload: GTA.Ped.IsInSub*
- uid: GTA.Ped.IsInTaxi
  commentId: P:GTA.Ped.IsInTaxi
  id: IsInTaxi
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInTaxi
  nameWithType: Ped.IsInTaxi
  fullName: GTA.Ped.IsInTaxi
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInTaxi { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInTaxi As Boolean
  overload: GTA.Ped.IsInTaxi*
- uid: GTA.Ped.IsInTrain
  commentId: P:GTA.Ped.IsInTrain
  id: IsInTrain
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInTrain
  nameWithType: Ped.IsInTrain
  fullName: GTA.Ped.IsInTrain
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInTrain { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInTrain As Boolean
  overload: GTA.Ped.IsInTrain*
- uid: GTA.Ped.IsInHeli
  commentId: P:GTA.Ped.IsInHeli
  id: IsInHeli
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInHeli
  nameWithType: Ped.IsInHeli
  fullName: GTA.Ped.IsInHeli
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInHeli { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInHeli As Boolean
  overload: GTA.Ped.IsInHeli*
- uid: GTA.Ped.IsInPlane
  commentId: P:GTA.Ped.IsInPlane
  id: IsInPlane
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInPlane
  nameWithType: Ped.IsInPlane
  fullName: GTA.Ped.IsInPlane
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInPlane { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInPlane As Boolean
  overload: GTA.Ped.IsInPlane*
- uid: GTA.Ped.IsInFlyingVehicle
  commentId: P:GTA.Ped.IsInFlyingVehicle
  id: IsInFlyingVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInFlyingVehicle
  nameWithType: Ped.IsInFlyingVehicle
  fullName: GTA.Ped.IsInFlyingVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInFlyingVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInFlyingVehicle As Boolean
  overload: GTA.Ped.IsInFlyingVehicle*
- uid: GTA.Ped.IsInBoat
  commentId: P:GTA.Ped.IsInBoat
  id: IsInBoat
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInBoat
  nameWithType: Ped.IsInBoat
  fullName: GTA.Ped.IsInBoat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInBoat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInBoat As Boolean
  overload: GTA.Ped.IsInBoat*
- uid: GTA.Ped.IsInPoliceVehicle
  commentId: P:GTA.Ped.IsInPoliceVehicle
  id: IsInPoliceVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInPoliceVehicle
  nameWithType: Ped.IsInPoliceVehicle
  fullName: GTA.Ped.IsInPoliceVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInPoliceVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInPoliceVehicle As Boolean
  overload: GTA.Ped.IsInPoliceVehicle*
- uid: GTA.Ped.IsEnteringVehicle
  commentId: P:GTA.Ped.IsEnteringVehicle
  id: IsEnteringVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsEnteringVehicle
  nameWithType: Ped.IsEnteringVehicle
  fullName: GTA.Ped.IsEnteringVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsEnteringVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEnteringVehicle As Boolean
  overload: GTA.Ped.IsEnteringVehicle*
- uid: GTA.Ped.IsExitingVehicle
  commentId: P:GTA.Ped.IsExitingVehicle
  id: IsExitingVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsExitingVehicle
  nameWithType: Ped.IsExitingVehicle
  fullName: GTA.Ped.IsExitingVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsExitingVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExitingVehicle As Boolean
  overload: GTA.Ped.IsExitingVehicle*
- uid: GTA.Ped.IsJumpingOutOfVehicle
  commentId: P:GTA.Ped.IsJumpingOutOfVehicle
  id: IsJumpingOutOfVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsJumpingOutOfVehicle
  nameWithType: Ped.IsJumpingOutOfVehicle
  fullName: GTA.Ped.IsJumpingOutOfVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsJumpingOutOfVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJumpingOutOfVehicle As Boolean
  overload: GTA.Ped.IsJumpingOutOfVehicle*
- uid: GTA.Ped.IsTryingToEnterALockedVehicle
  commentId: P:GTA.Ped.IsTryingToEnterALockedVehicle
  id: IsTryingToEnterALockedVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsTryingToEnterALockedVehicle
  nameWithType: Ped.IsTryingToEnterALockedVehicle
  fullName: GTA.Ped.IsTryingToEnterALockedVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsTryingToEnterALockedVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTryingToEnterALockedVehicle As Boolean
  overload: GTA.Ped.IsTryingToEnterALockedVehicle*
- uid: GTA.Ped.CanBeDraggedOutOfVehicle
  commentId: P:GTA.Ped.CanBeDraggedOutOfVehicle
  id: CanBeDraggedOutOfVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanBeDraggedOutOfVehicle
  nameWithType: Ped.CanBeDraggedOutOfVehicle
  fullName: GTA.Ped.CanBeDraggedOutOfVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanBeDraggedOutOfVehicle { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property CanBeDraggedOutOfVehicle As Boolean
  overload: GTA.Ped.CanBeDraggedOutOfVehicle*
- uid: GTA.Ped.KnockOffVehicleType
  commentId: P:GTA.Ped.KnockOffVehicleType
  id: KnockOffVehicleType
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: KnockOffVehicleType
  nameWithType: Ped.KnockOffVehicleType
  fullName: GTA.Ped.KnockOffVehicleType
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public KnockOffVehicleType KnockOffVehicleType { get; set; }
    parameters: []
    return:
      type: GTA.KnockOffVehicleType
    content.vb: Public Property KnockOffVehicleType As KnockOffVehicleType
  overload: GTA.Ped.KnockOffVehicleType*
- uid: GTA.Ped.CanBeKnockedOffVehicle
  commentId: P:GTA.Ped.CanBeKnockedOffVehicle
  id: CanBeKnockedOffVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanBeKnockedOffVehicle
  nameWithType: Ped.CanBeKnockedOffVehicle
  fullName: GTA.Ped.CanBeKnockedOffVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanBeKnockedOffVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanBeKnockedOffVehicle As Boolean
  overload: GTA.Ped.CanBeKnockedOffVehicle*
- uid: GTA.Ped.CanFlyThroughWindscreen
  commentId: P:GTA.Ped.CanFlyThroughWindscreen
  id: CanFlyThroughWindscreen
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanFlyThroughWindscreen
  nameWithType: Ped.CanFlyThroughWindscreen
  fullName: GTA.Ped.CanFlyThroughWindscreen
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanFlyThroughWindscreen { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanFlyThroughWindscreen As Boolean
  overload: GTA.Ped.CanFlyThroughWindscreen*
- uid: GTA.Ped.LastVehicle
  commentId: P:GTA.Ped.LastVehicle
  id: LastVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: LastVehicle
  nameWithType: Ped.LastVehicle
  fullName: GTA.Ped.LastVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vehicle LastVehicle { get; }
    parameters: []
    return:
      type: GTA.Vehicle
    content.vb: Public ReadOnly Property LastVehicle As Vehicle
  overload: GTA.Ped.LastVehicle*
- uid: GTA.Ped.CurrentVehicle
  commentId: P:GTA.Ped.CurrentVehicle
  id: CurrentVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CurrentVehicle
  nameWithType: Ped.CurrentVehicle
  fullName: GTA.Ped.CurrentVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vehicle CurrentVehicle { get; }
    parameters: []
    return:
      type: GTA.Vehicle
    content.vb: Public ReadOnly Property CurrentVehicle As Vehicle
  overload: GTA.Ped.CurrentVehicle*
- uid: GTA.Ped.VehicleTryingToEnter
  commentId: P:GTA.Ped.VehicleTryingToEnter
  id: VehicleTryingToEnter
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VehicleTryingToEnter
  nameWithType: Ped.VehicleTryingToEnter
  fullName: GTA.Ped.VehicleTryingToEnter
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vehicle VehicleTryingToEnter { get; }
    parameters: []
    return:
      type: GTA.Vehicle
    content.vb: Public ReadOnly Property VehicleTryingToEnter As Vehicle
  overload: GTA.Ped.VehicleTryingToEnter*
- uid: GTA.Ped.GroundEntity
  commentId: P:GTA.Ped.GroundEntity
  id: GroundEntity
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: GroundEntity
  nameWithType: Ped.GroundEntity
  fullName: GTA.Ped.GroundEntity
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Entity GroundEntity { get; }
    parameters: []
    return:
      type: GTA.Entity
    content.vb: Public ReadOnly Property GroundEntity As Entity
  overload: GTA.Ped.GroundEntity*
- uid: GTA.Ped.SeatIndex
  commentId: P:GTA.Ped.SeatIndex
  id: SeatIndex
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SeatIndex
  nameWithType: Ped.SeatIndex
  fullName: GTA.Ped.SeatIndex
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public VehicleSeat SeatIndex { get; }
    parameters: []
    return:
      type: GTA.VehicleSeat
    content.vb: Public ReadOnly Property SeatIndex As VehicleSeat
  overload: GTA.Ped.SeatIndex*
- uid: GTA.Ped.DrivingSpeed
  commentId: P:GTA.Ped.DrivingSpeed
  id: DrivingSpeed
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DrivingSpeed
  nameWithType: Ped.DrivingSpeed
  fullName: GTA.Ped.DrivingSpeed
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float DrivingSpeed { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public WriteOnly Property DrivingSpeed As Single
  overload: GTA.Ped.DrivingSpeed*
- uid: GTA.Ped.MaxDrivingSpeed
  commentId: P:GTA.Ped.MaxDrivingSpeed
  id: MaxDrivingSpeed
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: MaxDrivingSpeed
  nameWithType: Ped.MaxDrivingSpeed
  fullName: GTA.Ped.MaxDrivingSpeed
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float MaxDrivingSpeed { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public WriteOnly Property MaxDrivingSpeed As Single
  overload: GTA.Ped.MaxDrivingSpeed*
- uid: GTA.Ped.VehicleDrivingFlags
  commentId: P:GTA.Ped.VehicleDrivingFlags
  id: VehicleDrivingFlags
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VehicleDrivingFlags
  nameWithType: Ped.VehicleDrivingFlags
  fullName: GTA.Ped.VehicleDrivingFlags
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public VehicleDrivingFlags VehicleDrivingFlags { set; }
    parameters: []
    return:
      type: GTA.VehicleDrivingFlags
    content.vb: Public WriteOnly Property VehicleDrivingFlags As VehicleDrivingFlags
  overload: GTA.Ped.VehicleDrivingFlags*
- uid: GTA.Ped.DrivingAggressiveness
  commentId: P:GTA.Ped.DrivingAggressiveness
  id: DrivingAggressiveness
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DrivingAggressiveness
  nameWithType: Ped.DrivingAggressiveness
  fullName: GTA.Ped.DrivingAggressiveness
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float DrivingAggressiveness { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public WriteOnly Property DrivingAggressiveness As Single
  overload: GTA.Ped.DrivingAggressiveness*
- uid: GTA.Ped.IsJacking
  commentId: P:GTA.Ped.IsJacking
  id: IsJacking
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsJacking
  nameWithType: Ped.IsJacking
  fullName: GTA.Ped.IsJacking
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsJacking { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJacking As Boolean
  overload: GTA.Ped.IsJacking*
- uid: GTA.Ped.IsBeingJacked
  commentId: P:GTA.Ped.IsBeingJacked
  id: IsBeingJacked
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsBeingJacked
  nameWithType: Ped.IsBeingJacked
  fullName: GTA.Ped.IsBeingJacked
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsBeingJacked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBeingJacked As Boolean
  overload: GTA.Ped.IsBeingJacked*
- uid: GTA.Ped.StaysInVehicleWhenJacked
  commentId: P:GTA.Ped.StaysInVehicleWhenJacked
  id: StaysInVehicleWhenJacked
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: StaysInVehicleWhenJacked
  nameWithType: Ped.StaysInVehicleWhenJacked
  fullName: GTA.Ped.StaysInVehicleWhenJacked
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool StaysInVehicleWhenJacked { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property StaysInVehicleWhenJacked As Boolean
  overload: GTA.Ped.StaysInVehicleWhenJacked*
- uid: GTA.Ped.Jacker
  commentId: P:GTA.Ped.Jacker
  id: Jacker
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Jacker
  nameWithType: Ped.Jacker
  fullName: GTA.Ped.Jacker
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped Jacker { get; }
    parameters: []
    return:
      type: GTA.Ped
    content.vb: Public ReadOnly Property Jacker As Ped
  overload: GTA.Ped.Jacker*
- uid: GTA.Ped.JackTarget
  commentId: P:GTA.Ped.JackTarget
  id: JackTarget
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: JackTarget
  nameWithType: Ped.JackTarget
  fullName: GTA.Ped.JackTarget
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped JackTarget { get; }
    parameters: []
    return:
      type: GTA.Ped
    content.vb: Public ReadOnly Property JackTarget As Ped
  overload: GTA.Ped.JackTarget*
- uid: GTA.Ped.IsInParachuteFreeFall
  commentId: P:GTA.Ped.IsInParachuteFreeFall
  id: IsInParachuteFreeFall
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInParachuteFreeFall
  nameWithType: Ped.IsInParachuteFreeFall
  fullName: GTA.Ped.IsInParachuteFreeFall
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInParachuteFreeFall { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInParachuteFreeFall As Boolean
  overload: GTA.Ped.IsInParachuteFreeFall*
- uid: GTA.Ped.ParachuteState
  commentId: P:GTA.Ped.ParachuteState
  id: ParachuteState
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ParachuteState
  nameWithType: Ped.ParachuteState
  fullName: GTA.Ped.ParachuteState
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public ParachuteState ParachuteState { get; }
    parameters: []
    return:
      type: GTA.ParachuteState
    content.vb: Public ReadOnly Property ParachuteState As ParachuteState
  overload: GTA.Ped.ParachuteState*
- uid: GTA.Ped.ParachuteLandingType
  commentId: P:GTA.Ped.ParachuteLandingType
  id: ParachuteLandingType
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: ParachuteLandingType
  nameWithType: Ped.ParachuteLandingType
  fullName: GTA.Ped.ParachuteLandingType
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public ParachuteLandingType ParachuteLandingType { get; }
    parameters: []
    return:
      type: GTA.ParachuteLandingType
    content.vb: Public ReadOnly Property ParachuteLandingType As ParachuteLandingType
  overload: GTA.Ped.ParachuteLandingType*
- uid: GTA.Ped.IsEnemy
  commentId: P:GTA.Ped.IsEnemy
  id: IsEnemy
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsEnemy
  nameWithType: Ped.IsEnemy
  fullName: GTA.Ped.IsEnemy
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsEnemy { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property IsEnemy As Boolean
  overload: GTA.Ped.IsEnemy*
- uid: GTA.Ped.IsPriorityTargetForEnemies
  commentId: P:GTA.Ped.IsPriorityTargetForEnemies
  id: IsPriorityTargetForEnemies
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPriorityTargetForEnemies
  nameWithType: Ped.IsPriorityTargetForEnemies
  fullName: GTA.Ped.IsPriorityTargetForEnemies
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPriorityTargetForEnemies { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property IsPriorityTargetForEnemies As Boolean
  overload: GTA.Ped.IsPriorityTargetForEnemies*
- uid: GTA.Ped.IsFleeing
  commentId: P:GTA.Ped.IsFleeing
  id: IsFleeing
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsFleeing
  nameWithType: Ped.IsFleeing
  fullName: GTA.Ped.IsFleeing
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsFleeing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFleeing As Boolean
  overload: GTA.Ped.IsFleeing*
- uid: GTA.Ped.IsInjured
  commentId: P:GTA.Ped.IsInjured
  id: IsInjured
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInjured
  nameWithType: Ped.IsInjured
  fullName: GTA.Ped.IsInjured
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInjured { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInjured As Boolean
  overload: GTA.Ped.IsInjured*
- uid: GTA.Ped.IsInStealthMode
  commentId: P:GTA.Ped.IsInStealthMode
  id: IsInStealthMode
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInStealthMode
  nameWithType: Ped.IsInStealthMode
  fullName: GTA.Ped.IsInStealthMode
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInStealthMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInStealthMode As Boolean
  overload: GTA.Ped.IsInStealthMode*
- uid: GTA.Ped.IsInCombat
  commentId: P:GTA.Ped.IsInCombat
  id: IsInCombat
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInCombat
  nameWithType: Ped.IsInCombat
  fullName: GTA.Ped.IsInCombat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInCombat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInCombat As Boolean
  overload: GTA.Ped.IsInCombat*
- uid: GTA.Ped.IsInMeleeCombat
  commentId: P:GTA.Ped.IsInMeleeCombat
  id: IsInMeleeCombat
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInMeleeCombat
  nameWithType: Ped.IsInMeleeCombat
  fullName: GTA.Ped.IsInMeleeCombat
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInMeleeCombat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInMeleeCombat As Boolean
  overload: GTA.Ped.IsInMeleeCombat*
- uid: GTA.Ped.IsAiming
  commentId: P:GTA.Ped.IsAiming
  id: IsAiming
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsAiming
  nameWithType: Ped.IsAiming
  fullName: GTA.Ped.IsAiming
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsAiming { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAiming As Boolean
  overload: GTA.Ped.IsAiming*
- uid: GTA.Ped.IsPlantingBomb
  commentId: P:GTA.Ped.IsPlantingBomb
  id: IsPlantingBomb
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPlantingBomb
  nameWithType: Ped.IsPlantingBomb
  fullName: GTA.Ped.IsPlantingBomb
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPlantingBomb { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPlantingBomb As Boolean
  overload: GTA.Ped.IsPlantingBomb*
- uid: GTA.Ped.IsShooting
  commentId: P:GTA.Ped.IsShooting
  id: IsShooting
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsShooting
  nameWithType: Ped.IsShooting
  fullName: GTA.Ped.IsShooting
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsShooting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsShooting As Boolean
  overload: GTA.Ped.IsShooting*
- uid: GTA.Ped.IsReloading
  commentId: P:GTA.Ped.IsReloading
  id: IsReloading
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsReloading
  nameWithType: Ped.IsReloading
  fullName: GTA.Ped.IsReloading
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsReloading { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReloading As Boolean
  overload: GTA.Ped.IsReloading*
- uid: GTA.Ped.IsDoingDriveBy
  commentId: P:GTA.Ped.IsDoingDriveBy
  id: IsDoingDriveBy
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsDoingDriveBy
  nameWithType: Ped.IsDoingDriveBy
  fullName: GTA.Ped.IsDoingDriveBy
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsDoingDriveBy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDoingDriveBy As Boolean
  overload: GTA.Ped.IsDoingDriveBy*
- uid: GTA.Ped.IsGoingIntoCover
  commentId: P:GTA.Ped.IsGoingIntoCover
  id: IsGoingIntoCover
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsGoingIntoCover
  nameWithType: Ped.IsGoingIntoCover
  fullName: GTA.Ped.IsGoingIntoCover
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsGoingIntoCover { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGoingIntoCover As Boolean
  overload: GTA.Ped.IsGoingIntoCover*
- uid: GTA.Ped.IsAimingFromCover
  commentId: P:GTA.Ped.IsAimingFromCover
  id: IsAimingFromCover
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsAimingFromCover
  nameWithType: Ped.IsAimingFromCover
  fullName: GTA.Ped.IsAimingFromCover
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsAimingFromCover { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAimingFromCover As Boolean
  overload: GTA.Ped.IsAimingFromCover*
- uid: GTA.Ped.IsBeingStunned
  commentId: P:GTA.Ped.IsBeingStunned
  id: IsBeingStunned
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsBeingStunned
  nameWithType: Ped.IsBeingStunned
  fullName: GTA.Ped.IsBeingStunned
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsBeingStunned { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBeingStunned As Boolean
  overload: GTA.Ped.IsBeingStunned*
- uid: GTA.Ped.IsInCover
  commentId: P:GTA.Ped.IsInCover
  id: IsInCover
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInCover
  nameWithType: Ped.IsInCover
  fullName: GTA.Ped.IsInCover
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInCover { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInCover As Boolean
  overload: GTA.Ped.IsInCover*
- uid: GTA.Ped.IsInCoverFacingLeft
  commentId: P:GTA.Ped.IsInCoverFacingLeft
  id: IsInCoverFacingLeft
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInCoverFacingLeft
  nameWithType: Ped.IsInCoverFacingLeft
  fullName: GTA.Ped.IsInCoverFacingLeft
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInCoverFacingLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInCoverFacingLeft As Boolean
  overload: GTA.Ped.IsInCoverFacingLeft*
- uid: GTA.Ped.CanBeTargetted
  commentId: P:GTA.Ped.CanBeTargetted
  id: CanBeTargetted
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanBeTargetted
  nameWithType: Ped.CanBeTargetted
  fullName: GTA.Ped.CanBeTargetted
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanBeTargetted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanBeTargetted As Boolean
  overload: GTA.Ped.CanBeTargetted*
- uid: GTA.Ped.CanBeShotInVehicle
  commentId: P:GTA.Ped.CanBeShotInVehicle
  id: CanBeShotInVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanBeShotInVehicle
  nameWithType: Ped.CanBeShotInVehicle
  fullName: GTA.Ped.CanBeShotInVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanBeShotInVehicle { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property CanBeShotInVehicle As Boolean
  overload: GTA.Ped.CanBeShotInVehicle*
- uid: GTA.Ped.WasKilledByStealth
  commentId: P:GTA.Ped.WasKilledByStealth
  id: WasKilledByStealth
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: WasKilledByStealth
  nameWithType: Ped.WasKilledByStealth
  fullName: GTA.Ped.WasKilledByStealth
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool WasKilledByStealth { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WasKilledByStealth As Boolean
  overload: GTA.Ped.WasKilledByStealth*
- uid: GTA.Ped.WasKilledByTakedown
  commentId: P:GTA.Ped.WasKilledByTakedown
  id: WasKilledByTakedown
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: WasKilledByTakedown
  nameWithType: Ped.WasKilledByTakedown
  fullName: GTA.Ped.WasKilledByTakedown
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool WasKilledByTakedown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WasKilledByTakedown As Boolean
  overload: GTA.Ped.WasKilledByTakedown*
- uid: GTA.Ped.CombatTarget
  commentId: P:GTA.Ped.CombatTarget
  id: CombatTarget
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CombatTarget
  nameWithType: Ped.CombatTarget
  fullName: GTA.Ped.CombatTarget
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped CombatTarget { get; }
    parameters: []
    return:
      type: GTA.Ped
    content.vb: Public ReadOnly Property CombatTarget As Ped
  overload: GTA.Ped.CombatTarget*
- uid: GTA.Ped.IsPerformingMeleeAction
  commentId: P:GTA.Ped.IsPerformingMeleeAction
  id: IsPerformingMeleeAction
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPerformingMeleeAction
  nameWithType: Ped.IsPerformingMeleeAction
  fullName: GTA.Ped.IsPerformingMeleeAction
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPerformingMeleeAction { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPerformingMeleeAction As Boolean
  overload: GTA.Ped.IsPerformingMeleeAction*
- uid: GTA.Ped.IsPerformingStealthKill
  commentId: P:GTA.Ped.IsPerformingStealthKill
  id: IsPerformingStealthKill
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPerformingStealthKill
  nameWithType: Ped.IsPerformingStealthKill
  fullName: GTA.Ped.IsPerformingStealthKill
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPerformingStealthKill { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPerformingStealthKill As Boolean
  overload: GTA.Ped.IsPerformingStealthKill*
- uid: GTA.Ped.IsPerformingCounterAttack
  commentId: P:GTA.Ped.IsPerformingCounterAttack
  id: IsPerformingCounterAttack
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPerformingCounterAttack
  nameWithType: Ped.IsPerformingCounterAttack
  fullName: GTA.Ped.IsPerformingCounterAttack
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPerformingCounterAttack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPerformingCounterAttack As Boolean
  overload: GTA.Ped.IsPerformingCounterAttack*
- uid: GTA.Ped.IsBeingStealthKilled
  commentId: P:GTA.Ped.IsBeingStealthKilled
  id: IsBeingStealthKilled
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsBeingStealthKilled
  nameWithType: Ped.IsBeingStealthKilled
  fullName: GTA.Ped.IsBeingStealthKilled
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsBeingStealthKilled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsBeingStealthKilled As Boolean
  overload: GTA.Ped.IsBeingStealthKilled*
- uid: GTA.Ped.MeleeTarget
  commentId: P:GTA.Ped.MeleeTarget
  id: MeleeTarget
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: MeleeTarget
  nameWithType: Ped.MeleeTarget
  fullName: GTA.Ped.MeleeTarget
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Ped MeleeTarget { get; }
    parameters: []
    return:
      type: GTA.Ped
    content.vb: Public ReadOnly Property MeleeTarget As Ped
  overload: GTA.Ped.MeleeTarget*
- uid: GTA.Ped.Killer
  commentId: P:GTA.Ped.Killer
  id: Killer
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Killer
  nameWithType: Ped.Killer
  fullName: GTA.Ped.Killer
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Entity Killer { get; }
    parameters: []
    return:
      type: GTA.Entity
    content.vb: Public ReadOnly Property Killer As Entity
  overload: GTA.Ped.Killer*
- uid: GTA.Ped.CauseOfDeath
  commentId: P:GTA.Ped.CauseOfDeath
  id: CauseOfDeath
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CauseOfDeath
  nameWithType: Ped.CauseOfDeath
  fullName: GTA.Ped.CauseOfDeath
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public WeaponHash CauseOfDeath { get; }
    parameters: []
    return:
      type: GTA.WeaponHash
    content.vb: Public ReadOnly Property CauseOfDeath As WeaponHash
  overload: GTA.Ped.CauseOfDeath*
- uid: GTA.Ped.TimeOfDeath
  commentId: P:GTA.Ped.TimeOfDeath
  id: TimeOfDeath
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: TimeOfDeath
  nameWithType: Ped.TimeOfDeath
  fullName: GTA.Ped.TimeOfDeath
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int TimeOfDeath { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimeOfDeath As Integer
  overload: GTA.Ped.TimeOfDeath*
- uid: GTA.Ped.CanWrithe
  commentId: P:GTA.Ped.CanWrithe
  id: CanWrithe
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanWrithe
  nameWithType: Ped.CanWrithe
  fullName: GTA.Ped.CanWrithe
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanWrithe { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanWrithe As Boolean
  overload: GTA.Ped.CanWrithe*
- uid: GTA.Ped.CanSufferCriticalHits
  commentId: P:GTA.Ped.CanSufferCriticalHits
  id: CanSufferCriticalHits
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanSufferCriticalHits
  nameWithType: Ped.CanSufferCriticalHits
  fullName: GTA.Ped.CanSufferCriticalHits
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanSufferCriticalHits { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CanSufferCriticalHits As Boolean
  overload: GTA.Ped.CanSufferCriticalHits*
- uid: GTA.Ped.DiesOnLowHealth
  commentId: P:GTA.Ped.DiesOnLowHealth
  id: DiesOnLowHealth
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DiesOnLowHealth
  nameWithType: Ped.DiesOnLowHealth
  fullName: GTA.Ped.DiesOnLowHealth
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool DiesOnLowHealth { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property DiesOnLowHealth As Boolean
  overload: GTA.Ped.DiesOnLowHealth*
- uid: GTA.Ped.DiesInstantlyInWater
  commentId: P:GTA.Ped.DiesInstantlyInWater
  id: DiesInstantlyInWater
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DiesInstantlyInWater
  nameWithType: Ped.DiesInstantlyInWater
  fullName: GTA.Ped.DiesInstantlyInWater
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool DiesInstantlyInWater { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property DiesInstantlyInWater As Boolean
  overload: GTA.Ped.DiesInstantlyInWater*
- uid: GTA.Ped.DrownsInWater
  commentId: P:GTA.Ped.DrownsInWater
  id: DrownsInWater
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DrownsInWater
  nameWithType: Ped.DrownsInWater
  fullName: GTA.Ped.DrownsInWater
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool DrownsInWater { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property DrownsInWater As Boolean
  overload: GTA.Ped.DrownsInWater*
- uid: GTA.Ped.DrownsInSinkingVehicle
  commentId: P:GTA.Ped.DrownsInSinkingVehicle
  id: DrownsInSinkingVehicle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DrownsInSinkingVehicle
  nameWithType: Ped.DrownsInSinkingVehicle
  fullName: GTA.Ped.DrownsInSinkingVehicle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool DrownsInSinkingVehicle { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property DrownsInSinkingVehicle As Boolean
  overload: GTA.Ped.DrownsInSinkingVehicle*
- uid: GTA.Ped.DropsEquippedWeaponOnDeath
  commentId: P:GTA.Ped.DropsEquippedWeaponOnDeath
  id: DropsEquippedWeaponOnDeath
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: DropsEquippedWeaponOnDeath
  nameWithType: Ped.DropsEquippedWeaponOnDeath
  fullName: GTA.Ped.DropsEquippedWeaponOnDeath
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool DropsEquippedWeaponOnDeath { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DropsEquippedWeaponOnDeath As Boolean
  overload: GTA.Ped.DropsEquippedWeaponOnDeath*
- uid: GTA.Ped.InjuryHealthThreshold
  commentId: P:GTA.Ped.InjuryHealthThreshold
  id: InjuryHealthThreshold
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: InjuryHealthThreshold
  nameWithType: Ped.InjuryHealthThreshold
  fullName: GTA.Ped.InjuryHealthThreshold
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float InjuryHealthThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property InjuryHealthThreshold As Single
  overload: GTA.Ped.InjuryHealthThreshold*
- uid: GTA.Ped.FatalInjuryHealthThreshold
  commentId: P:GTA.Ped.FatalInjuryHealthThreshold
  id: FatalInjuryHealthThreshold
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: FatalInjuryHealthThreshold
  nameWithType: Ped.FatalInjuryHealthThreshold
  fullName: GTA.Ped.FatalInjuryHealthThreshold
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float FatalInjuryHealthThreshold { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FatalInjuryHealthThreshold As Single
  overload: GTA.Ped.FatalInjuryHealthThreshold*
- uid: GTA.Ped.LastWeaponImpactPosition
  commentId: P:GTA.Ped.LastWeaponImpactPosition
  id: LastWeaponImpactPosition
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: LastWeaponImpactPosition
  nameWithType: Ped.LastWeaponImpactPosition
  fullName: GTA.Ped.LastWeaponImpactPosition
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 LastWeaponImpactPosition { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property LastWeaponImpactPosition As Vector3
  overload: GTA.Ped.LastWeaponImpactPosition*
- uid: GTA.Ped.RelationshipGroup
  commentId: P:GTA.Ped.RelationshipGroup
  id: RelationshipGroup
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: RelationshipGroup
  nameWithType: Ped.RelationshipGroup
  fullName: GTA.Ped.RelationshipGroup
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public RelationshipGroup RelationshipGroup { get; set; }
    parameters: []
    return:
      type: GTA.RelationshipGroup
    content.vb: Public Property RelationshipGroup As RelationshipGroup
  overload: GTA.Ped.RelationshipGroup*
- uid: GTA.Ped.SeeingRange
  commentId: P:GTA.Ped.SeeingRange
  id: SeeingRange
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: SeeingRange
  nameWithType: Ped.SeeingRange
  fullName: GTA.Ped.SeeingRange
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float SeeingRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property SeeingRange As Single
  overload: GTA.Ped.SeeingRange*
- uid: GTA.Ped.HearingRange
  commentId: P:GTA.Ped.HearingRange
  id: HearingRange
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: HearingRange
  nameWithType: Ped.HearingRange
  fullName: GTA.Ped.HearingRange
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float HearingRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property HearingRange As Single
  overload: GTA.Ped.HearingRange*
- uid: GTA.Ped.VisualFieldMinAngle
  commentId: P:GTA.Ped.VisualFieldMinAngle
  id: VisualFieldMinAngle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldMinAngle
  nameWithType: Ped.VisualFieldMinAngle
  fullName: GTA.Ped.VisualFieldMinAngle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldMinAngle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldMinAngle As Single
  overload: GTA.Ped.VisualFieldMinAngle*
- uid: GTA.Ped.VisualFieldMaxAngle
  commentId: P:GTA.Ped.VisualFieldMaxAngle
  id: VisualFieldMaxAngle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldMaxAngle
  nameWithType: Ped.VisualFieldMaxAngle
  fullName: GTA.Ped.VisualFieldMaxAngle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldMaxAngle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldMaxAngle As Single
  overload: GTA.Ped.VisualFieldMaxAngle*
- uid: GTA.Ped.VisualFieldMinElevationAngle
  commentId: P:GTA.Ped.VisualFieldMinElevationAngle
  id: VisualFieldMinElevationAngle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldMinElevationAngle
  nameWithType: Ped.VisualFieldMinElevationAngle
  fullName: GTA.Ped.VisualFieldMinElevationAngle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldMinElevationAngle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldMinElevationAngle As Single
  overload: GTA.Ped.VisualFieldMinElevationAngle*
- uid: GTA.Ped.VisualFieldMaxElevationAngle
  commentId: P:GTA.Ped.VisualFieldMaxElevationAngle
  id: VisualFieldMaxElevationAngle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldMaxElevationAngle
  nameWithType: Ped.VisualFieldMaxElevationAngle
  fullName: GTA.Ped.VisualFieldMaxElevationAngle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldMaxElevationAngle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldMaxElevationAngle As Single
  overload: GTA.Ped.VisualFieldMaxElevationAngle*
- uid: GTA.Ped.VisualFieldPeripheralRange
  commentId: P:GTA.Ped.VisualFieldPeripheralRange
  id: VisualFieldPeripheralRange
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldPeripheralRange
  nameWithType: Ped.VisualFieldPeripheralRange
  fullName: GTA.Ped.VisualFieldPeripheralRange
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldPeripheralRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldPeripheralRange As Single
  overload: GTA.Ped.VisualFieldPeripheralRange*
- uid: GTA.Ped.VisualFieldCenterAngle
  commentId: P:GTA.Ped.VisualFieldCenterAngle
  id: VisualFieldCenterAngle
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: VisualFieldCenterAngle
  nameWithType: Ped.VisualFieldCenterAngle
  fullName: GTA.Ped.VisualFieldCenterAngle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public float VisualFieldCenterAngle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property VisualFieldCenterAngle As Single
  overload: GTA.Ped.VisualFieldCenterAngle*
- uid: GTA.Ped.IsInGroup
  commentId: P:GTA.Ped.IsInGroup
  id: IsInGroup
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsInGroup
  nameWithType: Ped.IsInGroup
  fullName: GTA.Ped.IsInGroup
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsInGroup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInGroup As Boolean
  overload: GTA.Ped.IsInGroup*
- uid: GTA.Ped.NeverLeavesGroup
  commentId: P:GTA.Ped.NeverLeavesGroup
  id: NeverLeavesGroup
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: NeverLeavesGroup
  nameWithType: Ped.NeverLeavesGroup
  fullName: GTA.Ped.NeverLeavesGroup
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool NeverLeavesGroup { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property NeverLeavesGroup As Boolean
  overload: GTA.Ped.NeverLeavesGroup*
- uid: GTA.Ped.PedGroup
  commentId: P:GTA.Ped.PedGroup
  id: PedGroup
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: PedGroup
  nameWithType: Ped.PedGroup
  fullName: GTA.Ped.PedGroup
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedGroup PedGroup { get; }
    parameters: []
    return:
      type: GTA.PedGroup
    content.vb: Public ReadOnly Property PedGroup As PedGroup
  overload: GTA.Ped.PedGroup*
- uid: GTA.Ped.IsPainAudioEnabled
  commentId: P:GTA.Ped.IsPainAudioEnabled
  id: IsPainAudioEnabled
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsPainAudioEnabled
  nameWithType: Ped.IsPainAudioEnabled
  fullName: GTA.Ped.IsPainAudioEnabled
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsPainAudioEnabled { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property IsPainAudioEnabled As Boolean
  overload: GTA.Ped.IsPainAudioEnabled*
- uid: GTA.Ped.IsAmbientSpeechPlaying
  commentId: P:GTA.Ped.IsAmbientSpeechPlaying
  id: IsAmbientSpeechPlaying
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsAmbientSpeechPlaying
  nameWithType: Ped.IsAmbientSpeechPlaying
  fullName: GTA.Ped.IsAmbientSpeechPlaying
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsAmbientSpeechPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAmbientSpeechPlaying As Boolean
  overload: GTA.Ped.IsAmbientSpeechPlaying*
- uid: GTA.Ped.IsScriptedSpeechPlaying
  commentId: P:GTA.Ped.IsScriptedSpeechPlaying
  id: IsScriptedSpeechPlaying
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsScriptedSpeechPlaying
  nameWithType: Ped.IsScriptedSpeechPlaying
  fullName: GTA.Ped.IsScriptedSpeechPlaying
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsScriptedSpeechPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsScriptedSpeechPlaying As Boolean
  overload: GTA.Ped.IsScriptedSpeechPlaying*
- uid: GTA.Ped.IsAnySpeechPlaying
  commentId: P:GTA.Ped.IsAnySpeechPlaying
  id: IsAnySpeechPlaying
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsAnySpeechPlaying
  nameWithType: Ped.IsAnySpeechPlaying
  fullName: GTA.Ped.IsAnySpeechPlaying
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsAnySpeechPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAnySpeechPlaying As Boolean
  overload: GTA.Ped.IsAnySpeechPlaying*
- uid: GTA.Ped.IsAmbientSpeechEnabled
  commentId: P:GTA.Ped.IsAmbientSpeechEnabled
  id: IsAmbientSpeechEnabled
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: IsAmbientSpeechEnabled
  nameWithType: Ped.IsAmbientSpeechEnabled
  fullName: GTA.Ped.IsAmbientSpeechEnabled
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsAmbientSpeechEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAmbientSpeechEnabled As Boolean
  overload: GTA.Ped.IsAmbientSpeechEnabled*
- uid: GTA.Ped.Voice
  commentId: P:GTA.Ped.Voice
  id: Voice
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: Voice
  nameWithType: Ped.Voice
  fullName: GTA.Ped.Voice
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public string Voice { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public WriteOnly Property Voice As String
  overload: GTA.Ped.Voice*
- uid: GTA.Ped.CanPlayGestures
  commentId: P:GTA.Ped.CanPlayGestures
  id: CanPlayGestures
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: CanPlayGestures
  nameWithType: Ped.CanPlayGestures
  fullName: GTA.Ped.CanPlayGestures
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool CanPlayGestures { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property CanPlayGestures As Boolean
  overload: GTA.Ped.CanPlayGestures*
- uid: GTA.Ped.MoveNetworkTaskInterface
  commentId: P:GTA.Ped.MoveNetworkTaskInterface
  id: MoveNetworkTaskInterface
  parent: GTA.Ped
  langs:
  - csharp
  - vb
  name: MoveNetworkTaskInterface
  nameWithType: Ped.MoveNetworkTaskInterface
  fullName: GTA.Ped.MoveNetworkTaskInterface
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public PedMoveNetworkTaskInterface MoveNetworkTaskInterface { get; }
    parameters: []
    return:
      type: GTA.PedMoveNetworkTaskInterface
    content.vb: Public ReadOnly Property MoveNetworkTaskInterface As PedMoveNetworkTaskInterface
  overload: GTA.Ped.MoveNetworkTaskInterface*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.PoolObject
  commentId: T:GTA.PoolObject
  parent: GTA
  isExternal: true
  href: GTA.PoolObject.html
  name: PoolObject
  nameWithType: PoolObject
  fullName: GTA.PoolObject
- uid: GTA.Entity
  commentId: T:GTA.Entity
  parent: GTA
  isExternal: true
  href: GTA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: GTA.Entity
- uid: GTA.Native.INativeValue
  commentId: T:GTA.Native.INativeValue
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.INativeValue.html
  name: INativeValue
  nameWithType: INativeValue
  fullName: GTA.Native.INativeValue
- uid: GTA.IDeletable
  commentId: T:GTA.IDeletable
  parent: GTA
  isExternal: true
  href: GTA.IDeletable.html
  name: IDeletable
  nameWithType: IDeletable
  fullName: GTA.IDeletable
- uid: GTA.IExistable
  commentId: T:GTA.IExistable
  parent: GTA
  isExternal: true
  href: GTA.IExistable.html
  name: IExistable
  nameWithType: IExistable
  fullName: GTA.IExistable
- uid: GTA.ISpatial
  commentId: T:GTA.ISpatial
  parent: GTA
  isExternal: true
  href: GTA.ISpatial.html
  name: ISpatial
  nameWithType: ISpatial
  fullName: GTA.ISpatial
- uid: GTA.Entity.FromHandle(System.Int32)
  commentId: M:GTA.Entity.FromHandle(System.Int32)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_FromHandle_System_Int32_
  name: FromHandle(int)
  nameWithType: Entity.FromHandle(int)
  fullName: GTA.Entity.FromHandle(int)
  nameWithType.vb: Entity.FromHandle(Integer)
  fullName.vb: GTA.Entity.FromHandle(Integer)
  name.vb: FromHandle(Integer)
  spec.csharp:
  - uid: GTA.Entity.FromHandle(System.Int32)
    name: FromHandle
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_FromHandle_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: GTA.Entity.FromHandle(System.Int32)
    name: FromHandle
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_FromHandle_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: GTA.Entity.SetOpacity(System.Int32,System.Boolean)
  commentId: M:GTA.Entity.SetOpacity(System.Int32,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetOpacity_System_Int32_System_Boolean_
  name: SetOpacity(int, bool)
  nameWithType: Entity.SetOpacity(int, bool)
  fullName: GTA.Entity.SetOpacity(int, bool)
  nameWithType.vb: Entity.SetOpacity(Integer, Boolean)
  fullName.vb: GTA.Entity.SetOpacity(Integer, Boolean)
  name.vb: SetOpacity(Integer, Boolean)
  spec.csharp:
  - uid: GTA.Entity.SetOpacity(System.Int32,System.Boolean)
    name: SetOpacity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetOpacity_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetOpacity(System.Int32,System.Boolean)
    name: SetOpacity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetOpacity_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ResetOpacity
  commentId: M:GTA.Entity.ResetOpacity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ResetOpacity
  name: ResetOpacity()
  nameWithType: Entity.ResetOpacity()
  fullName: GTA.Entity.ResetOpacity()
  spec.csharp:
  - uid: GTA.Entity.ResetOpacity
    name: ResetOpacity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ResetOpacity
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ResetOpacity
    name: ResetOpacity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ResetOpacity
  - name: (
  - name: )
- uid: GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
  commentId: M:GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetOffsetPosition_GTA_Math_Vector3_
  name: GetOffsetPosition(Vector3)
  nameWithType: Entity.GetOffsetPosition(Vector3)
  fullName: GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
    name: GetOffsetPosition
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetOffsetPosition_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetOffsetPosition(GTA.Math.Vector3)
    name: GetOffsetPosition
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetOffsetPosition_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
  commentId: M:GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetPositionOffset_GTA_Math_Vector3_
  name: GetPositionOffset(Vector3)
  nameWithType: Entity.GetPositionOffset(Vector3)
  fullName: GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
    name: GetPositionOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetPositionOffset_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetPositionOffset(GTA.Math.Vector3)
    name: GetPositionOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetPositionOffset_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.GetSpeedVector(System.Boolean)
  commentId: M:GTA.Entity.GetSpeedVector(System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetSpeedVector_System_Boolean_
  name: GetSpeedVector(bool)
  nameWithType: Entity.GetSpeedVector(bool)
  fullName: GTA.Entity.GetSpeedVector(bool)
  nameWithType.vb: Entity.GetSpeedVector(Boolean)
  fullName.vb: GTA.Entity.GetSpeedVector(Boolean)
  name.vb: GetSpeedVector(Boolean)
  spec.csharp:
  - uid: GTA.Entity.GetSpeedVector(System.Boolean)
    name: GetSpeedVector
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetSpeedVector_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetSpeedVector(System.Boolean)
    name: GetSpeedVector
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetSpeedVector_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.HasBeenDamagedBy(GTA.Entity)
  commentId: M:GTA.Entity.HasBeenDamagedBy(GTA.Entity)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_Entity_
  name: HasBeenDamagedBy(Entity)
  nameWithType: Entity.HasBeenDamagedBy(Entity)
  fullName: GTA.Entity.HasBeenDamagedBy(GTA.Entity)
  spec.csharp:
  - uid: GTA.Entity.HasBeenDamagedBy(GTA.Entity)
    name: HasBeenDamagedBy
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasBeenDamagedBy(GTA.Entity)
    name: HasBeenDamagedBy
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
- uid: GTA.Entity.DetachFragmentPart(System.Int32)
  commentId: M:GTA.Entity.DetachFragmentPart(System.Int32)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_DetachFragmentPart_System_Int32_
  name: DetachFragmentPart(int)
  nameWithType: Entity.DetachFragmentPart(int)
  fullName: GTA.Entity.DetachFragmentPart(int)
  nameWithType.vb: Entity.DetachFragmentPart(Integer)
  fullName.vb: GTA.Entity.DetachFragmentPart(Integer)
  name.vb: DetachFragmentPart(Integer)
  spec.csharp:
  - uid: GTA.Entity.DetachFragmentPart(System.Int32)
    name: DetachFragmentPart
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_DetachFragmentPart_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: GTA.Entity.DetachFragmentPart(System.Int32)
    name: DetachFragmentPart
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_DetachFragmentPart_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: GTA.Entity.SetShouldFreezeWaitingOnCollision(System.Boolean)
  commentId: M:GTA.Entity.SetShouldFreezeWaitingOnCollision(System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetShouldFreezeWaitingOnCollision_System_Boolean_
  name: SetShouldFreezeWaitingOnCollision(bool)
  nameWithType: Entity.SetShouldFreezeWaitingOnCollision(bool)
  fullName: GTA.Entity.SetShouldFreezeWaitingOnCollision(bool)
  nameWithType.vb: Entity.SetShouldFreezeWaitingOnCollision(Boolean)
  fullName.vb: GTA.Entity.SetShouldFreezeWaitingOnCollision(Boolean)
  name.vb: SetShouldFreezeWaitingOnCollision(Boolean)
  spec.csharp:
  - uid: GTA.Entity.SetShouldFreezeWaitingOnCollision(System.Boolean)
    name: SetShouldFreezeWaitingOnCollision
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetShouldFreezeWaitingOnCollision_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetShouldFreezeWaitingOnCollision(System.Boolean)
    name: SetShouldFreezeWaitingOnCollision
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetShouldFreezeWaitingOnCollision_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
  commentId: M:GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetOnlyDamagedByRelGroup_GTA_RelationshipGroup_
  name: SetOnlyDamagedByRelGroup(RelationshipGroup)
  nameWithType: Entity.SetOnlyDamagedByRelGroup(RelationshipGroup)
  fullName: GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
  spec.csharp:
  - uid: GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
    name: SetOnlyDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetOnlyDamagedByRelGroup_GTA_RelationshipGroup_
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetOnlyDamagedByRelGroup(GTA.RelationshipGroup)
    name: SetOnlyDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetOnlyDamagedByRelGroup_GTA_RelationshipGroup_
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
- uid: GTA.Entity.ClearOnlyDamagedByRelGroup
  commentId: M:GTA.Entity.ClearOnlyDamagedByRelGroup
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ClearOnlyDamagedByRelGroup
  name: ClearOnlyDamagedByRelGroup()
  nameWithType: Entity.ClearOnlyDamagedByRelGroup()
  fullName: GTA.Entity.ClearOnlyDamagedByRelGroup()
  spec.csharp:
  - uid: GTA.Entity.ClearOnlyDamagedByRelGroup
    name: ClearOnlyDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearOnlyDamagedByRelGroup
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ClearOnlyDamagedByRelGroup
    name: ClearOnlyDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearOnlyDamagedByRelGroup
  - name: (
  - name: )
- uid: GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
  commentId: M:GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetNotDamagedByRelGroup_GTA_RelationshipGroup_
  name: SetNotDamagedByRelGroup(RelationshipGroup)
  nameWithType: Entity.SetNotDamagedByRelGroup(RelationshipGroup)
  fullName: GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
  spec.csharp:
  - uid: GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
    name: SetNotDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetNotDamagedByRelGroup_GTA_RelationshipGroup_
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetNotDamagedByRelGroup(GTA.RelationshipGroup)
    name: SetNotDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetNotDamagedByRelGroup_GTA_RelationshipGroup_
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
- uid: GTA.Entity.ClearNotDamagedByRelGroup
  commentId: M:GTA.Entity.ClearNotDamagedByRelGroup
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ClearNotDamagedByRelGroup
  name: ClearNotDamagedByRelGroup()
  nameWithType: Entity.ClearNotDamagedByRelGroup()
  fullName: GTA.Entity.ClearNotDamagedByRelGroup()
  spec.csharp:
  - uid: GTA.Entity.ClearNotDamagedByRelGroup
    name: ClearNotDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearNotDamagedByRelGroup
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ClearNotDamagedByRelGroup
    name: ClearNotDamagedByRelGroup
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearNotDamagedByRelGroup
  - name: (
  - name: )
- uid: GTA.Entity.IsUprightWithin(System.Single)
  commentId: M:GTA.Entity.IsUprightWithin(System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsUprightWithin_System_Single_
  name: IsUprightWithin(float)
  nameWithType: Entity.IsUprightWithin(float)
  fullName: GTA.Entity.IsUprightWithin(float)
  nameWithType.vb: Entity.IsUprightWithin(Single)
  fullName.vb: GTA.Entity.IsUprightWithin(Single)
  name.vb: IsUprightWithin(Single)
  spec.csharp:
  - uid: GTA.Entity.IsUprightWithin(System.Single)
    name: IsUprightWithin
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsUprightWithin_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsUprightWithin(System.Single)
    name: IsUprightWithin
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsUprightWithin_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.RemoveParticleEffects
  commentId: M:GTA.Entity.RemoveParticleEffects
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_RemoveParticleEffects
  name: RemoveParticleEffects()
  nameWithType: Entity.RemoveParticleEffects()
  fullName: GTA.Entity.RemoveParticleEffects()
  spec.csharp:
  - uid: GTA.Entity.RemoveParticleEffects
    name: RemoveParticleEffects
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_RemoveParticleEffects
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.RemoveParticleEffects
    name: RemoveParticleEffects
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_RemoveParticleEffects
  - name: (
  - name: )
- uid: GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity@)
  commentId: M:GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity@)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_TryGetPhysicalEntityFromLastCollisionRecord_GTA_Entity__
  name: TryGetPhysicalEntityFromLastCollisionRecord(out Entity)
  nameWithType: Entity.TryGetPhysicalEntityFromLastCollisionRecord(out Entity)
  fullName: GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(out GTA.Entity)
  nameWithType.vb: Entity.TryGetPhysicalEntityFromLastCollisionRecord(Entity)
  fullName.vb: GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity)
  name.vb: TryGetPhysicalEntityFromLastCollisionRecord(Entity)
  spec.csharp:
  - uid: GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity@)
    name: TryGetPhysicalEntityFromLastCollisionRecord
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_TryGetPhysicalEntityFromLastCollisionRecord_GTA_Entity__
  - name: (
  - name: out
  - name: " "
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.TryGetPhysicalEntityFromLastCollisionRecord(GTA.Entity@)
    name: TryGetPhysicalEntityFromLastCollisionRecord
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_TryGetPhysicalEntityFromLastCollisionRecord_GTA_Entity__
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
- uid: GTA.Entity.SetNoCollision(GTA.Entity,System.Boolean)
  commentId: M:GTA.Entity.SetNoCollision(GTA.Entity,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetNoCollision_GTA_Entity_System_Boolean_
  name: SetNoCollision(Entity, bool)
  nameWithType: Entity.SetNoCollision(Entity, bool)
  fullName: GTA.Entity.SetNoCollision(GTA.Entity, bool)
  nameWithType.vb: Entity.SetNoCollision(Entity, Boolean)
  fullName.vb: GTA.Entity.SetNoCollision(GTA.Entity, Boolean)
  name.vb: SetNoCollision(Entity, Boolean)
  spec.csharp:
  - uid: GTA.Entity.SetNoCollision(GTA.Entity,System.Boolean)
    name: SetNoCollision
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetNoCollision_GTA_Entity_System_Boolean_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetNoCollision(GTA.Entity,System.Boolean)
    name: SetNoCollision
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetNoCollision_GTA_Entity_System_Boolean_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3)
  commentId: M:GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_
  name: IsInArea(Vector3, Vector3)
  nameWithType: Entity.IsInArea(Vector3, Vector3)
  fullName: GTA.Entity.IsInArea(GTA.Math.Vector3, GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3)
    name: IsInArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3)
    name: IsInArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  commentId: M:GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  name: IsInArea(Vector3, Vector3, bool, PedTransportMode)
  nameWithType: Entity.IsInArea(Vector3, Vector3, bool, PedTransportMode)
  fullName: GTA.Entity.IsInArea(GTA.Math.Vector3, GTA.Math.Vector3, bool, GTA.PedTransportMode)
  nameWithType.vb: Entity.IsInArea(Vector3, Vector3, Boolean, PedTransportMode)
  fullName.vb: GTA.Entity.IsInArea(GTA.Math.Vector3, GTA.Math.Vector3, Boolean, GTA.PedTransportMode)
  name.vb: IsInArea(Vector3, Vector3, Boolean, PedTransportMode)
  spec.csharp:
  - uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
    name: IsInArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
    name: IsInArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
- uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  commentId: M:GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_
  name: IsInAngledArea(Vector3, Vector3, float)
  nameWithType: Entity.IsInAngledArea(Vector3, Vector3, float)
  fullName: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, float)
  nameWithType.vb: Entity.IsInAngledArea(Vector3, Vector3, Single)
  fullName.vb: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, Single)
  name.vb: IsInAngledArea(Vector3, Vector3, Single)
  spec.csharp:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  commentId: M:GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_
  name: IsInAngledArea(Vector3, Vector3, float, bool)
  nameWithType: Entity.IsInAngledArea(Vector3, Vector3, float, bool)
  fullName: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, float, bool)
  nameWithType.vb: Entity.IsInAngledArea(Vector3, Vector3, Single, Boolean)
  fullName.vb: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean)
  name.vb: IsInAngledArea(Vector3, Vector3, Single, Boolean)
  spec.csharp:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,GTA.PedTransportMode)
  commentId: M:GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,GTA.PedTransportMode)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_GTA_PedTransportMode_
  name: IsInAngledArea(Vector3, Vector3, float, bool, PedTransportMode)
  nameWithType: Entity.IsInAngledArea(Vector3, Vector3, float, bool, PedTransportMode)
  fullName: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, float, bool, GTA.PedTransportMode)
  nameWithType.vb: Entity.IsInAngledArea(Vector3, Vector3, Single, Boolean, PedTransportMode)
  fullName.vb: GTA.Entity.IsInAngledArea(GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean, GTA.PedTransportMode)
  name.vb: IsInAngledArea(Vector3, Vector3, Single, Boolean, PedTransportMode)
  spec.csharp:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,GTA.PedTransportMode)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInAngledArea(GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,GTA.PedTransportMode)
    name: IsInAngledArea
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInAngledArea_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
- uid: GTA.Entity.IsInRange(GTA.Math.Vector3,System.Single)
  commentId: M:GTA.Entity.IsInRange(GTA.Math.Vector3,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInRange_GTA_Math_Vector3_System_Single_
  name: IsInRange(Vector3, float)
  nameWithType: Entity.IsInRange(Vector3, float)
  fullName: GTA.Entity.IsInRange(GTA.Math.Vector3, float)
  nameWithType.vb: Entity.IsInRange(Vector3, Single)
  fullName.vb: GTA.Entity.IsInRange(GTA.Math.Vector3, Single)
  name.vb: IsInRange(Vector3, Single)
  spec.csharp:
  - uid: GTA.Entity.IsInRange(GTA.Math.Vector3,System.Single)
    name: IsInRange
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInRange_GTA_Math_Vector3_System_Single_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsInRange(GTA.Math.Vector3,System.Single)
    name: IsInRange
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsInRange_GTA_Math_Vector3_System_Single_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3)
  commentId: M:GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_
  name: IsNearEntity(Entity, Vector3)
  nameWithType: Entity.IsNearEntity(Entity, Vector3)
  fullName: GTA.Entity.IsNearEntity(GTA.Entity, GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3)
    name: IsNearEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3)
    name: IsNearEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  commentId: M:GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  name: IsNearEntity(Entity, Vector3, bool, PedTransportMode)
  nameWithType: Entity.IsNearEntity(Entity, Vector3, bool, PedTransportMode)
  fullName: GTA.Entity.IsNearEntity(GTA.Entity, GTA.Math.Vector3, bool, GTA.PedTransportMode)
  nameWithType.vb: Entity.IsNearEntity(Entity, Vector3, Boolean, PedTransportMode)
  fullName.vb: GTA.Entity.IsNearEntity(GTA.Entity, GTA.Math.Vector3, Boolean, GTA.PedTransportMode)
  name.vb: IsNearEntity(Entity, Vector3, Boolean, PedTransportMode)
  spec.csharp:
  - uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
    name: IsNearEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsNearEntity(GTA.Entity,GTA.Math.Vector3,System.Boolean,GTA.PedTransportMode)
    name: IsNearEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsNearEntity_GTA_Entity_GTA_Math_Vector3_System_Boolean_GTA_PedTransportMode_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.PedTransportMode
    name: PedTransportMode
    isExternal: true
    href: GTA.PedTransportMode.html
  - name: )
- uid: GTA.Entity.IsTouching(GTA.Model)
  commentId: M:GTA.Entity.IsTouching(GTA.Model)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Model_
  name: IsTouching(Model)
  nameWithType: Entity.IsTouching(Model)
  fullName: GTA.Entity.IsTouching(GTA.Model)
  spec.csharp:
  - uid: GTA.Entity.IsTouching(GTA.Model)
    name: IsTouching
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Model_
  - name: (
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsTouching(GTA.Model)
    name: IsTouching
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Model_
  - name: (
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: )
- uid: GTA.Entity.IsTouching(GTA.Entity)
  commentId: M:GTA.Entity.IsTouching(GTA.Entity)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Entity_
  name: IsTouching(Entity)
  nameWithType: Entity.IsTouching(Entity)
  fullName: GTA.Entity.IsTouching(GTA.Entity)
  spec.csharp:
  - uid: GTA.Entity.IsTouching(GTA.Entity)
    name: IsTouching
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsTouching(GTA.Entity)
    name: IsTouching
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsTouching_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
- uid: GTA.Entity.AddBlip
  commentId: M:GTA.Entity.AddBlip
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AddBlip
  name: AddBlip()
  nameWithType: Entity.AddBlip()
  fullName: GTA.Entity.AddBlip()
  spec.csharp:
  - uid: GTA.Entity.AddBlip
    name: AddBlip
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AddBlip
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.AddBlip
    name: AddBlip
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AddBlip
  - name: (
  - name: )
- uid: GTA.Entity.Detach
  commentId: M:GTA.Entity.Detach
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Detach
  name: Detach()
  nameWithType: Entity.Detach()
  fullName: GTA.Entity.Detach()
  spec.csharp:
  - uid: GTA.Entity.Detach
    name: Detach
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Detach
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.Detach
    name: Detach
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Detach
  - name: (
  - name: )
- uid: GTA.Entity.Detach(System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.Detach(System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Detach_System_Boolean_System_Boolean_
  name: Detach(bool, bool)
  nameWithType: Entity.Detach(bool, bool)
  fullName: GTA.Entity.Detach(bool, bool)
  nameWithType.vb: Entity.Detach(Boolean, Boolean)
  fullName.vb: GTA.Entity.Detach(Boolean, Boolean)
  name.vb: Detach(Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.Detach(System.Boolean,System.Boolean)
    name: Detach
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Detach_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.Detach(System.Boolean,System.Boolean)
    name: Detach
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Detach_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3)
  commentId: M:GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_
  name: AttachTo(Entity, Vector3, Vector3)
  nameWithType: Entity.AttachTo(Entity, Vector3, Vector3)
  fullName: GTA.Entity.AttachTo(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3)
  commentId: M:GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_
  name: AttachTo(EntityBone, Vector3, Vector3)
  nameWithType: Entity.AttachTo(EntityBone, Vector3, Vector3)
  fullName: GTA.Entity.AttachTo(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3)
  spec.csharp:
  - uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: )
- uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  name: AttachTo(Entity, Vector3, Vector3, bool, bool, bool, bool, EulerRotationOrder, bool, bool)
  nameWithType: Entity.AttachTo(Entity, Vector3, Vector3, bool, bool, bool, bool, EulerRotationOrder, bool, bool)
  fullName: GTA.Entity.AttachTo(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, bool, bool, bool, bool, GTA.EulerRotationOrder, bool, bool)
  nameWithType.vb: Entity.AttachTo(Entity, Vector3, Vector3, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Boolean, Boolean)
  fullName.vb: GTA.Entity.AttachTo(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder, Boolean, Boolean)
  name.vb: AttachTo(Entity, Vector3, Vector3, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachTo(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  name: AttachTo(EntityBone, Vector3, Vector3, bool, bool, bool, bool, EulerRotationOrder, bool, bool)
  nameWithType: Entity.AttachTo(EntityBone, Vector3, Vector3, bool, bool, bool, bool, EulerRotationOrder, bool, bool)
  fullName: GTA.Entity.AttachTo(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, bool, bool, bool, bool, GTA.EulerRotationOrder, bool, bool)
  nameWithType.vb: Entity.AttachTo(EntityBone, Vector3, Vector3, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Boolean, Boolean)
  fullName.vb: GTA.Entity.AttachTo(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder, Boolean, Boolean)
  name.vb: AttachTo(EntityBone, Vector3, Vector3, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachTo(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Boolean,System.Boolean)
    name: AttachTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachTo_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.AttachToMatrixPhysically(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  commentId: M:GTA.Entity.AttachToMatrixPhysically(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysically_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  name: AttachToMatrixPhysically(Entity, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder)
  nameWithType: Entity.AttachToMatrixPhysically(Entity, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder)
  fullName: GTA.Entity.AttachToMatrixPhysically(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, float, bool, bool, bool, bool, GTA.EulerRotationOrder)
  nameWithType.vb: Entity.AttachToMatrixPhysically(Entity, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder)
  fullName.vb: GTA.Entity.AttachToMatrixPhysically(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder)
  name.vb: AttachToMatrixPhysically(Entity, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder)
  spec.csharp:
  - uid: GTA.Entity.AttachToMatrixPhysically(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
    name: AttachToMatrixPhysically
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysically_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachToMatrixPhysically(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
    name: AttachToMatrixPhysically
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysically_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: )
- uid: GTA.Entity.AttachToBonePhysically(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  commentId: M:GTA.Entity.AttachToBonePhysically(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachToBonePhysically_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  name: AttachToBonePhysically(EntityBone, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder)
  nameWithType: Entity.AttachToBonePhysically(EntityBone, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder)
  fullName: GTA.Entity.AttachToBonePhysically(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, float, bool, bool, bool, bool, GTA.EulerRotationOrder)
  nameWithType.vb: Entity.AttachToBonePhysically(EntityBone, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder)
  fullName.vb: GTA.Entity.AttachToBonePhysically(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder)
  name.vb: AttachToBonePhysically(EntityBone, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder)
  spec.csharp:
  - uid: GTA.Entity.AttachToBonePhysically(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
    name: AttachToBonePhysically
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToBonePhysically_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachToBonePhysically(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder)
    name: AttachToBonePhysically
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToBonePhysically_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: )
- uid: GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  commentId: M:GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysicallyOverrideInverseMass_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  name: AttachToMatrixPhysicallyOverrideInverseMass(Entity, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder, float, float)
  nameWithType: Entity.AttachToMatrixPhysicallyOverrideInverseMass(Entity, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder, float, float)
  fullName: GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, float, bool, bool, bool, bool, GTA.EulerRotationOrder, float, float)
  nameWithType.vb: Entity.AttachToMatrixPhysicallyOverrideInverseMass(Entity, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Single, Single)
  fullName.vb: GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder, Single, Single)
  name.vb: AttachToMatrixPhysicallyOverrideInverseMass(Entity, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Single, Single)
  spec.csharp:
  - uid: GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
    name: AttachToMatrixPhysicallyOverrideInverseMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysicallyOverrideInverseMass_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachToMatrixPhysicallyOverrideInverseMass(GTA.Entity,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
    name: AttachToMatrixPhysicallyOverrideInverseMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToMatrixPhysicallyOverrideInverseMass_GTA_Entity_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  commentId: M:GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachToBonePhysicallyOverrideInverseMass_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  name: AttachToBonePhysicallyOverrideInverseMass(EntityBone, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder, float, float)
  nameWithType: Entity.AttachToBonePhysicallyOverrideInverseMass(EntityBone, Vector3, Vector3, Vector3, float, bool, bool, bool, bool, EulerRotationOrder, float, float)
  fullName: GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, float, bool, bool, bool, bool, GTA.EulerRotationOrder, float, float)
  nameWithType.vb: Entity.AttachToBonePhysicallyOverrideInverseMass(EntityBone, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Single, Single)
  fullName.vb: GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone, GTA.Math.Vector3, GTA.Math.Vector3, GTA.Math.Vector3, Single, Boolean, Boolean, Boolean, Boolean, GTA.EulerRotationOrder, Single, Single)
  name.vb: AttachToBonePhysicallyOverrideInverseMass(EntityBone, Vector3, Vector3, Vector3, Single, Boolean, Boolean, Boolean, Boolean, EulerRotationOrder, Single, Single)
  spec.csharp:
  - uid: GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
    name: AttachToBonePhysicallyOverrideInverseMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToBonePhysicallyOverrideInverseMass_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.AttachToBonePhysicallyOverrideInverseMass(GTA.EntityBone,GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,GTA.EulerRotationOrder,System.Single,System.Single)
    name: AttachToBonePhysicallyOverrideInverseMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_AttachToBonePhysicallyOverrideInverseMass_GTA_EntityBone_GTA_Math_Vector3_GTA_Math_Vector3_GTA_Math_Vector3_System_Single_System_Boolean_System_Boolean_System_Boolean_System_Boolean_GTA_EulerRotationOrder_System_Single_System_Single_
  - name: (
  - uid: GTA.EntityBone
    name: EntityBone
    isExternal: true
    href: GTA.EntityBone.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: GTA.EulerRotationOrder
    name: EulerRotationOrder
    isExternal: true
    href: GTA.EulerRotationOrder.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.IsAttached
  commentId: M:GTA.Entity.IsAttached
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAttached
  name: IsAttached()
  nameWithType: Entity.IsAttached()
  fullName: GTA.Entity.IsAttached()
  spec.csharp:
  - uid: GTA.Entity.IsAttached
    name: IsAttached
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttached
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsAttached
    name: IsAttached
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttached
  - name: (
  - name: )
- uid: GTA.Entity.IsAttachedTo(GTA.Entity)
  commentId: M:GTA.Entity.IsAttachedTo(GTA.Entity)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAttachedTo_GTA_Entity_
  name: IsAttachedTo(Entity)
  nameWithType: Entity.IsAttachedTo(Entity)
  fullName: GTA.Entity.IsAttachedTo(GTA.Entity)
  spec.csharp:
  - uid: GTA.Entity.IsAttachedTo(GTA.Entity)
    name: IsAttachedTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedTo_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsAttachedTo(GTA.Entity)
    name: IsAttachedTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedTo_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
- uid: GTA.Entity.IsAttachedToAnyProp
  commentId: M:GTA.Entity.IsAttachedToAnyProp
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyProp
  name: IsAttachedToAnyProp()
  nameWithType: Entity.IsAttachedToAnyProp()
  fullName: GTA.Entity.IsAttachedToAnyProp()
  spec.csharp:
  - uid: GTA.Entity.IsAttachedToAnyProp
    name: IsAttachedToAnyProp
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyProp
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsAttachedToAnyProp
    name: IsAttachedToAnyProp
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyProp
  - name: (
  - name: )
- uid: GTA.Entity.IsAttachedToAnyPed
  commentId: M:GTA.Entity.IsAttachedToAnyPed
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyPed
  name: IsAttachedToAnyPed()
  nameWithType: Entity.IsAttachedToAnyPed()
  fullName: GTA.Entity.IsAttachedToAnyPed()
  spec.csharp:
  - uid: GTA.Entity.IsAttachedToAnyPed
    name: IsAttachedToAnyPed
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyPed
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsAttachedToAnyPed
    name: IsAttachedToAnyPed
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyPed
  - name: (
  - name: )
- uid: GTA.Entity.IsAttachedToAnyVehicle
  commentId: M:GTA.Entity.IsAttachedToAnyVehicle
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyVehicle
  name: IsAttachedToAnyVehicle()
  nameWithType: Entity.IsAttachedToAnyVehicle()
  fullName: GTA.Entity.IsAttachedToAnyVehicle()
  spec.csharp:
  - uid: GTA.Entity.IsAttachedToAnyVehicle
    name: IsAttachedToAnyVehicle
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyVehicle
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsAttachedToAnyVehicle
    name: IsAttachedToAnyVehicle
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsAttachedToAnyVehicle
  - name: (
  - name: )
- uid: GTA.Entity.ProcessEntityAttachments
  commentId: M:GTA.Entity.ProcessEntityAttachments
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ProcessEntityAttachments
  name: ProcessEntityAttachments()
  nameWithType: Entity.ProcessEntityAttachments()
  fullName: GTA.Entity.ProcessEntityAttachments()
  spec.csharp:
  - uid: GTA.Entity.ProcessEntityAttachments
    name: ProcessEntityAttachments
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ProcessEntityAttachments
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ProcessEntityAttachments
    name: ProcessEntityAttachments
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ProcessEntityAttachments
  - name: (
  - name: )
- uid: GTA.Entity.ActivatePhysics
  commentId: M:GTA.Entity.ActivatePhysics
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ActivatePhysics
  name: ActivatePhysics()
  nameWithType: Entity.ActivatePhysics()
  fullName: GTA.Entity.ActivatePhysics()
  spec.csharp:
  - uid: GTA.Entity.ActivatePhysics
    name: ActivatePhysics
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ActivatePhysics
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ActivatePhysics
    name: ActivatePhysics
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ActivatePhysics
  - name: (
  - name: )
- uid: GTA.Entity.DeactivatePhysics
  commentId: M:GTA.Entity.DeactivatePhysics
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_DeactivatePhysics
  name: DeactivatePhysics()
  nameWithType: Entity.DeactivatePhysics()
  fullName: GTA.Entity.DeactivatePhysics()
  spec.csharp:
  - uid: GTA.Entity.DeactivatePhysics
    name: DeactivatePhysics
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_DeactivatePhysics
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.DeactivatePhysics
    name: DeactivatePhysics
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_DeactivatePhysics
  - name: (
  - name: )
- uid: GTA.Entity.SetToRespondToPhysicsSystem
  commentId: M:GTA.Entity.SetToRespondToPhysicsSystem
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetToRespondToPhysicsSystem
  name: SetToRespondToPhysicsSystem()
  nameWithType: Entity.SetToRespondToPhysicsSystem()
  fullName: GTA.Entity.SetToRespondToPhysicsSystem()
  spec.csharp:
  - uid: GTA.Entity.SetToRespondToPhysicsSystem
    name: SetToRespondToPhysicsSystem
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetToRespondToPhysicsSystem
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetToRespondToPhysicsSystem
    name: SetToRespondToPhysicsSystem
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetToRespondToPhysicsSystem
  - name: (
  - name: )
- uid: GTA.Entity.SetDamping(GTA.PhysicsDampingType,System.Single)
  commentId: M:GTA.Entity.SetDamping(GTA.PhysicsDampingType,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetDamping_GTA_PhysicsDampingType_System_Single_
  name: SetDamping(PhysicsDampingType, float)
  nameWithType: Entity.SetDamping(PhysicsDampingType, float)
  fullName: GTA.Entity.SetDamping(GTA.PhysicsDampingType, float)
  nameWithType.vb: Entity.SetDamping(PhysicsDampingType, Single)
  fullName.vb: GTA.Entity.SetDamping(GTA.PhysicsDampingType, Single)
  name.vb: SetDamping(PhysicsDampingType, Single)
  spec.csharp:
  - uid: GTA.Entity.SetDamping(GTA.PhysicsDampingType,System.Single)
    name: SetDamping
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetDamping_GTA_PhysicsDampingType_System_Single_
  - name: (
  - uid: GTA.PhysicsDampingType
    name: PhysicsDampingType
    isExternal: true
    href: GTA.PhysicsDampingType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetDamping(GTA.PhysicsDampingType,System.Single)
    name: SetDamping
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetDamping_GTA_PhysicsDampingType_System_Single_
  - name: (
  - uid: GTA.PhysicsDampingType
    name: PhysicsDampingType
    isExternal: true
    href: GTA.PhysicsDampingType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.SetCenterOfGravityAtBoundCenter
  commentId: M:GTA.Entity.SetCenterOfGravityAtBoundCenter
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetCenterOfGravityAtBoundCenter
  name: SetCenterOfGravityAtBoundCenter()
  nameWithType: Entity.SetCenterOfGravityAtBoundCenter()
  fullName: GTA.Entity.SetCenterOfGravityAtBoundCenter()
  spec.csharp:
  - uid: GTA.Entity.SetCenterOfGravityAtBoundCenter
    name: SetCenterOfGravityAtBoundCenter
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetCenterOfGravityAtBoundCenter
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetCenterOfGravityAtBoundCenter
    name: SetCenterOfGravityAtBoundCenter
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetCenterOfGravityAtBoundCenter
  - name: (
  - name: )
- uid: GTA.Entity.ApplyForce(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  commentId: M:GTA.Entity.ApplyForce(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyForce_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  name: ApplyForce(Vector3, Vector3, ForceType)
  nameWithType: Entity.ApplyForce(Vector3, Vector3, ForceType)
  fullName: GTA.Entity.ApplyForce(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType)
  spec.csharp:
  - uid: GTA.Entity.ApplyForce(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
    name: ApplyForce
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyForce_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyForce(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
    name: ApplyForce
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyForce_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: )
- uid: GTA.Entity.ApplyForceRelative(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  commentId: M:GTA.Entity.ApplyForceRelative(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyForceRelative_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  name: ApplyForceRelative(Vector3, Vector3, ForceType)
  nameWithType: Entity.ApplyForceRelative(Vector3, Vector3, ForceType)
  fullName: GTA.Entity.ApplyForceRelative(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType)
  spec.csharp:
  - uid: GTA.Entity.ApplyForceRelative(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
    name: ApplyForceRelative
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyForceRelative_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyForceRelative(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType)
    name: ApplyForceRelative
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyForceRelative_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: )
- uid: GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyWorldForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  nameWithType: Entity.ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  fullName: GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, bool, bool, bool)
  nameWithType.vb: Entity.ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean, Boolean)
  name.vb: ApplyWorldForceWorldOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyWorldForceWorldOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyWorldForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyWorldForceWorldOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyWorldForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  nameWithType: Entity.ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  fullName: GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, bool, bool, bool)
  nameWithType.vb: Entity.ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean, Boolean)
  name.vb: ApplyWorldForceRelativeOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyWorldForceRelativeOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyWorldForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyWorldForceRelativeOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  nameWithType: Entity.ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  fullName: GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, bool, bool, bool)
  nameWithType.vb: Entity.ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean, Boolean)
  name.vb: ApplyRelativeForceWorldOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyRelativeForceWorldOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyRelativeForceWorldOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyRelativeForceWorldOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  nameWithType: Entity.ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, bool, bool, bool)
  fullName: GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, bool, bool, bool)
  nameWithType.vb: Entity.ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3, GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean, Boolean)
  name.vb: ApplyRelativeForceRelativeOffset(Vector3, Vector3, ForceType, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyRelativeForceRelativeOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyRelativeForceRelativeOffset(GTA.Math.Vector3,GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean,System.Boolean)
    name: ApplyRelativeForceRelativeOffset
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyWorldForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  name: ApplyWorldForceCenterOfMass(Vector3, ForceType, bool, bool)
  nameWithType: Entity.ApplyWorldForceCenterOfMass(Vector3, ForceType, bool, bool)
  fullName: GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, bool, bool)
  nameWithType.vb: Entity.ApplyWorldForceCenterOfMass(Vector3, ForceType, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean)
  name.vb: ApplyWorldForceCenterOfMass(Vector3, ForceType, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
    name: ApplyWorldForceCenterOfMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyWorldForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
    name: ApplyWorldForceCenterOfMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyWorldForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  commentId: M:GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  name: ApplyRelativeForceCenterOfMass(Vector3, ForceType, bool, bool)
  nameWithType: Entity.ApplyRelativeForceCenterOfMass(Vector3, ForceType, bool, bool)
  fullName: GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, bool, bool)
  nameWithType.vb: Entity.ApplyRelativeForceCenterOfMass(Vector3, ForceType, Boolean, Boolean)
  fullName.vb: GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3, GTA.ForceType, Boolean, Boolean)
  name.vb: ApplyRelativeForceCenterOfMass(Vector3, ForceType, Boolean, Boolean)
  spec.csharp:
  - uid: GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
    name: ApplyRelativeForceCenterOfMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.ApplyRelativeForceCenterOfMass(GTA.Math.Vector3,GTA.ForceType,System.Boolean,System.Boolean)
    name: ApplyRelativeForceCenterOfMass
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ApplyRelativeForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_System_Boolean_System_Boolean_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: GTA.ForceType
    name: ForceType
    isExternal: true
    href: GTA.ForceType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.PlayAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Boolean,System.Boolean,System.Boolean,System.Single,GTA.AnimationFlags)
  commentId: M:GTA.Entity.PlayAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Boolean,System.Boolean,System.Boolean,System.Single,GTA.AnimationFlags)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PlayAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Boolean_System_Boolean_System_Boolean_System_Single_GTA_AnimationFlags_
  name: PlayAnimation(CrClipAsset, AnimationBlendDelta, bool, bool, bool, float, AnimationFlags)
  nameWithType: Entity.PlayAnimation(CrClipAsset, AnimationBlendDelta, bool, bool, bool, float, AnimationFlags)
  fullName: GTA.Entity.PlayAnimation(GTA.CrClipAsset, GTA.AnimationBlendDelta, bool, bool, bool, float, GTA.AnimationFlags)
  nameWithType.vb: Entity.PlayAnimation(CrClipAsset, AnimationBlendDelta, Boolean, Boolean, Boolean, Single, AnimationFlags)
  fullName.vb: GTA.Entity.PlayAnimation(GTA.CrClipAsset, GTA.AnimationBlendDelta, Boolean, Boolean, Boolean, Single, GTA.AnimationFlags)
  name.vb: PlayAnimation(CrClipAsset, AnimationBlendDelta, Boolean, Boolean, Boolean, Single, AnimationFlags)
  spec.csharp:
  - uid: GTA.Entity.PlayAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Boolean,System.Boolean,System.Boolean,System.Single,GTA.AnimationFlags)
    name: PlayAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlayAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Boolean_System_Boolean_System_Boolean_System_Single_GTA_AnimationFlags_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.AnimationFlags
    name: AnimationFlags
    isExternal: true
    href: GTA.AnimationFlags.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.PlayAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Boolean,System.Boolean,System.Boolean,System.Single,GTA.AnimationFlags)
    name: PlayAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlayAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Boolean_System_Boolean_System_Boolean_System_Single_GTA_AnimationFlags_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.AnimationFlags
    name: AnimationFlags
    isExternal: true
    href: GTA.AnimationFlags.html
  - name: )
- uid: GTA.Entity.StopAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta)
  commentId: M:GTA.Entity.StopAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_StopAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_
  name: StopAnimation(CrClipAsset, AnimationBlendDelta)
  nameWithType: Entity.StopAnimation(CrClipAsset, AnimationBlendDelta)
  fullName: GTA.Entity.StopAnimation(GTA.CrClipAsset, GTA.AnimationBlendDelta)
  spec.csharp:
  - uid: GTA.Entity.StopAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta)
    name: StopAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.StopAnimation(GTA.CrClipAsset,GTA.AnimationBlendDelta)
    name: StopAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopAnimation_GTA_CrClipAsset_GTA_AnimationBlendDelta_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: )
- uid: GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  commentId: M:GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsPlayingAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  name: IsPlayingAnimation(CrClipAsset, EntityAnimationType)
  nameWithType: Entity.IsPlayingAnimation(CrClipAsset, EntityAnimationType)
  fullName: GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset, GTA.EntityAnimationType)
  spec.csharp:
  - uid: GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
    name: IsPlayingAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsPlayingAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.EntityAnimationType
    name: EntityAnimationType
    isExternal: true
    href: GTA.EntityAnimationType.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.IsPlayingAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
    name: IsPlayingAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_IsPlayingAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.EntityAnimationType
    name: EntityAnimationType
    isExternal: true
    href: GTA.EntityAnimationType.html
  - name: )
- uid: GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  commentId: M:GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasFinishedAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  name: HasFinishedAnimation(CrClipAsset, EntityAnimationType)
  nameWithType: Entity.HasFinishedAnimation(CrClipAsset, EntityAnimationType)
  fullName: GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset, GTA.EntityAnimationType)
  spec.csharp:
  - uid: GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
    name: HasFinishedAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasFinishedAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.EntityAnimationType
    name: EntityAnimationType
    isExternal: true
    href: GTA.EntityAnimationType.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasFinishedAnimation(GTA.CrClipAsset,GTA.EntityAnimationType)
    name: HasFinishedAnimation
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasFinishedAnimation_GTA_CrClipAsset_GTA_EntityAnimationType_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.EntityAnimationType
    name: EntityAnimationType
    isExternal: true
    href: GTA.EntityAnimationType.html
  - name: )
- uid: GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
  commentId: M:GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasAnimationEventFired_GTA_AtHashValue_
  name: HasAnimationEventFired(AtHashValue)
  nameWithType: Entity.HasAnimationEventFired(AtHashValue)
  fullName: GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
  spec.csharp:
  - uid: GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
    name: HasAnimationEventFired
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasAnimationEventFired_GTA_AtHashValue_
  - name: (
  - uid: GTA.AtHashValue
    name: AtHashValue
    isExternal: true
    href: GTA.AtHashValue.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasAnimationEventFired(GTA.AtHashValue)
    name: HasAnimationEventFired
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasAnimationEventFired_GTA_AtHashValue_
  - name: (
  - uid: GTA.AtHashValue
    name: AtHashValue
    isExternal: true
    href: GTA.AtHashValue.html
  - name: )
- uid: GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset,System.Single)
  commentId: M:GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetAnimationSpeed_GTA_CrClipAsset_System_Single_
  name: SetAnimationSpeed(CrClipAsset, float)
  nameWithType: Entity.SetAnimationSpeed(CrClipAsset, float)
  fullName: GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset, float)
  nameWithType.vb: Entity.SetAnimationSpeed(CrClipAsset, Single)
  fullName.vb: GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset, Single)
  name.vb: SetAnimationSpeed(CrClipAsset, Single)
  spec.csharp:
  - uid: GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset,System.Single)
    name: SetAnimationSpeed
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetAnimationSpeed_GTA_CrClipAsset_System_Single_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetAnimationSpeed(GTA.CrClipAsset,System.Single)
    name: SetAnimationSpeed
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetAnimationSpeed_GTA_CrClipAsset_System_Single_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset,System.Single)
  commentId: M:GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset,System.Single)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SetAnimationCurrentTime_GTA_CrClipAsset_System_Single_
  name: SetAnimationCurrentTime(CrClipAsset, float)
  nameWithType: Entity.SetAnimationCurrentTime(CrClipAsset, float)
  fullName: GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset, float)
  nameWithType.vb: Entity.SetAnimationCurrentTime(CrClipAsset, Single)
  fullName.vb: GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset, Single)
  name.vb: SetAnimationCurrentTime(CrClipAsset, Single)
  spec.csharp:
  - uid: GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset,System.Single)
    name: SetAnimationCurrentTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetAnimationCurrentTime_GTA_CrClipAsset_System_Single_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.SetAnimationCurrentTime(GTA.CrClipAsset,System.Single)
    name: SetAnimationCurrentTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_SetAnimationCurrentTime_GTA_CrClipAsset_System_Single_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
  commentId: M:GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetAnimationCurrentTime_GTA_CrClipAsset_
  name: GetAnimationCurrentTime(CrClipAsset)
  nameWithType: Entity.GetAnimationCurrentTime(CrClipAsset)
  fullName: GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
  spec.csharp:
  - uid: GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
    name: GetAnimationCurrentTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetAnimationCurrentTime_GTA_CrClipAsset_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetAnimationCurrentTime(GTA.CrClipAsset)
    name: GetAnimationCurrentTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetAnimationCurrentTime_GTA_CrClipAsset_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: )
- uid: GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
  commentId: M:GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetAnimationTotalTime_GTA_CrClipAsset_
  name: GetAnimationTotalTime(CrClipAsset)
  nameWithType: Entity.GetAnimationTotalTime(CrClipAsset)
  fullName: GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
  spec.csharp:
  - uid: GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
    name: GetAnimationTotalTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetAnimationTotalTime_GTA_CrClipAsset_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetAnimationTotalTime(GTA.CrClipAsset)
    name: GetAnimationTotalTime
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetAnimationTotalTime_GTA_CrClipAsset_
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: )
- uid: GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset,System.String,System.Single@,System.Single@)
  commentId: M:GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset,System.String,System.Single@,System.Single@)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_FindAnimationEventPhase_GTA_CrClipAsset_System_String_System_Single__System_Single__
  name: FindAnimationEventPhase(CrClipAsset, string, out float, out float)
  nameWithType: Entity.FindAnimationEventPhase(CrClipAsset, string, out float, out float)
  fullName: GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset, string, out float, out float)
  nameWithType.vb: Entity.FindAnimationEventPhase(CrClipAsset, String, Single, Single)
  fullName.vb: GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset, String, Single, Single)
  name.vb: FindAnimationEventPhase(CrClipAsset, String, Single, Single)
  spec.csharp:
  - uid: GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset,System.String,System.Single@,System.Single@)
    name: FindAnimationEventPhase
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_FindAnimationEventPhase_GTA_CrClipAsset_System_String_System_Single__System_Single__
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: GTA.Entity.FindAnimationEventPhase(GTA.CrClipAsset,System.String,System.Single@,System.Single@)
    name: FindAnimationEventPhase
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_FindAnimationEventPhase_GTA_CrClipAsset_System_String_System_Single__System_Single__
  - name: (
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  commentId: M:GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PlaySynchronizedAnim_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  name: PlaySynchronizedAnim(FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  nameWithType: Entity.PlaySynchronizedAnim(FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  fullName: GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene, GTA.CrClipAsset, GTA.AnimationBlendDelta, GTA.AnimationBlendDelta?, GTA.SyncedSceneFlags, GTA.AnimationBlendDelta?)
  spec.csharp:
  - uid: GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
    name: PlaySynchronizedAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlaySynchronizedAnim_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  - name: (
  - uid: GTA.FwSyncedScene
    name: FwSyncedScene
    isExternal: true
    href: GTA.FwSyncedScene.html
  - name: ','
  - name: " "
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: ','
  - name: " "
  - uid: GTA.SyncedSceneFlags
    name: SyncedSceneFlags
    isExternal: true
    href: GTA.SyncedSceneFlags.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: )
  spec.vb:
  - uid: GTA.Entity.PlaySynchronizedAnim(GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
    name: PlaySynchronizedAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlaySynchronizedAnim_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  - name: (
  - uid: GTA.FwSyncedScene
    name: FwSyncedScene
    isExternal: true
    href: GTA.FwSyncedScene.html
  - name: ','
  - name: " "
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: ','
  - name: " "
  - uid: GTA.SyncedSceneFlags
    name: SyncedSceneFlags
    isExternal: true
    href: GTA.SyncedSceneFlags.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: )
- uid: GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta,System.Boolean)
  commentId: M:GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta,System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_StopSynchronizedAnim_GTA_AnimationBlendDelta_System_Boolean_
  name: StopSynchronizedAnim(AnimationBlendDelta, bool)
  nameWithType: Entity.StopSynchronizedAnim(AnimationBlendDelta, bool)
  fullName: GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta, bool)
  nameWithType.vb: Entity.StopSynchronizedAnim(AnimationBlendDelta, Boolean)
  fullName.vb: GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta, Boolean)
  name.vb: StopSynchronizedAnim(AnimationBlendDelta, Boolean)
  spec.csharp:
  - uid: GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta,System.Boolean)
    name: StopSynchronizedAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopSynchronizedAnim_GTA_AnimationBlendDelta_System_Boolean_
  - name: (
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.StopSynchronizedAnim(GTA.AnimationBlendDelta,System.Boolean)
    name: StopSynchronizedAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopSynchronizedAnim_GTA_AnimationBlendDelta_System_Boolean_
  - name: (
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  commentId: M:GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PlaySynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  name: PlaySynchronizedMapEntityAnim(Vector3, float, Model, FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  nameWithType: Entity.PlaySynchronizedMapEntityAnim(Vector3, float, Model, FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  fullName: GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3, float, GTA.Model, GTA.FwSyncedScene, GTA.CrClipAsset, GTA.AnimationBlendDelta, GTA.AnimationBlendDelta?, GTA.SyncedSceneFlags, GTA.AnimationBlendDelta?)
  nameWithType.vb: Entity.PlaySynchronizedMapEntityAnim(Vector3, Single, Model, FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  fullName.vb: GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3, Single, GTA.Model, GTA.FwSyncedScene, GTA.CrClipAsset, GTA.AnimationBlendDelta, GTA.AnimationBlendDelta?, GTA.SyncedSceneFlags, GTA.AnimationBlendDelta?)
  name.vb: PlaySynchronizedMapEntityAnim(Vector3, Single, Model, FwSyncedScene, CrClipAsset, AnimationBlendDelta, AnimationBlendDelta?, SyncedSceneFlags, AnimationBlendDelta?)
  spec.csharp:
  - uid: GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
    name: PlaySynchronizedMapEntityAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlaySynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: ','
  - name: " "
  - uid: GTA.FwSyncedScene
    name: FwSyncedScene
    isExternal: true
    href: GTA.FwSyncedScene.html
  - name: ','
  - name: " "
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: ','
  - name: " "
  - uid: GTA.SyncedSceneFlags
    name: SyncedSceneFlags
    isExternal: true
    href: GTA.SyncedSceneFlags.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: )
  spec.vb:
  - uid: GTA.Entity.PlaySynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.FwSyncedScene,GTA.CrClipAsset,GTA.AnimationBlendDelta,System.Nullable{GTA.AnimationBlendDelta},GTA.SyncedSceneFlags,System.Nullable{GTA.AnimationBlendDelta})
    name: PlaySynchronizedMapEntityAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_PlaySynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_FwSyncedScene_GTA_CrClipAsset_GTA_AnimationBlendDelta_System_Nullable_GTA_AnimationBlendDelta__GTA_SyncedSceneFlags_System_Nullable_GTA_AnimationBlendDelta__
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: ','
  - name: " "
  - uid: GTA.FwSyncedScene
    name: FwSyncedScene
    isExternal: true
    href: GTA.FwSyncedScene.html
  - name: ','
  - name: " "
  - uid: GTA.CrClipAsset
    name: CrClipAsset
    isExternal: true
    href: GTA.CrClipAsset.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: ','
  - name: " "
  - uid: GTA.SyncedSceneFlags
    name: SyncedSceneFlags
    isExternal: true
    href: GTA.SyncedSceneFlags.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: '?'
  - name: )
- uid: GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.AnimationBlendDelta)
  commentId: M:GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.AnimationBlendDelta)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_StopSynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_AnimationBlendDelta_
  name: StopSynchronizedMapEntityAnim(Vector3, float, Model, AnimationBlendDelta)
  nameWithType: Entity.StopSynchronizedMapEntityAnim(Vector3, float, Model, AnimationBlendDelta)
  fullName: GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3, float, GTA.Model, GTA.AnimationBlendDelta)
  nameWithType.vb: Entity.StopSynchronizedMapEntityAnim(Vector3, Single, Model, AnimationBlendDelta)
  fullName.vb: GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3, Single, GTA.Model, GTA.AnimationBlendDelta)
  name.vb: StopSynchronizedMapEntityAnim(Vector3, Single, Model, AnimationBlendDelta)
  spec.csharp:
  - uid: GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.AnimationBlendDelta)
    name: StopSynchronizedMapEntityAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopSynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_AnimationBlendDelta_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.StopSynchronizedMapEntityAnim(GTA.Math.Vector3,System.Single,GTA.Model,GTA.AnimationBlendDelta)
    name: StopSynchronizedMapEntityAnim
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_StopSynchronizedMapEntityAnim_GTA_Math_Vector3_System_Single_GTA_Model_GTA_AnimationBlendDelta_
  - name: (
  - uid: GTA.Math.Vector3
    name: Vector3
    isExternal: true
    href: GTA.Math.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: GTA.Model
    name: Model
    isExternal: true
    href: GTA.Model.html
  - name: ','
  - name: " "
  - uid: GTA.AnimationBlendDelta
    name: AnimationBlendDelta
    isExternal: true
    href: GTA.AnimationBlendDelta.html
  - name: )
- uid: GTA.Entity.HasClearLineOfSightTo(GTA.Entity,GTA.IntersectFlags)
  commentId: M:GTA.Entity.HasClearLineOfSightTo(GTA.Entity,GTA.IntersectFlags)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightTo_GTA_Entity_GTA_IntersectFlags_
  name: HasClearLineOfSightTo(Entity, IntersectFlags)
  nameWithType: Entity.HasClearLineOfSightTo(Entity, IntersectFlags)
  fullName: GTA.Entity.HasClearLineOfSightTo(GTA.Entity, GTA.IntersectFlags)
  spec.csharp:
  - uid: GTA.Entity.HasClearLineOfSightTo(GTA.Entity,GTA.IntersectFlags)
    name: HasClearLineOfSightTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightTo_GTA_Entity_GTA_IntersectFlags_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.IntersectFlags
    name: IntersectFlags
    isExternal: true
    href: GTA.IntersectFlags.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasClearLineOfSightTo(GTA.Entity,GTA.IntersectFlags)
    name: HasClearLineOfSightTo
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightTo_GTA_Entity_GTA_IntersectFlags_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.IntersectFlags
    name: IntersectFlags
    isExternal: true
    href: GTA.IntersectFlags.html
  - name: )
- uid: GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity,GTA.IntersectFlags)
  commentId: M:GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity,GTA.IntersectFlags)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToAdjustForCover_GTA_Entity_GTA_IntersectFlags_
  name: HasClearLineOfSightToAdjustForCover(Entity, IntersectFlags)
  nameWithType: Entity.HasClearLineOfSightToAdjustForCover(Entity, IntersectFlags)
  fullName: GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity, GTA.IntersectFlags)
  spec.csharp:
  - uid: GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity,GTA.IntersectFlags)
    name: HasClearLineOfSightToAdjustForCover
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToAdjustForCover_GTA_Entity_GTA_IntersectFlags_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.IntersectFlags
    name: IntersectFlags
    isExternal: true
    href: GTA.IntersectFlags.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasClearLineOfSightToAdjustForCover(GTA.Entity,GTA.IntersectFlags)
    name: HasClearLineOfSightToAdjustForCover
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToAdjustForCover_GTA_Entity_GTA_IntersectFlags_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: ','
  - name: " "
  - uid: GTA.IntersectFlags
    name: IntersectFlags
    isExternal: true
    href: GTA.IntersectFlags.html
  - name: )
- uid: GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
  commentId: M:GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToInFront_GTA_Entity_
  name: HasClearLineOfSightToInFront(Entity)
  nameWithType: Entity.HasClearLineOfSightToInFront(Entity)
  fullName: GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
  spec.csharp:
  - uid: GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
    name: HasClearLineOfSightToInFront
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToInFront_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasClearLineOfSightToInFront(GTA.Entity)
    name: HasClearLineOfSightToInFront
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasClearLineOfSightToInFront_GTA_Entity_
  - name: (
  - uid: GTA.Entity
    name: Entity
    isExternal: true
    href: GTA.Entity.html
  - name: )
- uid: GTA.Entity.MarkAsMissionEntity(System.Boolean)
  commentId: M:GTA.Entity.MarkAsMissionEntity(System.Boolean)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MarkAsMissionEntity_System_Boolean_
  name: MarkAsMissionEntity(bool)
  nameWithType: Entity.MarkAsMissionEntity(bool)
  fullName: GTA.Entity.MarkAsMissionEntity(bool)
  nameWithType.vb: Entity.MarkAsMissionEntity(Boolean)
  fullName.vb: GTA.Entity.MarkAsMissionEntity(Boolean)
  name.vb: MarkAsMissionEntity(Boolean)
  spec.csharp:
  - uid: GTA.Entity.MarkAsMissionEntity(System.Boolean)
    name: MarkAsMissionEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_MarkAsMissionEntity_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: GTA.Entity.MarkAsMissionEntity(System.Boolean)
    name: MarkAsMissionEntity
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_MarkAsMissionEntity_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: GTA.Entity.MarkAsNoLongerNeeded
  commentId: M:GTA.Entity.MarkAsNoLongerNeeded
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MarkAsNoLongerNeeded
  name: MarkAsNoLongerNeeded()
  nameWithType: Entity.MarkAsNoLongerNeeded()
  fullName: GTA.Entity.MarkAsNoLongerNeeded()
  spec.csharp:
  - uid: GTA.Entity.MarkAsNoLongerNeeded
    name: MarkAsNoLongerNeeded
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_MarkAsNoLongerNeeded
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.MarkAsNoLongerNeeded
    name: MarkAsNoLongerNeeded
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_MarkAsNoLongerNeeded
  - name: (
  - name: )
- uid: GTA.Entity.Delete
  commentId: M:GTA.Entity.Delete
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Delete
  name: Delete()
  nameWithType: Entity.Delete()
  fullName: GTA.Entity.Delete()
  spec.csharp:
  - uid: GTA.Entity.Delete
    name: Delete
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Delete
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.Delete
    name: Delete
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Delete
  - name: (
  - name: )
- uid: GTA.Entity.Equals(System.Object)
  commentId: M:GTA.Entity.Equals(System.Object)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Equals_System_Object_
  name: Equals(object)
  nameWithType: Entity.Equals(object)
  fullName: GTA.Entity.Equals(object)
  nameWithType.vb: Entity.Equals(Object)
  fullName.vb: GTA.Entity.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: GTA.Entity.Equals(System.Object)
    name: Equals
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: GTA.Entity.Equals(System.Object)
    name: Equals
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Entity.GetHashCode
  commentId: M:GTA.Entity.GetHashCode
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_GetHashCode
  name: GetHashCode()
  nameWithType: Entity.GetHashCode()
  fullName: GTA.Entity.GetHashCode()
  spec.csharp:
  - uid: GTA.Entity.GetHashCode
    name: GetHashCode
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.GetHashCode
    name: GetHashCode
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_GetHashCode
  - name: (
  - name: )
- uid: GTA.Entity.MemoryAddress
  commentId: P:GTA.Entity.MemoryAddress
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MemoryAddress
  name: MemoryAddress
  nameWithType: Entity.MemoryAddress
  fullName: GTA.Entity.MemoryAddress
- uid: GTA.Entity.EntityType
  commentId: P:GTA.Entity.EntityType
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_EntityType
  name: EntityType
  nameWithType: Entity.EntityType
  fullName: GTA.Entity.EntityType
- uid: GTA.Entity.PopulationType
  commentId: P:GTA.Entity.PopulationType
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PopulationType
  name: PopulationType
  nameWithType: Entity.PopulationType
  fullName: GTA.Entity.PopulationType
- uid: GTA.Entity.IsDead
  commentId: P:GTA.Entity.IsDead
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsDead
  name: IsDead
  nameWithType: Entity.IsDead
  fullName: GTA.Entity.IsDead
- uid: GTA.Entity.IsAlive
  commentId: P:GTA.Entity.IsAlive
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsAlive
  name: IsAlive
  nameWithType: Entity.IsAlive
  fullName: GTA.Entity.IsAlive
- uid: GTA.Entity.HasDrawable
  commentId: P:GTA.Entity.HasDrawable
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasDrawable
  name: HasDrawable
  nameWithType: Entity.HasDrawable
  fullName: GTA.Entity.HasDrawable
- uid: GTA.Entity.HasSkeleton
  commentId: P:GTA.Entity.HasSkeleton
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasSkeleton
  name: HasSkeleton
  nameWithType: Entity.HasSkeleton
  fullName: GTA.Entity.HasSkeleton
- uid: GTA.Entity.HasAnimationDirector
  commentId: P:GTA.Entity.HasAnimationDirector
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasAnimationDirector
  name: HasAnimationDirector
  nameWithType: Entity.HasAnimationDirector
  fullName: GTA.Entity.HasAnimationDirector
- uid: GTA.Entity.IsOwnedByShvdnScript
  commentId: P:GTA.Entity.IsOwnedByShvdnScript
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOwnedByShvdnScript
  name: IsOwnedByShvdnScript
  nameWithType: Entity.IsOwnedByShvdnScript
  fullName: GTA.Entity.IsOwnedByShvdnScript
- uid: GTA.Entity.IsOwnedByAnyScript
  commentId: P:GTA.Entity.IsOwnedByAnyScript
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOwnedByAnyScript
  name: IsOwnedByAnyScript
  nameWithType: Entity.IsOwnedByAnyScript
  fullName: GTA.Entity.IsOwnedByAnyScript
- uid: GTA.Entity.OwnerScriptName
  commentId: P:GTA.Entity.OwnerScriptName
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_OwnerScriptName
  name: OwnerScriptName
  nameWithType: Entity.OwnerScriptName
  fullName: GTA.Entity.OwnerScriptName
- uid: GTA.Entity.Model
  commentId: P:GTA.Entity.Model
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Model
  name: Model
  nameWithType: Entity.Model
  fullName: GTA.Entity.Model
- uid: GTA.Entity.Opacity
  commentId: P:GTA.Entity.Opacity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Opacity
  name: Opacity
  nameWithType: Entity.Opacity
  fullName: GTA.Entity.Opacity
- uid: GTA.Entity.LodDistance
  commentId: P:GTA.Entity.LodDistance
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_LodDistance
  name: LodDistance
  nameWithType: Entity.LodDistance
  fullName: GTA.Entity.LodDistance
- uid: GTA.Entity.IsPersistent
  commentId: P:GTA.Entity.IsPersistent
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsPersistent
  name: IsPersistent
  nameWithType: Entity.IsPersistent
  fullName: GTA.Entity.IsPersistent
- uid: GTA.Entity.IsPositionFrozen
  commentId: P:GTA.Entity.IsPositionFrozen
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsPositionFrozen
  name: IsPositionFrozen
  nameWithType: Entity.IsPositionFrozen
  fullName: GTA.Entity.IsPositionFrozen
- uid: GTA.Entity.Health
  commentId: P:GTA.Entity.Health
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Health
  name: Health
  nameWithType: Entity.Health
  fullName: GTA.Entity.Health
- uid: GTA.Entity.HealthFloat
  commentId: P:GTA.Entity.HealthFloat
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HealthFloat
  name: HealthFloat
  nameWithType: Entity.HealthFloat
  fullName: GTA.Entity.HealthFloat
- uid: GTA.Entity.MaxHealthFloat
  commentId: P:GTA.Entity.MaxHealthFloat
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MaxHealthFloat
  name: MaxHealthFloat
  nameWithType: Entity.MaxHealthFloat
  fullName: GTA.Entity.MaxHealthFloat
- uid: GTA.Entity.Matrix
  commentId: P:GTA.Entity.Matrix
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Matrix
  name: Matrix
  nameWithType: Entity.Matrix
  fullName: GTA.Entity.Matrix
- uid: GTA.Entity.Position
  commentId: P:GTA.Entity.Position
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Position
  name: Position
  nameWithType: Entity.Position
  fullName: GTA.Entity.Position
- uid: GTA.Entity.PositionNoOffset
  commentId: P:GTA.Entity.PositionNoOffset
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PositionNoOffset
  name: PositionNoOffset
  nameWithType: Entity.PositionNoOffset
  fullName: GTA.Entity.PositionNoOffset
- uid: GTA.Entity.Rotation
  commentId: P:GTA.Entity.Rotation
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Rotation
  name: Rotation
  nameWithType: Entity.Rotation
  fullName: GTA.Entity.Rotation
- uid: GTA.Entity.Heading
  commentId: P:GTA.Entity.Heading
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Heading
  name: Heading
  nameWithType: Entity.Heading
  fullName: GTA.Entity.Heading
- uid: GTA.Entity.SubmersionLevel
  commentId: P:GTA.Entity.SubmersionLevel
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SubmersionLevel
  name: SubmersionLevel
  nameWithType: Entity.SubmersionLevel
  fullName: GTA.Entity.SubmersionLevel
- uid: GTA.Entity.HeightAboveGround
  commentId: P:GTA.Entity.HeightAboveGround
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HeightAboveGround
  name: HeightAboveGround
  nameWithType: Entity.HeightAboveGround
  fullName: GTA.Entity.HeightAboveGround
- uid: GTA.Entity.Quaternion
  commentId: P:GTA.Entity.Quaternion
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Quaternion
  name: Quaternion
  nameWithType: Entity.Quaternion
  fullName: GTA.Entity.Quaternion
- uid: GTA.Entity.UpVector
  commentId: P:GTA.Entity.UpVector
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_UpVector
  name: UpVector
  nameWithType: Entity.UpVector
  fullName: GTA.Entity.UpVector
- uid: GTA.Entity.RightVector
  commentId: P:GTA.Entity.RightVector
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_RightVector
  name: RightVector
  nameWithType: Entity.RightVector
  fullName: GTA.Entity.RightVector
- uid: GTA.Entity.ForwardVector
  commentId: P:GTA.Entity.ForwardVector
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ForwardVector
  name: ForwardVector
  nameWithType: Entity.ForwardVector
  fullName: GTA.Entity.ForwardVector
- uid: GTA.Entity.LeftPosition
  commentId: P:GTA.Entity.LeftPosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_LeftPosition
  name: LeftPosition
  nameWithType: Entity.LeftPosition
  fullName: GTA.Entity.LeftPosition
- uid: GTA.Entity.RightPosition
  commentId: P:GTA.Entity.RightPosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_RightPosition
  name: RightPosition
  nameWithType: Entity.RightPosition
  fullName: GTA.Entity.RightPosition
- uid: GTA.Entity.RearPosition
  commentId: P:GTA.Entity.RearPosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_RearPosition
  name: RearPosition
  nameWithType: Entity.RearPosition
  fullName: GTA.Entity.RearPosition
- uid: GTA.Entity.FrontPosition
  commentId: P:GTA.Entity.FrontPosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_FrontPosition
  name: FrontPosition
  nameWithType: Entity.FrontPosition
  fullName: GTA.Entity.FrontPosition
- uid: GTA.Entity.AbovePosition
  commentId: P:GTA.Entity.AbovePosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AbovePosition
  name: AbovePosition
  nameWithType: Entity.AbovePosition
  fullName: GTA.Entity.AbovePosition
- uid: GTA.Entity.BelowPosition
  commentId: P:GTA.Entity.BelowPosition
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_BelowPosition
  name: BelowPosition
  nameWithType: Entity.BelowPosition
  fullName: GTA.Entity.BelowPosition
- uid: GTA.Entity.Speed
  commentId: P:GTA.Entity.Speed
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Speed
  name: Speed
  nameWithType: Entity.Speed
  fullName: GTA.Entity.Speed
- uid: GTA.Entity.MaxSpeed
  commentId: P:GTA.Entity.MaxSpeed
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MaxSpeed
  name: MaxSpeed
  nameWithType: Entity.MaxSpeed
  fullName: GTA.Entity.MaxSpeed
- uid: GTA.Entity.Velocity
  commentId: P:GTA.Entity.Velocity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_Velocity
  name: Velocity
  nameWithType: Entity.Velocity
  fullName: GTA.Entity.Velocity
- uid: GTA.Entity.RotationVelocity
  commentId: P:GTA.Entity.RotationVelocity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_RotationVelocity
  name: RotationVelocity
  nameWithType: Entity.RotationVelocity
  fullName: GTA.Entity.RotationVelocity
- uid: GTA.Entity.WorldRotationVelocity
  commentId: P:GTA.Entity.WorldRotationVelocity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_WorldRotationVelocity
  name: WorldRotationVelocity
  nameWithType: Entity.WorldRotationVelocity
  fullName: GTA.Entity.WorldRotationVelocity
- uid: GTA.Entity.LocalRotationVelocity
  commentId: P:GTA.Entity.LocalRotationVelocity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_LocalRotationVelocity
  name: LocalRotationVelocity
  nameWithType: Entity.LocalRotationVelocity
  fullName: GTA.Entity.LocalRotationVelocity
- uid: GTA.Entity.DamageRecords
  commentId: P:GTA.Entity.DamageRecords
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_DamageRecords
  name: DamageRecords
  nameWithType: Entity.DamageRecords
  fullName: GTA.Entity.DamageRecords
- uid: GTA.Entity.FragmentGroupCount
  commentId: P:GTA.Entity.FragmentGroupCount
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_FragmentGroupCount
  name: FragmentGroupCount
  nameWithType: Entity.FragmentGroupCount
  fullName: GTA.Entity.FragmentGroupCount
- uid: GTA.Entity.IsFragmentObject
  commentId: P:GTA.Entity.IsFragmentObject
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsFragmentObject
  name: IsFragmentObject
  nameWithType: Entity.IsFragmentObject
  fullName: GTA.Entity.IsFragmentObject
- uid: GTA.Entity.IsInWater
  commentId: P:GTA.Entity.IsInWater
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInWater
  name: IsInWater
  nameWithType: Entity.IsInWater
  fullName: GTA.Entity.IsInWater
- uid: GTA.Entity.IsInWaterStrict
  commentId: P:GTA.Entity.IsInWaterStrict
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInWaterStrict
  name: IsInWaterStrict
  nameWithType: Entity.IsInWaterStrict
  fullName: GTA.Entity.IsInWaterStrict
- uid: GTA.Entity.WasInWater
  commentId: P:GTA.Entity.WasInWater
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_WasInWater
  name: WasInWater
  nameWithType: Entity.WasInWater
  fullName: GTA.Entity.WasInWater
- uid: GTA.Entity.DontLoadCollision
  commentId: P:GTA.Entity.DontLoadCollision
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_DontLoadCollision
  name: DontLoadCollision
  nameWithType: Entity.DontLoadCollision
  fullName: GTA.Entity.DontLoadCollision
- uid: GTA.Entity.AllowsFreezeWaitingOnCollision
  commentId: P:GTA.Entity.AllowsFreezeWaitingOnCollision
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AllowsFreezeWaitingOnCollision
  name: AllowsFreezeWaitingOnCollision
  nameWithType: Entity.AllowsFreezeWaitingOnCollision
  fullName: GTA.Entity.AllowsFreezeWaitingOnCollision
- uid: GTA.Entity.IsFireProof
  commentId: P:GTA.Entity.IsFireProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsFireProof
  name: IsFireProof
  nameWithType: Entity.IsFireProof
  fullName: GTA.Entity.IsFireProof
- uid: GTA.Entity.IsMeleeProof
  commentId: P:GTA.Entity.IsMeleeProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsMeleeProof
  name: IsMeleeProof
  nameWithType: Entity.IsMeleeProof
  fullName: GTA.Entity.IsMeleeProof
- uid: GTA.Entity.IsBulletProof
  commentId: P:GTA.Entity.IsBulletProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsBulletProof
  name: IsBulletProof
  nameWithType: Entity.IsBulletProof
  fullName: GTA.Entity.IsBulletProof
- uid: GTA.Entity.IsExplosionProof
  commentId: P:GTA.Entity.IsExplosionProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsExplosionProof
  name: IsExplosionProof
  nameWithType: Entity.IsExplosionProof
  fullName: GTA.Entity.IsExplosionProof
- uid: GTA.Entity.IsCollisionProof
  commentId: P:GTA.Entity.IsCollisionProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsCollisionProof
  name: IsCollisionProof
  nameWithType: Entity.IsCollisionProof
  fullName: GTA.Entity.IsCollisionProof
- uid: GTA.Entity.IsSteamProof
  commentId: P:GTA.Entity.IsSteamProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsSteamProof
  name: IsSteamProof
  nameWithType: Entity.IsSteamProof
  fullName: GTA.Entity.IsSteamProof
- uid: GTA.Entity.IsSmokeProof
  commentId: P:GTA.Entity.IsSmokeProof
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsSmokeProof
  name: IsSmokeProof
  nameWithType: Entity.IsSmokeProof
  fullName: GTA.Entity.IsSmokeProof
- uid: GTA.Entity.IsInvincible
  commentId: P:GTA.Entity.IsInvincible
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInvincible
  name: IsInvincible
  nameWithType: Entity.IsInvincible
  fullName: GTA.Entity.IsInvincible
- uid: GTA.Entity.BlocksAnyDamageButHasReactions
  commentId: P:GTA.Entity.BlocksAnyDamageButHasReactions
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_BlocksAnyDamageButHasReactions
  name: BlocksAnyDamageButHasReactions
  nameWithType: Entity.BlocksAnyDamageButHasReactions
  fullName: GTA.Entity.BlocksAnyDamageButHasReactions
- uid: GTA.Entity.IsOnlyDamagedByPlayer
  commentId: P:GTA.Entity.IsOnlyDamagedByPlayer
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOnlyDamagedByPlayer
  name: IsOnlyDamagedByPlayer
  nameWithType: Entity.IsOnlyDamagedByPlayer
  fullName: GTA.Entity.IsOnlyDamagedByPlayer
- uid: GTA.Entity.CanOnlyBeDamagedByRelGroup
  commentId: P:GTA.Entity.CanOnlyBeDamagedByRelGroup
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CanOnlyBeDamagedByRelGroup
  name: CanOnlyBeDamagedByRelGroup
  nameWithType: Entity.CanOnlyBeDamagedByRelGroup
  fullName: GTA.Entity.CanOnlyBeDamagedByRelGroup
- uid: GTA.Entity.BlocksDamageByRelGroup
  commentId: P:GTA.Entity.BlocksDamageByRelGroup
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_BlocksDamageByRelGroup
  name: BlocksDamageByRelGroup
  nameWithType: Entity.BlocksDamageByRelGroup
  fullName: GTA.Entity.BlocksDamageByRelGroup
- uid: GTA.Entity.ShouldRenderScorched
  commentId: P:GTA.Entity.ShouldRenderScorched
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ShouldRenderScorched
  name: ShouldRenderScorched
  nameWithType: Entity.ShouldRenderScorched
  fullName: GTA.Entity.ShouldRenderScorched
- uid: GTA.Entity.CanBeAutoVaulted
  commentId: P:GTA.Entity.CanBeAutoVaulted
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CanBeAutoVaulted
  name: CanBeAutoVaulted
  nameWithType: Entity.CanBeAutoVaulted
  fullName: GTA.Entity.CanBeAutoVaulted
- uid: GTA.Entity.CanBeClimbed
  commentId: P:GTA.Entity.CanBeClimbed
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CanBeClimbed
  name: CanBeClimbed
  nameWithType: Entity.CanBeClimbed
  fullName: GTA.Entity.CanBeClimbed
- uid: GTA.Entity.IsPickupByCargobobDisabled
  commentId: P:GTA.Entity.IsPickupByCargobobDisabled
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsPickupByCargobobDisabled
  name: IsPickupByCargobobDisabled
  nameWithType: Entity.IsPickupByCargobobDisabled
  fullName: GTA.Entity.IsPickupByCargobobDisabled
- uid: GTA.Entity.KeepsDamageFlagsOnCleanupMissionState
  commentId: P:GTA.Entity.KeepsDamageFlagsOnCleanupMissionState
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_KeepsDamageFlagsOnCleanupMissionState
  name: KeepsDamageFlagsOnCleanupMissionState
  nameWithType: Entity.KeepsDamageFlagsOnCleanupMissionState
  fullName: GTA.Entity.KeepsDamageFlagsOnCleanupMissionState
- uid: GTA.Entity.SpecificRelGroupForInflictorChecks
  commentId: P:GTA.Entity.SpecificRelGroupForInflictorChecks
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_SpecificRelGroupForInflictorChecks
  name: SpecificRelGroupForInflictorChecks
  nameWithType: Entity.SpecificRelGroupForInflictorChecks
  fullName: GTA.Entity.SpecificRelGroupForInflictorChecks
- uid: GTA.Entity.IsVisible
  commentId: P:GTA.Entity.IsVisible
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsVisible
  name: IsVisible
  nameWithType: Entity.IsVisible
  fullName: GTA.Entity.IsVisible
- uid: GTA.Entity.IsOccluded
  commentId: P:GTA.Entity.IsOccluded
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOccluded
  name: IsOccluded
  nameWithType: Entity.IsOccluded
  fullName: GTA.Entity.IsOccluded
- uid: GTA.Entity.IsRendered
  commentId: P:GTA.Entity.IsRendered
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsRendered
  name: IsRendered
  nameWithType: Entity.IsRendered
  fullName: GTA.Entity.IsRendered
- uid: GTA.Entity.IsOnFire
  commentId: P:GTA.Entity.IsOnFire
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOnFire
  name: IsOnFire
  nameWithType: Entity.IsOnFire
  fullName: GTA.Entity.IsOnFire
- uid: GTA.Entity.IsOnScreen
  commentId: P:GTA.Entity.IsOnScreen
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsOnScreen
  name: IsOnScreen
  nameWithType: Entity.IsOnScreen
  fullName: GTA.Entity.IsOnScreen
- uid: GTA.Entity.IsUpright
  commentId: P:GTA.Entity.IsUpright
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsUpright
  name: IsUpright
  nameWithType: Entity.IsUpright
  fullName: GTA.Entity.IsUpright
- uid: GTA.Entity.IsUpsideDown
  commentId: P:GTA.Entity.IsUpsideDown
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsUpsideDown
  name: IsUpsideDown
  nameWithType: Entity.IsUpsideDown
  fullName: GTA.Entity.IsUpsideDown
- uid: GTA.Entity.IsInAir
  commentId: P:GTA.Entity.IsInAir
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsInAir
  name: IsInAir
  nameWithType: Entity.IsInAir
  fullName: GTA.Entity.IsInAir
- uid: GTA.Entity.UprightValue
  commentId: P:GTA.Entity.UprightValue
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_UprightValue
  name: UprightValue
  nameWithType: Entity.UprightValue
  fullName: GTA.Entity.UprightValue
- uid: GTA.Entity.HasGravity
  commentId: P:GTA.Entity.HasGravity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasGravity
  name: HasGravity
  nameWithType: Entity.HasGravity
  fullName: GTA.Entity.HasGravity
- uid: GTA.Entity.HasCollided
  commentId: P:GTA.Entity.HasCollided
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasCollided
  name: HasCollided
  nameWithType: Entity.HasCollided
  fullName: GTA.Entity.HasCollided
- uid: GTA.Entity.HasCollidedWithBuildingOrAnimatedBuilding
  commentId: P:GTA.Entity.HasCollidedWithBuildingOrAnimatedBuilding
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasCollidedWithBuildingOrAnimatedBuilding
  name: HasCollidedWithBuildingOrAnimatedBuilding
  nameWithType: Entity.HasCollidedWithBuildingOrAnimatedBuilding
  fullName: GTA.Entity.HasCollidedWithBuildingOrAnimatedBuilding
- uid: GTA.Entity.MaterialCollidingWith
  commentId: P:GTA.Entity.MaterialCollidingWith
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MaterialCollidingWith
  name: MaterialCollidingWith
  nameWithType: Entity.MaterialCollidingWith
  fullName: GTA.Entity.MaterialCollidingWith
- uid: GTA.Entity.VehicleCollidingWith
  commentId: P:GTA.Entity.VehicleCollidingWith
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_VehicleCollidingWith
  name: VehicleCollidingWith
  nameWithType: Entity.VehicleCollidingWith
  fullName: GTA.Entity.VehicleCollidingWith
- uid: GTA.Entity.PedCollidingWith
  commentId: P:GTA.Entity.PedCollidingWith
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PedCollidingWith
  name: PedCollidingWith
  nameWithType: Entity.PedCollidingWith
  fullName: GTA.Entity.PedCollidingWith
- uid: GTA.Entity.PropCollidingWith
  commentId: P:GTA.Entity.PropCollidingWith
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_PropCollidingWith
  name: PropCollidingWith
  nameWithType: Entity.PropCollidingWith
  fullName: GTA.Entity.PropCollidingWith
- uid: GTA.Entity.IsCollisionEnabled
  commentId: P:GTA.Entity.IsCollisionEnabled
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsCollisionEnabled
  name: IsCollisionEnabled
  nameWithType: Entity.IsCollisionEnabled
  fullName: GTA.Entity.IsCollisionEnabled
- uid: GTA.Entity.IsRecordingCollisions
  commentId: P:GTA.Entity.IsRecordingCollisions
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsRecordingCollisions
  name: IsRecordingCollisions
  nameWithType: Entity.IsRecordingCollisions
  fullName: GTA.Entity.IsRecordingCollisions
- uid: GTA.Entity.AttachedBlip
  commentId: P:GTA.Entity.AttachedBlip
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachedBlip
  name: AttachedBlip
  nameWithType: Entity.AttachedBlip
  fullName: GTA.Entity.AttachedBlip
- uid: GTA.Entity.AttachedBlips
  commentId: P:GTA.Entity.AttachedBlips
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachedBlips
  name: AttachedBlips
  nameWithType: Entity.AttachedBlips
  fullName: GTA.Entity.AttachedBlips
- uid: GTA.Entity.AttachedEntity
  commentId: P:GTA.Entity.AttachedEntity
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_AttachedEntity
  name: AttachedEntity
  nameWithType: Entity.AttachedEntity
  fullName: GTA.Entity.AttachedEntity
- uid: GTA.Entity.HasPhysics
  commentId: P:GTA.Entity.HasPhysics
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasPhysics
  name: HasPhysics
  nameWithType: Entity.HasPhysics
  fullName: GTA.Entity.HasPhysics
- uid: GTA.Entity.IsStatic
  commentId: P:GTA.Entity.IsStatic
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_IsStatic
  name: IsStatic
  nameWithType: Entity.IsStatic
  fullName: GTA.Entity.IsStatic
- uid: GTA.Entity.CenterOfGravityOffset
  commentId: P:GTA.Entity.CenterOfGravityOffset
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CenterOfGravityOffset
  name: CenterOfGravityOffset
  nameWithType: Entity.CenterOfGravityOffset
  fullName: GTA.Entity.CenterOfGravityOffset
- uid: GTA.Entity.CurrentInteriorProxy
  commentId: P:GTA.Entity.CurrentInteriorProxy
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CurrentInteriorProxy
  name: CurrentInteriorProxy
  nameWithType: Entity.CurrentInteriorProxy
  fullName: GTA.Entity.CurrentInteriorProxy
- uid: GTA.Entity.CurrentInteriorRoomKey
  commentId: P:GTA.Entity.CurrentInteriorRoomKey
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_CurrentInteriorRoomKey
  name: CurrentInteriorRoomKey
  nameWithType: Entity.CurrentInteriorRoomKey
  fullName: GTA.Entity.CurrentInteriorRoomKey
- uid: GTA.PoolObject.Handle
  commentId: P:GTA.PoolObject.Handle
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_Handle
  name: Handle
  nameWithType: PoolObject.Handle
  fullName: GTA.PoolObject.Handle
- uid: GTA.PoolObject.NativeValue
  commentId: P:GTA.PoolObject.NativeValue
  parent: GTA.PoolObject
  isExternal: true
  href: GTA.PoolObject.html#GTA_PoolObject_NativeValue
  name: NativeValue
  nameWithType: PoolObject.NativeValue
  fullName: GTA.PoolObject.NativeValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Native
  commentId: N:GTA.Native
  isExternal: true
  href: GTA.html
  name: GTA.Native
  nameWithType: GTA.Native
  fullName: GTA.Native
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
- uid: GTA.Ped.SetAsCop*
  commentId: Overload:GTA.Ped.SetAsCop
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetAsCop_System_Boolean_
  name: SetAsCop
  nameWithType: Ped.SetAsCop
  fullName: GTA.Ped.SetAsCop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.Ped.Clone*
  commentId: Overload:GTA.Ped.Clone
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Clone_System_Boolean_
  name: Clone
  nameWithType: Ped.Clone
  fullName: GTA.Ped.Clone
- uid: GTA.Ped
  commentId: T:GTA.Ped
  parent: GTA
  isExternal: true
  href: GTA.Ped.html
  name: Ped
  nameWithType: Ped
  fullName: GTA.Ped
- uid: GTA.Ped.CloneAlt*
  commentId: Overload:GTA.Ped.CloneAlt
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CloneAlt_System_Boolean_System_Boolean_
  name: CloneAlt
  nameWithType: Ped.CloneAlt
  fullName: GTA.Ped.CloneAlt
- uid: GTA.Ped.CloneToTarget*
  commentId: Overload:GTA.Ped.CloneToTarget
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CloneToTarget_GTA_Ped_
  name: CloneToTarget
  nameWithType: Ped.CloneToTarget
  fullName: GTA.Ped.CloneToTarget
- uid: GTA.Ped.CloneToTargetAlt*
  commentId: Overload:GTA.Ped.CloneToTargetAlt
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CloneToTargetAlt_GTA_Ped_System_Boolean_
  name: CloneToTargetAlt
  nameWithType: Ped.CloneToTargetAlt
  fullName: GTA.Ped.CloneToTargetAlt
- uid: GTA.Ped.Kill*
  commentId: Overload:GTA.Ped.Kill
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Kill
  name: Kill
  nameWithType: Ped.Kill
  fullName: GTA.Ped.Kill
- uid: GTA.Ped.Resurrect*
  commentId: Overload:GTA.Ped.Resurrect
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Resurrect
  name: Resurrect
  nameWithType: Ped.Resurrect
  fullName: GTA.Ped.Resurrect
- uid: GTA.Ped.Exists*
  commentId: Overload:GTA.Ped.Exists
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Exists
  name: Exists
  nameWithType: Ped.Exists
  fullName: GTA.Ped.Exists
- uid: GTA.Ped.ClearBloodDamage*
  commentId: Overload:GTA.Ped.ClearBloodDamage
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearBloodDamage
  name: ClearBloodDamage
  nameWithType: Ped.ClearBloodDamage
  fullName: GTA.Ped.ClearBloodDamage
- uid: GTA.Ped.ClearVisibleDamage*
  commentId: Overload:GTA.Ped.ClearVisibleDamage
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearVisibleDamage
  name: ClearVisibleDamage
  nameWithType: Ped.ClearVisibleDamage
  fullName: GTA.Ped.ClearVisibleDamage
- uid: GTA.Ped.GiveHelmet*
  commentId: Overload:GTA.Ped.GiveHelmet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GiveHelmet_System_Boolean_GTA_HelmetPropFlags_System_Int32_
  name: GiveHelmet
  nameWithType: Ped.GiveHelmet
  fullName: GTA.Ped.GiveHelmet
- uid: GTA.HelmetPropFlags
  commentId: T:GTA.HelmetPropFlags
  parent: GTA
  isExternal: true
  href: GTA.HelmetPropFlags.html
  name: HelmetPropFlags
  nameWithType: HelmetPropFlags
  fullName: GTA.HelmetPropFlags
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Ped.RemoveHelmet*
  commentId: Overload:GTA.Ped.RemoveHelmet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_RemoveHelmet_System_Boolean_
  name: RemoveHelmet
  nameWithType: Ped.RemoveHelmet
  fullName: GTA.Ped.RemoveHelmet
- uid: GTA.Ped.Wet*
  commentId: Overload:GTA.Ped.Wet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Wet_System_Single_
  name: Wet
  nameWithType: Ped.Wet
  fullName: GTA.Ped.Wet
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Ped.DryOff*
  commentId: Overload:GTA.Ped.DryOff
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DryOff
  name: DryOff
  nameWithType: Ped.DryOff
  fullName: GTA.Ped.DryOff
- uid: GTA.Ped.SetWetnessEnabledThisFrame*
  commentId: Overload:GTA.Ped.SetWetnessEnabledThisFrame
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetWetnessEnabledThisFrame
  name: SetWetnessEnabledThisFrame
  nameWithType: Ped.SetWetnessEnabledThisFrame
  fullName: GTA.Ped.SetWetnessEnabledThisFrame
- uid: GTA.Ped.GetConfigFlag*
  commentId: Overload:GTA.Ped.GetConfigFlag
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetConfigFlag_GTA_PedConfigFlagToggles_
  name: GetConfigFlag
  nameWithType: Ped.GetConfigFlag
  fullName: GTA.Ped.GetConfigFlag
- uid: GTA.PedConfigFlagToggles
  commentId: T:GTA.PedConfigFlagToggles
  parent: GTA
  isExternal: true
  href: GTA.PedConfigFlagToggles.html
  name: PedConfigFlagToggles
  nameWithType: PedConfigFlagToggles
  fullName: GTA.PedConfigFlagToggles
- uid: GTA.Ped.SetConfigFlag*
  commentId: Overload:GTA.Ped.SetConfigFlag
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetConfigFlag_GTA_PedConfigFlagToggles_System_Boolean_
  name: SetConfigFlag
  nameWithType: Ped.SetConfigFlag
  fullName: GTA.Ped.SetConfigFlag
- uid: GTA.Ped.GetResetFlag*
  commentId: Overload:GTA.Ped.GetResetFlag
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetResetFlag_GTA_PedResetFlagToggles_
  name: GetResetFlag
  nameWithType: Ped.GetResetFlag
  fullName: GTA.Ped.GetResetFlag
- uid: GTA.PedResetFlagToggles
  commentId: T:GTA.PedResetFlagToggles
  parent: GTA
  isExternal: true
  href: GTA.PedResetFlagToggles.html
  name: PedResetFlagToggles
  nameWithType: PedResetFlagToggles
  fullName: GTA.PedResetFlagToggles
- uid: GTA.Ped.SetResetFlag*
  commentId: Overload:GTA.Ped.SetResetFlag
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetResetFlag_GTA_PedResetFlagToggles_System_Boolean_
  name: SetResetFlag
  nameWithType: Ped.SetResetFlag
  fullName: GTA.Ped.SetResetFlag
- uid: GTA.Ped.ResetConfigFlag*
  commentId: Overload:GTA.Ped.ResetConfigFlag
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ResetConfigFlag_System_Int32_
  name: ResetConfigFlag
  nameWithType: Ped.ResetConfigFlag
  fullName: GTA.Ped.ResetConfigFlag
- uid: GTA.Ped.SetIsPersistentNoClearTask*
  commentId: Overload:GTA.Ped.SetIsPersistentNoClearTask
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetIsPersistentNoClearTask_System_Boolean_
  name: SetIsPersistentNoClearTask
  nameWithType: Ped.SetIsPersistentNoClearTask
  fullName: GTA.Ped.SetIsPersistentNoClearTask
- uid: GTA.Ped.IsHeadtracking*
  commentId: Overload:GTA.Ped.IsHeadtracking
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsHeadtracking_GTA_Entity_
  name: IsHeadtracking
  nameWithType: Ped.IsHeadtracking
  fullName: GTA.Ped.IsHeadtracking
- uid: GTA.Ped.GetScriptTaskStatus*
  commentId: Overload:GTA.Ped.GetScriptTaskStatus
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetScriptTaskStatus_GTA_ScriptTaskNameHash_
  name: GetScriptTaskStatus
  nameWithType: Ped.GetScriptTaskStatus
  fullName: GTA.Ped.GetScriptTaskStatus
- uid: GTA.ScriptTaskNameHash
  commentId: T:GTA.ScriptTaskNameHash
  parent: GTA
  isExternal: true
  href: GTA.ScriptTaskNameHash.html
  name: ScriptTaskNameHash
  nameWithType: ScriptTaskNameHash
  fullName: GTA.ScriptTaskNameHash
- uid: GTA.ScriptTaskStatus
  commentId: T:GTA.ScriptTaskStatus
  parent: GTA
  isExternal: true
  href: GTA.ScriptTaskStatus.html
  name: ScriptTaskStatus
  nameWithType: ScriptTaskStatus
  fullName: GTA.ScriptTaskStatus
- uid: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus*
  commentId: Overload:GTA.Ped.GetCurrentScriptTaskNameHashAndStatus
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetCurrentScriptTaskNameHashAndStatus_GTA_ScriptTaskNameHash__GTA_ScriptTaskStatus__
  name: GetCurrentScriptTaskNameHashAndStatus
  nameWithType: Ped.GetCurrentScriptTaskNameHashAndStatus
  fullName: GTA.Ped.GetCurrentScriptTaskNameHashAndStatus
- uid: GTA.Ped.GetNavMeshRouteResult*
  commentId: Overload:GTA.Ped.GetNavMeshRouteResult
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetNavMeshRouteResult
  name: GetNavMeshRouteResult
  nameWithType: Ped.GetNavMeshRouteResult
  fullName: GTA.Ped.GetNavMeshRouteResult
- uid: GTA.NavMeshRouteResult
  commentId: T:GTA.NavMeshRouteResult
  parent: GTA
  isExternal: true
  href: GTA.NavMeshRouteResult.html
  name: NavMeshRouteResult
  nameWithType: NavMeshRouteResult
  fullName: GTA.NavMeshRouteResult
- uid: GTA.Ped.SetVehicleChaseBehaviorFlags*
  commentId: Overload:GTA.Ped.SetVehicleChaseBehaviorFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetVehicleChaseBehaviorFlags_GTA_VehicleChaseBehaviorFlags_System_Boolean_
  name: SetVehicleChaseBehaviorFlags
  nameWithType: Ped.SetVehicleChaseBehaviorFlags
  fullName: GTA.Ped.SetVehicleChaseBehaviorFlags
- uid: GTA.VehicleChaseBehaviorFlags
  commentId: T:GTA.VehicleChaseBehaviorFlags
  parent: GTA
  isExternal: true
  href: GTA.VehicleChaseBehaviorFlags.html
  name: VehicleChaseBehaviorFlags
  nameWithType: VehicleChaseBehaviorFlags
  fullName: GTA.VehicleChaseBehaviorFlags
- uid: GTA.Ped.SetVehicleChaseIdealPursuitDistance*
  commentId: Overload:GTA.Ped.SetVehicleChaseIdealPursuitDistance
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetVehicleChaseIdealPursuitDistance_System_Single_
  name: SetVehicleChaseIdealPursuitDistance
  nameWithType: Ped.SetVehicleChaseIdealPursuitDistance
  fullName: GTA.Ped.SetVehicleChaseIdealPursuitDistance
- uid: GTA.Ped.ForceMotionStateThisFrame*
  commentId: Overload:GTA.Ped.ForceMotionStateThisFrame
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ForceMotionStateThisFrame_GTA_PedMotionState_System_Boolean_GTA_ForceAnimAIUpdateState_System_Boolean_
  name: ForceMotionStateThisFrame
  nameWithType: Ped.ForceMotionStateThisFrame
  fullName: GTA.Ped.ForceMotionStateThisFrame
- uid: GTA.PedMotionState
  commentId: T:GTA.PedMotionState
  parent: GTA
  isExternal: true
  href: GTA.PedMotionState.html
  name: PedMotionState
  nameWithType: PedMotionState
  fullName: GTA.PedMotionState
- uid: GTA.ForceAnimAIUpdateState
  commentId: T:GTA.ForceAnimAIUpdateState
  parent: GTA
  isExternal: true
  href: GTA.ForceAnimAIUpdateState.html
  name: ForceAnimAIUpdateState
  nameWithType: ForceAnimAIUpdateState
  fullName: GTA.ForceAnimAIUpdateState
- uid: GTA.Ped.HasReceivedEvent*
  commentId: Overload:GTA.Ped.HasReceivedEvent
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_HasReceivedEvent_GTA_EventType_
  name: HasReceivedEvent
  nameWithType: Ped.HasReceivedEvent
  fullName: GTA.Ped.HasReceivedEvent
- uid: GTA.EventType
  commentId: T:GTA.EventType
  parent: GTA
  isExternal: true
  href: GTA.EventType.html
  name: EventType
  nameWithType: EventType
  fullName: GTA.EventType
- uid: GTA.Ped.IsRespondingToEvent*
  commentId: Overload:GTA.Ped.IsRespondingToEvent
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsRespondingToEvent_GTA_EventType_
  name: IsRespondingToEvent
  nameWithType: Ped.IsRespondingToEvent
  fullName: GTA.Ped.IsRespondingToEvent
- uid: GTA.Ped.Ragdoll*
  commentId: Overload:GTA.Ped.Ragdoll
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Ragdoll_System_Int32_GTA_RagdollType_
  name: Ragdoll
  nameWithType: Ped.Ragdoll
  fullName: GTA.Ped.Ragdoll
- uid: GTA.RagdollType
  commentId: T:GTA.RagdollType
  parent: GTA
  isExternal: true
  href: GTA.RagdollType.html
  name: RagdollType
  nameWithType: RagdollType
  fullName: GTA.RagdollType
- uid: GTA.Ped.SetToRagdoll*
  commentId: Overload:GTA.Ped.SetToRagdoll
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetToRagdoll_System_Int32_System_Int32_GTA_RagdollType_System_Boolean_
  name: SetToRagdoll
  nameWithType: Ped.SetToRagdoll
  fullName: GTA.Ped.SetToRagdoll
- uid: GTA.Ped.SetToRagdollWithFall*
  commentId: Overload:GTA.Ped.SetToRagdollWithFall
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetToRagdollWithFall_System_Int32_System_Int32_GTA_RagdollFallType_GTA_Math_Vector3_System_Single_
  name: SetToRagdollWithFall
  nameWithType: Ped.SetToRagdollWithFall
  fullName: GTA.Ped.SetToRagdollWithFall
- uid: GTA.RagdollFallType
  commentId: T:GTA.RagdollFallType
  parent: GTA
  isExternal: true
  href: GTA.RagdollFallType.html
  name: RagdollFallType
  nameWithType: RagdollFallType
  fullName: GTA.RagdollFallType
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.Ped.CancelRagdoll*
  commentId: Overload:GTA.Ped.CancelRagdoll
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CancelRagdoll
  name: CancelRagdoll
  nameWithType: Ped.CancelRagdoll
  fullName: GTA.Ped.CancelRagdoll
- uid: GTA.Ped.SetRagdollBlockingFlags*
  commentId: Overload:GTA.Ped.SetRagdollBlockingFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetRagdollBlockingFlags_GTA_RagdollBlockingFlags_
  name: SetRagdollBlockingFlags
  nameWithType: Ped.SetRagdollBlockingFlags
  fullName: GTA.Ped.SetRagdollBlockingFlags
- uid: GTA.RagdollBlockingFlags
  commentId: T:GTA.RagdollBlockingFlags
  parent: GTA
  isExternal: true
  href: GTA.RagdollBlockingFlags.html
  name: RagdollBlockingFlags
  nameWithType: RagdollBlockingFlags
  fullName: GTA.RagdollBlockingFlags
- uid: GTA.Ped.ClearRagdollBlockingFlags*
  commentId: Overload:GTA.Ped.ClearRagdollBlockingFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearRagdollBlockingFlags_GTA_RagdollBlockingFlags_
  name: ClearRagdollBlockingFlags
  nameWithType: Ped.ClearRagdollBlockingFlags
  fullName: GTA.Ped.ClearRagdollBlockingFlags
- uid: GTA.Ped.SetCombatAttribute*
  commentId: Overload:GTA.Ped.SetCombatAttribute
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetCombatAttribute_GTA_CombatAttributes_System_Boolean_
  name: SetCombatAttribute
  nameWithType: Ped.SetCombatAttribute
  fullName: GTA.Ped.SetCombatAttribute
- uid: GTA.CombatAttributes
  commentId: T:GTA.CombatAttributes
  parent: GTA
  isExternal: true
  href: GTA.CombatAttributes.html
  name: CombatAttributes
  nameWithType: CombatAttributes
  fullName: GTA.CombatAttributes
- uid: GTA.Ped.SetCombatFloatAttribute*
  commentId: Overload:GTA.Ped.SetCombatFloatAttribute
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetCombatFloatAttribute_GTA_CombatFloatAttributes_System_Single_
  name: SetCombatFloatAttribute
  nameWithType: Ped.SetCombatFloatAttribute
  fullName: GTA.Ped.SetCombatFloatAttribute
- uid: GTA.CombatFloatAttributes
  commentId: T:GTA.CombatFloatAttributes
  parent: GTA
  isExternal: true
  href: GTA.CombatFloatAttributes.html
  name: CombatFloatAttributes
  nameWithType: CombatFloatAttributes
  fullName: GTA.CombatFloatAttributes
- uid: GTA.Ped.GetCombatFloatAttribute*
  commentId: Overload:GTA.Ped.GetCombatFloatAttribute
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetCombatFloatAttribute_GTA_CombatFloatAttributes_
  name: GetCombatFloatAttribute
  nameWithType: Ped.GetCombatFloatAttribute
  fullName: GTA.Ped.GetCombatFloatAttribute
- uid: GTA.Ped.SetFleeAttributes*
  commentId: Overload:GTA.Ped.SetFleeAttributes
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetFleeAttributes_GTA_FleeAttributes_System_Boolean_
  name: SetFleeAttributes
  nameWithType: Ped.SetFleeAttributes
  fullName: GTA.Ped.SetFleeAttributes
- uid: GTA.FleeAttributes
  commentId: T:GTA.FleeAttributes
  parent: GTA
  isExternal: true
  href: GTA.FleeAttributes.html
  name: FleeAttributes
  nameWithType: FleeAttributes
  fullName: GTA.FleeAttributes
- uid: GTA.Ped.TrySetVehicleWeapon*
  commentId: Overload:GTA.Ped.TrySetVehicleWeapon
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_TrySetVehicleWeapon_GTA_VehicleWeaponHash_
  name: TrySetVehicleWeapon
  nameWithType: Ped.TrySetVehicleWeapon
  fullName: GTA.Ped.TrySetVehicleWeapon
- uid: GTA.VehicleWeaponHash
  commentId: T:GTA.VehicleWeaponHash
  parent: GTA
  isExternal: true
  href: GTA.VehicleWeaponHash.html
  name: VehicleWeaponHash
  nameWithType: VehicleWeaponHash
  fullName: GTA.VehicleWeaponHash
- uid: GTA.Ped.FireVehicleWeaponAt*
  commentId: Overload:GTA.Ped.FireVehicleWeaponAt
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_FireVehicleWeaponAt_GTA_Entity_
  name: FireVehicleWeaponAt
  nameWithType: Ped.FireVehicleWeaponAt
  fullName: GTA.Ped.FireVehicleWeaponAt
- uid: GTA.Ped.IsInVehicle*
  commentId: Overload:GTA.Ped.IsInVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInVehicle
  name: IsInVehicle
  nameWithType: Ped.IsInVehicle
  fullName: GTA.Ped.IsInVehicle
- uid: GTA.Vehicle
  commentId: T:GTA.Vehicle
  parent: GTA
  isExternal: true
  href: GTA.Vehicle.html
  name: Vehicle
  nameWithType: Vehicle
  fullName: GTA.Vehicle
- uid: GTA.Ped.IsSittingInVehicle*
  commentId: Overload:GTA.Ped.IsSittingInVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsSittingInVehicle
  name: IsSittingInVehicle
  nameWithType: Ped.IsSittingInVehicle
  fullName: GTA.Ped.IsSittingInVehicle
- uid: GTA.Ped.IsStandingOnVehicle*
  commentId: Overload:GTA.Ped.IsStandingOnVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsStandingOnVehicle
  name: IsStandingOnVehicle
  nameWithType: Ped.IsStandingOnVehicle
  fullName: GTA.Ped.IsStandingOnVehicle
- uid: GTA.Ped.SetIntoVehicle*
  commentId: Overload:GTA.Ped.SetIntoVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetIntoVehicle_GTA_Vehicle_GTA_VehicleSeat_
  name: SetIntoVehicle
  nameWithType: Ped.SetIntoVehicle
  fullName: GTA.Ped.SetIntoVehicle
- uid: GTA.VehicleSeat
  commentId: T:GTA.VehicleSeat
  parent: GTA
  isExternal: true
  href: GTA.VehicleSeat.html
  name: VehicleSeat
  nameWithType: VehicleSeat
  fullName: GTA.VehicleSeat
- uid: GTA.Ped.OpenParachute*
  commentId: Overload:GTA.Ped.OpenParachute
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_OpenParachute
  name: OpenParachute
  nameWithType: Ped.OpenParachute
  fullName: GTA.Ped.OpenParachute
- uid: GTA.Ped.IsInCombatAgainst*
  commentId: Overload:GTA.Ped.IsInCombatAgainst
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInCombatAgainst_GTA_Ped_
  name: IsInCombatAgainst
  nameWithType: Ped.IsInCombatAgainst
  fullName: GTA.Ped.IsInCombatAgainst
- uid: GTA.Ped.ClearKillerRecord*
  commentId: Overload:GTA.Ped.ClearKillerRecord
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearKillerRecord
  name: ClearKillerRecord
  nameWithType: Ped.ClearKillerRecord
  fullName: GTA.Ped.ClearKillerRecord
- uid: GTA.Ped.ClearCauseOfDeathRecord*
  commentId: Overload:GTA.Ped.ClearCauseOfDeathRecord
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearCauseOfDeathRecord
  name: ClearCauseOfDeathRecord
  nameWithType: Ped.ClearCauseOfDeathRecord
  fullName: GTA.Ped.ClearCauseOfDeathRecord
- uid: GTA.Ped.ClearTimeOfDeathRecord*
  commentId: Overload:GTA.Ped.ClearTimeOfDeathRecord
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearTimeOfDeathRecord
  name: ClearTimeOfDeathRecord
  nameWithType: Ped.ClearTimeOfDeathRecord
  fullName: GTA.Ped.ClearTimeOfDeathRecord
- uid: GTA.Ped.ApplyDamage*
  commentId: Overload:GTA.Ped.ApplyDamage
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyDamage_System_Int32_
  name: ApplyDamage
  nameWithType: Ped.ApplyDamage
  fullName: GTA.Ped.ApplyDamage
- uid: GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
  commentId: M:GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_WeaponHash_
  name: HasBeenDamagedBy(WeaponHash)
  nameWithType: Entity.HasBeenDamagedBy(WeaponHash)
  fullName: GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
  spec.csharp:
  - uid: GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
    name: HasBeenDamagedBy
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_WeaponHash_
  - name: (
  - uid: GTA.WeaponHash
    name: WeaponHash
    isExternal: true
    href: GTA.WeaponHash.html
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasBeenDamagedBy(GTA.WeaponHash)
    name: HasBeenDamagedBy
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedBy_GTA_WeaponHash_
  - name: (
  - uid: GTA.WeaponHash
    name: WeaponHash
    isExternal: true
    href: GTA.WeaponHash.html
  - name: )
- uid: GTA.Ped.HasBeenDamagedBy*
  commentId: Overload:GTA.Ped.HasBeenDamagedBy
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_HasBeenDamagedBy_GTA_WeaponHash_
  name: HasBeenDamagedBy
  nameWithType: Ped.HasBeenDamagedBy
  fullName: GTA.Ped.HasBeenDamagedBy
- uid: GTA.WeaponHash
  commentId: T:GTA.WeaponHash
  parent: GTA
  isExternal: true
  href: GTA.WeaponHash.html
  name: WeaponHash
  nameWithType: WeaponHash
  fullName: GTA.WeaponHash
- uid: GTA.Entity.HasBeenDamagedByAnyWeapon
  commentId: M:GTA.Entity.HasBeenDamagedByAnyWeapon
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyWeapon
  name: HasBeenDamagedByAnyWeapon()
  nameWithType: Entity.HasBeenDamagedByAnyWeapon()
  fullName: GTA.Entity.HasBeenDamagedByAnyWeapon()
  spec.csharp:
  - uid: GTA.Entity.HasBeenDamagedByAnyWeapon
    name: HasBeenDamagedByAnyWeapon
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyWeapon
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasBeenDamagedByAnyWeapon
    name: HasBeenDamagedByAnyWeapon
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyWeapon
  - name: (
  - name: )
- uid: GTA.Ped.HasBeenDamagedByAnyWeapon*
  commentId: Overload:GTA.Ped.HasBeenDamagedByAnyWeapon
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_HasBeenDamagedByAnyWeapon
  name: HasBeenDamagedByAnyWeapon
  nameWithType: Ped.HasBeenDamagedByAnyWeapon
  fullName: GTA.Ped.HasBeenDamagedByAnyWeapon
- uid: GTA.Entity.HasBeenDamagedByAnyMeleeWeapon
  commentId: M:GTA.Entity.HasBeenDamagedByAnyMeleeWeapon
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyMeleeWeapon
  name: HasBeenDamagedByAnyMeleeWeapon()
  nameWithType: Entity.HasBeenDamagedByAnyMeleeWeapon()
  fullName: GTA.Entity.HasBeenDamagedByAnyMeleeWeapon()
  spec.csharp:
  - uid: GTA.Entity.HasBeenDamagedByAnyMeleeWeapon
    name: HasBeenDamagedByAnyMeleeWeapon
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyMeleeWeapon
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.HasBeenDamagedByAnyMeleeWeapon
    name: HasBeenDamagedByAnyMeleeWeapon
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_HasBeenDamagedByAnyMeleeWeapon
  - name: (
  - name: )
- uid: GTA.Ped.HasBeenDamagedByAnyMeleeWeapon*
  commentId: Overload:GTA.Ped.HasBeenDamagedByAnyMeleeWeapon
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_HasBeenDamagedByAnyMeleeWeapon
  name: HasBeenDamagedByAnyMeleeWeapon
  nameWithType: Ped.HasBeenDamagedByAnyMeleeWeapon
  fullName: GTA.Ped.HasBeenDamagedByAnyMeleeWeapon
- uid: GTA.Entity.ClearLastWeaponDamage
  commentId: M:GTA.Entity.ClearLastWeaponDamage
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_ClearLastWeaponDamage
  name: ClearLastWeaponDamage()
  nameWithType: Entity.ClearLastWeaponDamage()
  fullName: GTA.Entity.ClearLastWeaponDamage()
  spec.csharp:
  - uid: GTA.Entity.ClearLastWeaponDamage
    name: ClearLastWeaponDamage
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearLastWeaponDamage
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.Entity.ClearLastWeaponDamage
    name: ClearLastWeaponDamage
    isExternal: true
    href: GTA.Entity.html#GTA_Entity_ClearLastWeaponDamage
  - name: (
  - name: )
- uid: GTA.Ped.ClearLastWeaponDamage*
  commentId: Overload:GTA.Ped.ClearLastWeaponDamage
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ClearLastWeaponDamage
  name: ClearLastWeaponDamage
  nameWithType: Ped.ClearLastWeaponDamage
  fullName: GTA.Ped.ClearLastWeaponDamage
- uid: GTA.Ped.GetRelationshipWithPed*
  commentId: Overload:GTA.Ped.GetRelationshipWithPed
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetRelationshipWithPed_GTA_Ped_
  name: GetRelationshipWithPed
  nameWithType: Ped.GetRelationshipWithPed
  fullName: GTA.Ped.GetRelationshipWithPed
- uid: GTA.Relationship
  commentId: T:GTA.Relationship
  parent: GTA
  isExternal: true
  href: GTA.Relationship.html
  name: Relationship
  nameWithType: Relationship
  fullName: GTA.Relationship
- uid: GTA.Ped.LeaveGroup*
  commentId: Overload:GTA.Ped.LeaveGroup
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_LeaveGroup
  name: LeaveGroup
  nameWithType: Ped.LeaveGroup
  fullName: GTA.Ped.LeaveGroup
- uid: GTA.Ped.PlayAmbientSpeech*
  commentId: Overload:GTA.Ped.PlayAmbientSpeech
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_PlayAmbientSpeech_System_String_GTA_SpeechModifier_
  name: PlayAmbientSpeech
  nameWithType: Ped.PlayAmbientSpeech
  fullName: GTA.Ped.PlayAmbientSpeech
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.SpeechModifier
  commentId: T:GTA.SpeechModifier
  parent: GTA
  isExternal: true
  href: GTA.SpeechModifier.html
  name: SpeechModifier
  nameWithType: SpeechModifier
  fullName: GTA.SpeechModifier
- uid: GTA.Ped.StopCurrentPlayingSpeech*
  commentId: Overload:GTA.Ped.StopCurrentPlayingSpeech
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_StopCurrentPlayingSpeech
  name: StopCurrentPlayingSpeech
  nameWithType: Ped.StopCurrentPlayingSpeech
  fullName: GTA.Ped.StopCurrentPlayingSpeech
- uid: GTA.Ped.StopCurrentPlayingAmbientSpeech*
  commentId: Overload:GTA.Ped.StopCurrentPlayingAmbientSpeech
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_StopCurrentPlayingAmbientSpeech
  name: StopCurrentPlayingAmbientSpeech
  nameWithType: Ped.StopCurrentPlayingAmbientSpeech
  fullName: GTA.Ped.StopCurrentPlayingAmbientSpeech
- uid: GTA.Ped.SetMovementClipSet*
  commentId: Overload:GTA.Ped.SetMovementClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetMovementClipSet_GTA_ClipSet_System_Nullable_GTA_AnimationBlendDuration__
  name: SetMovementClipSet
  nameWithType: Ped.SetMovementClipSet
  fullName: GTA.Ped.SetMovementClipSet
- uid: GTA.ClipSet
  commentId: T:GTA.ClipSet
  parent: GTA
  isExternal: true
  href: GTA.ClipSet.html
  name: ClipSet
  nameWithType: ClipSet
  fullName: GTA.ClipSet
- uid: System.Nullable{GTA.AnimationBlendDuration}
  commentId: T:System.Nullable{GTA.AnimationBlendDuration}
  parent: System
  definition: System.Nullable`1
  href: GTA.AnimationBlendDuration.html
  name: AnimationBlendDuration?
  nameWithType: AnimationBlendDuration?
  fullName: GTA.AnimationBlendDuration?
  spec.csharp:
  - uid: GTA.AnimationBlendDuration
    name: AnimationBlendDuration
    isExternal: true
    href: GTA.AnimationBlendDuration.html
  - name: '?'
  spec.vb:
  - uid: GTA.AnimationBlendDuration
    name: AnimationBlendDuration
    isExternal: true
    href: GTA.AnimationBlendDuration.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: GTA.Ped.ResetMovementClipSet*
  commentId: Overload:GTA.Ped.ResetMovementClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ResetMovementClipSet_System_Nullable_GTA_AnimationBlendDuration__
  name: ResetMovementClipSet
  nameWithType: Ped.ResetMovementClipSet
  fullName: GTA.Ped.ResetMovementClipSet
- uid: GTA.Ped.SetStrafeClipSet*
  commentId: Overload:GTA.Ped.SetStrafeClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetStrafeClipSet_GTA_ClipSet_
  name: SetStrafeClipSet
  nameWithType: Ped.SetStrafeClipSet
  fullName: GTA.Ped.SetStrafeClipSet
- uid: GTA.Ped.ResetStrafeClipSet*
  commentId: Overload:GTA.Ped.ResetStrafeClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ResetStrafeClipSet
  name: ResetStrafeClipSet
  nameWithType: Ped.ResetStrafeClipSet
  fullName: GTA.Ped.ResetStrafeClipSet
- uid: GTA.Ped.SetWeaponMovementClipSet*
  commentId: Overload:GTA.Ped.SetWeaponMovementClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetWeaponMovementClipSet_GTA_ClipSet_
  name: SetWeaponMovementClipSet
  nameWithType: Ped.SetWeaponMovementClipSet
  fullName: GTA.Ped.SetWeaponMovementClipSet
- uid: GTA.Ped.ResetWeaponMovementClipSet*
  commentId: Overload:GTA.Ped.ResetWeaponMovementClipSet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ResetWeaponMovementClipSet
  name: ResetWeaponMovementClipSet
  nameWithType: Ped.ResetWeaponMovementClipSet
  fullName: GTA.Ped.ResetWeaponMovementClipSet
- uid: GTA.Ped.ApplyWorldForceWorldOffset*
  commentId: Overload:GTA.Ped.ApplyWorldForceWorldOffset
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyWorldForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyWorldForceWorldOffset
  nameWithType: Ped.ApplyWorldForceWorldOffset
  fullName: GTA.Ped.ApplyWorldForceWorldOffset
- uid: GTA.ForceType
  commentId: T:GTA.ForceType
  parent: GTA
  isExternal: true
  href: GTA.ForceType.html
  name: ForceType
  nameWithType: ForceType
  fullName: GTA.ForceType
- uid: GTA.RagdollComponent
  commentId: T:GTA.RagdollComponent
  parent: GTA
  isExternal: true
  href: GTA.RagdollComponent.html
  name: RagdollComponent
  nameWithType: RagdollComponent
  fullName: GTA.RagdollComponent
- uid: GTA.Ped.ApplyWorldForceRelativeOffset*
  commentId: Overload:GTA.Ped.ApplyWorldForceRelativeOffset
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyWorldForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyWorldForceRelativeOffset
  nameWithType: Ped.ApplyWorldForceRelativeOffset
  fullName: GTA.Ped.ApplyWorldForceRelativeOffset
- uid: GTA.Ped.ApplyRelativeForceWorldOffset*
  commentId: Overload:GTA.Ped.ApplyRelativeForceWorldOffset
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyRelativeForceWorldOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyRelativeForceWorldOffset
  nameWithType: Ped.ApplyRelativeForceWorldOffset
  fullName: GTA.Ped.ApplyRelativeForceWorldOffset
- uid: GTA.Ped.ApplyRelativeForceRelativeOffset*
  commentId: Overload:GTA.Ped.ApplyRelativeForceRelativeOffset
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyRelativeForceRelativeOffset_GTA_Math_Vector3_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_System_Boolean_
  name: ApplyRelativeForceRelativeOffset
  nameWithType: Ped.ApplyRelativeForceRelativeOffset
  fullName: GTA.Ped.ApplyRelativeForceRelativeOffset
- uid: GTA.Ped.ApplyWorldForceCenterOfMass*
  commentId: Overload:GTA.Ped.ApplyWorldForceCenterOfMass
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyWorldForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_
  name: ApplyWorldForceCenterOfMass
  nameWithType: Ped.ApplyWorldForceCenterOfMass
  fullName: GTA.Ped.ApplyWorldForceCenterOfMass
- uid: GTA.Ped.ApplyRelativeForceCenterOfMass*
  commentId: Overload:GTA.Ped.ApplyRelativeForceCenterOfMass
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ApplyRelativeForceCenterOfMass_GTA_Math_Vector3_GTA_ForceType_GTA_RagdollComponent_System_Boolean_System_Boolean_
  name: ApplyRelativeForceCenterOfMass
  nameWithType: Ped.ApplyRelativeForceCenterOfMass
  fullName: GTA.Ped.ApplyRelativeForceCenterOfMass
- uid: GTA.Ped.SetIKTarget*
  commentId: Overload:GTA.Ped.SetIKTarget
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SetIKTarget_GTA_IKPart_GTA_PedBone_GTA_Math_Vector3_GTA_IKTargetFlags_System_Int32_System_Int32_
  name: SetIKTarget
  nameWithType: Ped.SetIKTarget
  fullName: GTA.Ped.SetIKTarget
- uid: GTA.IKPart
  commentId: T:GTA.IKPart
  parent: GTA
  isExternal: true
  href: GTA.IKPart.html
  name: IKPart
  nameWithType: IKPart
  fullName: GTA.IKPart
- uid: GTA.PedBone
  commentId: T:GTA.PedBone
  parent: GTA
  isExternal: true
  href: GTA.PedBone.html
  name: PedBone
  nameWithType: PedBone
  fullName: GTA.PedBone
- uid: GTA.IKTargetFlags
  commentId: T:GTA.IKTargetFlags
  parent: GTA
  isExternal: true
  href: GTA.IKTargetFlags.html
  name: IKTargetFlags
  nameWithType: IKTargetFlags
  fullName: GTA.IKTargetFlags
- uid: GTA.EntityBone
  commentId: T:GTA.EntityBone
  parent: GTA
  isExternal: true
  href: GTA.EntityBone.html
  name: EntityBone
  nameWithType: EntityBone
  fullName: GTA.EntityBone
- uid: GTA.Ped.GetAllModels*
  commentId: Overload:GTA.Ped.GetAllModels
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetAllModels
  name: GetAllModels
  nameWithType: Ped.GetAllModels
  fullName: GTA.Ped.GetAllModels
- uid: GTA.PedHash[]
  isExternal: true
  href: GTA.PedHash.html
  name: PedHash[]
  nameWithType: PedHash[]
  fullName: GTA.PedHash[]
  nameWithType.vb: PedHash()
  fullName.vb: GTA.PedHash()
  name.vb: PedHash()
  spec.csharp:
  - uid: GTA.PedHash
    name: PedHash
    isExternal: true
    href: GTA.PedHash.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: GTA.PedHash
    name: PedHash
    isExternal: true
    href: GTA.PedHash.html
  - name: (
  - name: )
- uid: GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds*
  commentId: Overload:GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GetAllLoadedModelsAppropriateForAmbientPeds
  name: GetAllLoadedModelsAppropriateForAmbientPeds
  nameWithType: Ped.GetAllLoadedModelsAppropriateForAmbientPeds
  fullName: GTA.Ped.GetAllLoadedModelsAppropriateForAmbientPeds
- uid: GTA.Ped.PedType*
  commentId: Overload:GTA.Ped.PedType
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_PedType
  name: PedType
  nameWithType: Ped.PedType
  fullName: GTA.Ped.PedType
- uid: GTA.PedType
  commentId: T:GTA.PedType
  parent: GTA
  isExternal: true
  href: GTA.PedType.html
  name: PedType
  nameWithType: PedType
  fullName: GTA.PedType
- uid: GTA.Ped.IsHuman*
  commentId: Overload:GTA.Ped.IsHuman
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsHuman
  name: IsHuman
  nameWithType: Ped.IsHuman
  fullName: GTA.Ped.IsHuman
- uid: GTA.Ped.IsCuffed*
  commentId: Overload:GTA.Ped.IsCuffed
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsCuffed
  name: IsCuffed
  nameWithType: Ped.IsCuffed
  fullName: GTA.Ped.IsCuffed
- uid: GTA.Ped.CanWearHelmet*
  commentId: Overload:GTA.Ped.CanWearHelmet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanWearHelmet
  name: CanWearHelmet
  nameWithType: Ped.CanWearHelmet
  fullName: GTA.Ped.CanWearHelmet
- uid: GTA.Ped.IsWearingHelmet*
  commentId: Overload:GTA.Ped.IsWearingHelmet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsWearingHelmet
  name: IsWearingHelmet
  nameWithType: Ped.IsWearingHelmet
  fullName: GTA.Ped.IsWearingHelmet
- uid: GTA.Ped.IsTakingOffHelmet*
  commentId: Overload:GTA.Ped.IsTakingOffHelmet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsTakingOffHelmet
  name: IsTakingOffHelmet
  nameWithType: Ped.IsTakingOffHelmet
  fullName: GTA.Ped.IsTakingOffHelmet
- uid: GTA.Ped.Style*
  commentId: Overload:GTA.Ped.Style
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Style
  name: Style
  nameWithType: Ped.Style
  fullName: GTA.Ped.Style
- uid: GTA.Style
  commentId: T:GTA.Style
  parent: GTA
  isExternal: true
  href: GTA.Style.html
  name: Style
  nameWithType: Style
  fullName: GTA.Style
- uid: GTA.Ped.Gender*
  commentId: Overload:GTA.Ped.Gender
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Gender
  name: Gender
  nameWithType: Ped.Gender
  fullName: GTA.Ped.Gender
- uid: GTA.Gender
  commentId: T:GTA.Gender
  parent: GTA
  isExternal: true
  href: GTA.Gender.html
  name: Gender
  nameWithType: Gender
  fullName: GTA.Gender
- uid: GTA.Ped.Sweat*
  commentId: Overload:GTA.Ped.Sweat
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Sweat
  name: Sweat
  nameWithType: Ped.Sweat
  fullName: GTA.Ped.Sweat
- uid: GTA.Ped.LowerWetnessHeight*
  commentId: Overload:GTA.Ped.LowerWetnessHeight
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_LowerWetnessHeight
  name: LowerWetnessHeight
  nameWithType: Ped.LowerWetnessHeight
  fullName: GTA.Ped.LowerWetnessHeight
- uid: GTA.Ped.UpperWetnessHeight*
  commentId: Overload:GTA.Ped.UpperWetnessHeight
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_UpperWetnessHeight
  name: UpperWetnessHeight
  nameWithType: Ped.UpperWetnessHeight
  fullName: GTA.Ped.UpperWetnessHeight
- uid: GTA.Ped.LowerWetnessLevel*
  commentId: Overload:GTA.Ped.LowerWetnessLevel
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_LowerWetnessLevel
  name: LowerWetnessLevel
  nameWithType: Ped.LowerWetnessLevel
  fullName: GTA.Ped.LowerWetnessLevel
- uid: GTA.Ped.UpperWetnessLevel*
  commentId: Overload:GTA.Ped.UpperWetnessLevel
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_UpperWetnessLevel
  name: UpperWetnessLevel
  nameWithType: Ped.UpperWetnessLevel
  fullName: GTA.Ped.UpperWetnessLevel
- uid: GTA.Ped.IsWet*
  commentId: Overload:GTA.Ped.IsWet
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsWet
  name: IsWet
  nameWithType: Ped.IsWet
  fullName: GTA.Ped.IsWet
- uid: GTA.Ped.Armor*
  commentId: Overload:GTA.Ped.Armor
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Armor
  name: Armor
  nameWithType: Ped.Armor
  fullName: GTA.Ped.Armor
- uid: GTA.Ped.ArmorFloat*
  commentId: Overload:GTA.Ped.ArmorFloat
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ArmorFloat
  name: ArmorFloat
  nameWithType: Ped.ArmorFloat
  fullName: GTA.Ped.ArmorFloat
- uid: GTA.Ped.Money*
  commentId: Overload:GTA.Ped.Money
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Money
  name: Money
  nameWithType: Ped.Money
  fullName: GTA.Ped.Money
- uid: GTA.Entity.MaxHealth
  commentId: P:GTA.Entity.MaxHealth
  parent: GTA.Entity
  isExternal: true
  href: GTA.Entity.html#GTA_Entity_MaxHealth
  name: MaxHealth
  nameWithType: Entity.MaxHealth
  fullName: GTA.Entity.MaxHealth
- uid: GTA.Ped.MaxHealth*
  commentId: Overload:GTA.Ped.MaxHealth
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_MaxHealth
  name: MaxHealth
  nameWithType: Ped.MaxHealth
  fullName: GTA.Ped.MaxHealth
- uid: GTA.Ped.IsPlayer*
  commentId: Overload:GTA.Ped.IsPlayer
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPlayer
  name: IsPlayer
  nameWithType: Ped.IsPlayer
  fullName: GTA.Ped.IsPlayer
- uid: GTA.Ped.PedConfigFlags*
  commentId: Overload:GTA.Ped.PedConfigFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_PedConfigFlags
  name: PedConfigFlags
  nameWithType: Ped.PedConfigFlags
  fullName: GTA.Ped.PedConfigFlags
- uid: GTA.PedConfigFlags
  commentId: T:GTA.PedConfigFlags
  parent: GTA
  isExternal: true
  href: GTA.PedConfigFlags.html
  name: PedConfigFlags
  nameWithType: PedConfigFlags
  fullName: GTA.PedConfigFlags
- uid: GTA.Ped.PedResetFlags*
  commentId: Overload:GTA.Ped.PedResetFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_PedResetFlags
  name: PedResetFlags
  nameWithType: Ped.PedResetFlags
  fullName: GTA.Ped.PedResetFlags
- uid: GTA.PedResetFlags
  commentId: T:GTA.PedResetFlags
  parent: GTA
  isExternal: true
  href: GTA.PedResetFlags.html
  name: PedResetFlags
  nameWithType: PedResetFlags
  fullName: GTA.PedResetFlags
- uid: GTA.Ped.Bones*
  commentId: Overload:GTA.Ped.Bones
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Bones
  name: Bones
  nameWithType: Ped.Bones
  fullName: GTA.Ped.Bones
- uid: GTA.PedBoneCollection
  commentId: T:GTA.PedBoneCollection
  parent: GTA
  isExternal: true
  href: GTA.PedBoneCollection.html
  name: PedBoneCollection
  nameWithType: PedBoneCollection
  fullName: GTA.PedBoneCollection
- uid: GTA.Ped.IsIdle*
  commentId: Overload:GTA.Ped.IsIdle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsIdle
  name: IsIdle
  nameWithType: Ped.IsIdle
  fullName: GTA.Ped.IsIdle
- uid: GTA.Ped.IsProne*
  commentId: Overload:GTA.Ped.IsProne
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsProne
  name: IsProne
  nameWithType: Ped.IsProne
  fullName: GTA.Ped.IsProne
- uid: GTA.Ped.IsGettingUp*
  commentId: Overload:GTA.Ped.IsGettingUp
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsGettingUp
  name: IsGettingUp
  nameWithType: Ped.IsGettingUp
  fullName: GTA.Ped.IsGettingUp
- uid: GTA.Ped.IsDiving*
  commentId: Overload:GTA.Ped.IsDiving
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsDiving
  name: IsDiving
  nameWithType: Ped.IsDiving
  fullName: GTA.Ped.IsDiving
- uid: GTA.Ped.IsJumping*
  commentId: Overload:GTA.Ped.IsJumping
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsJumping
  name: IsJumping
  nameWithType: Ped.IsJumping
  fullName: GTA.Ped.IsJumping
- uid: GTA.Ped.IsFalling*
  commentId: Overload:GTA.Ped.IsFalling
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsFalling
  name: IsFalling
  nameWithType: Ped.IsFalling
  fullName: GTA.Ped.IsFalling
- uid: GTA.Ped.IsVaulting*
  commentId: Overload:GTA.Ped.IsVaulting
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsVaulting
  name: IsVaulting
  nameWithType: Ped.IsVaulting
  fullName: GTA.Ped.IsVaulting
- uid: GTA.Ped.IsClimbing*
  commentId: Overload:GTA.Ped.IsClimbing
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsClimbing
  name: IsClimbing
  nameWithType: Ped.IsClimbing
  fullName: GTA.Ped.IsClimbing
- uid: GTA.Ped.IsClimbingLadder*
  commentId: Overload:GTA.Ped.IsClimbingLadder
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsClimbingLadder
  name: IsClimbingLadder
  nameWithType: Ped.IsClimbingLadder
  fullName: GTA.Ped.IsClimbingLadder
- uid: GTA.Ped.IsWalking*
  commentId: Overload:GTA.Ped.IsWalking
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsWalking
  name: IsWalking
  nameWithType: Ped.IsWalking
  fullName: GTA.Ped.IsWalking
- uid: GTA.Ped.IsRunning*
  commentId: Overload:GTA.Ped.IsRunning
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsRunning
  name: IsRunning
  nameWithType: Ped.IsRunning
  fullName: GTA.Ped.IsRunning
- uid: GTA.Ped.IsSprinting*
  commentId: Overload:GTA.Ped.IsSprinting
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsSprinting
  name: IsSprinting
  nameWithType: Ped.IsSprinting
  fullName: GTA.Ped.IsSprinting
- uid: GTA.Ped.IsStopped*
  commentId: Overload:GTA.Ped.IsStopped
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsStopped
  name: IsStopped
  nameWithType: Ped.IsStopped
  fullName: GTA.Ped.IsStopped
- uid: GTA.Ped.IsSwimming*
  commentId: Overload:GTA.Ped.IsSwimming
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsSwimming
  name: IsSwimming
  nameWithType: Ped.IsSwimming
  fullName: GTA.Ped.IsSwimming
- uid: GTA.Ped.IsSwimmingUnderWater*
  commentId: Overload:GTA.Ped.IsSwimmingUnderWater
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsSwimmingUnderWater
  name: IsSwimmingUnderWater
  nameWithType: Ped.IsSwimmingUnderWater
  fullName: GTA.Ped.IsSwimmingUnderWater
- uid: GTA.Ped.IsDucking*
  commentId: Overload:GTA.Ped.IsDucking
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsDucking
  name: IsDucking
  nameWithType: Ped.IsDucking
  fullName: GTA.Ped.IsDucking
- uid: GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded*
  commentId: Overload:GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_KeepTaskWhenMarkedAsNoLongerNeeded
  name: KeepTaskWhenMarkedAsNoLongerNeeded
  nameWithType: Ped.KeepTaskWhenMarkedAsNoLongerNeeded
  fullName: GTA.Ped.KeepTaskWhenMarkedAsNoLongerNeeded
- uid: GTA.Ped.Task*
  commentId: Overload:GTA.Ped.Task
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Task
  name: Task
  nameWithType: Ped.Task
  fullName: GTA.Ped.Task
- uid: GTA.TaskInvoker
  commentId: T:GTA.TaskInvoker
  parent: GTA
  isExternal: true
  href: GTA.TaskInvoker.html
  name: TaskInvoker
  nameWithType: TaskInvoker
  fullName: GTA.TaskInvoker
- uid: GTA.Ped.TaskSequenceProgress*
  commentId: Overload:GTA.Ped.TaskSequenceProgress
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_TaskSequenceProgress
  name: TaskSequenceProgress
  nameWithType: Ped.TaskSequenceProgress
  fullName: GTA.Ped.TaskSequenceProgress
- uid: GTA.Ped.CurrentScriptTaskNameHash*
  commentId: Overload:GTA.Ped.CurrentScriptTaskNameHash
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CurrentScriptTaskNameHash
  name: CurrentScriptTaskNameHash
  nameWithType: Ped.CurrentScriptTaskNameHash
  fullName: GTA.Ped.CurrentScriptTaskNameHash
- uid: GTA.Ped.CurrentScriptTaskStatus*
  commentId: Overload:GTA.Ped.CurrentScriptTaskStatus
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CurrentScriptTaskStatus
  name: CurrentScriptTaskStatus
  nameWithType: Ped.CurrentScriptTaskStatus
  fullName: GTA.Ped.CurrentScriptTaskStatus
- uid: GTA.Ped.DecisionMaker*
  commentId: Overload:GTA.Ped.DecisionMaker
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DecisionMaker
  name: DecisionMaker
  nameWithType: Ped.DecisionMaker
  fullName: GTA.Ped.DecisionMaker
- uid: GTA.DecisionMaker
  commentId: T:GTA.DecisionMaker
  parent: GTA
  isExternal: true
  href: GTA.DecisionMaker.html
  name: DecisionMaker
  nameWithType: DecisionMaker
  fullName: GTA.DecisionMaker
- uid: GTA.Ped.BlockPermanentEvents*
  commentId: Overload:GTA.Ped.BlockPermanentEvents
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_BlockPermanentEvents
  name: BlockPermanentEvents
  nameWithType: Ped.BlockPermanentEvents
  fullName: GTA.Ped.BlockPermanentEvents
- uid: GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame*
  commentId: Overload:GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_RandomPedsBlockingNonTempEventsThisFrame
  name: RandomPedsBlockingNonTempEventsThisFrame
  nameWithType: Ped.RandomPedsBlockingNonTempEventsThisFrame
  fullName: GTA.Ped.RandomPedsBlockingNonTempEventsThisFrame
- uid: GTA.Ped.IsRagdoll*
  commentId: Overload:GTA.Ped.IsRagdoll
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsRagdoll
  name: IsRagdoll
  nameWithType: Ped.IsRagdoll
  fullName: GTA.Ped.IsRagdoll
- uid: GTA.Ped.IsRunningRagdollTask*
  commentId: Overload:GTA.Ped.IsRunningRagdollTask
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsRunningRagdollTask
  name: IsRunningRagdollTask
  nameWithType: Ped.IsRunningRagdollTask
  fullName: GTA.Ped.IsRunningRagdollTask
- uid: GTA.Ped.CanRagdoll*
  commentId: Overload:GTA.Ped.CanRagdoll
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanRagdoll
  name: CanRagdoll
  nameWithType: Ped.CanRagdoll
  fullName: GTA.Ped.CanRagdoll
- uid: GTA.Ped.Euphoria*
  commentId: Overload:GTA.Ped.Euphoria
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Euphoria
  name: Euphoria
  nameWithType: Ped.Euphoria
  fullName: GTA.Ped.Euphoria
- uid: GTA.NaturalMotion.Euphoria
  commentId: T:GTA.NaturalMotion.Euphoria
  parent: GTA.NaturalMotion
  isExternal: true
  href: GTA.NaturalMotion.Euphoria.html
  name: Euphoria
  nameWithType: Euphoria
  fullName: GTA.NaturalMotion.Euphoria
- uid: GTA.NaturalMotion
  commentId: N:GTA.NaturalMotion
  isExternal: true
  href: GTA.html
  name: GTA.NaturalMotion
  nameWithType: GTA.NaturalMotion
  fullName: GTA.NaturalMotion
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.NaturalMotion
    name: NaturalMotion
    isExternal: true
    href: GTA.NaturalMotion.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.NaturalMotion
    name: NaturalMotion
    isExternal: true
    href: GTA.NaturalMotion.html
- uid: GTA.Ped.Accuracy*
  commentId: Overload:GTA.Ped.Accuracy
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Accuracy
  name: Accuracy
  nameWithType: Ped.Accuracy
  fullName: GTA.Ped.Accuracy
- uid: GTA.Ped.ShootRate*
  commentId: Overload:GTA.Ped.ShootRate
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ShootRate
  name: ShootRate
  nameWithType: Ped.ShootRate
  fullName: GTA.Ped.ShootRate
- uid: GTA.Ped.FiringPattern*
  commentId: Overload:GTA.Ped.FiringPattern
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_FiringPattern
  name: FiringPattern
  nameWithType: Ped.FiringPattern
  fullName: GTA.Ped.FiringPattern
- uid: GTA.FiringPattern
  commentId: T:GTA.FiringPattern
  parent: GTA
  isExternal: true
  href: GTA.FiringPattern.html
  name: FiringPattern
  nameWithType: FiringPattern
  fullName: GTA.FiringPattern
- uid: GTA.Ped.CombatMovement*
  commentId: Overload:GTA.Ped.CombatMovement
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CombatMovement
  name: CombatMovement
  nameWithType: Ped.CombatMovement
  fullName: GTA.Ped.CombatMovement
- uid: GTA.CombatMovement
  commentId: T:GTA.CombatMovement
  parent: GTA
  isExternal: true
  href: GTA.CombatMovement.html
  name: CombatMovement
  nameWithType: CombatMovement
  fullName: GTA.CombatMovement
- uid: GTA.Ped.CombatAbility*
  commentId: Overload:GTA.Ped.CombatAbility
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CombatAbility
  name: CombatAbility
  nameWithType: Ped.CombatAbility
  fullName: GTA.Ped.CombatAbility
- uid: GTA.CombatAbility
  commentId: T:GTA.CombatAbility
  parent: GTA
  isExternal: true
  href: GTA.CombatAbility.html
  name: CombatAbility
  nameWithType: CombatAbility
  fullName: GTA.CombatAbility
- uid: GTA.Ped.CombatRange*
  commentId: Overload:GTA.Ped.CombatRange
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CombatRange
  name: CombatRange
  nameWithType: Ped.CombatRange
  fullName: GTA.Ped.CombatRange
- uid: GTA.CombatRange
  commentId: T:GTA.CombatRange
  parent: GTA
  isExternal: true
  href: GTA.CombatRange.html
  name: CombatRange
  nameWithType: CombatRange
  fullName: GTA.CombatRange
- uid: GTA.Ped.TargetLossResponse*
  commentId: Overload:GTA.Ped.TargetLossResponse
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_TargetLossResponse
  name: TargetLossResponse
  nameWithType: Ped.TargetLossResponse
  fullName: GTA.Ped.TargetLossResponse
- uid: GTA.TargetLossResponse
  commentId: T:GTA.TargetLossResponse
  parent: GTA
  isExternal: true
  href: GTA.TargetLossResponse.html
  name: TargetLossResponse
  nameWithType: TargetLossResponse
  fullName: GTA.TargetLossResponse
- uid: GTA.Ped.Weapons*
  commentId: Overload:GTA.Ped.Weapons
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Weapons
  name: Weapons
  nameWithType: Ped.Weapons
  fullName: GTA.Ped.Weapons
- uid: GTA.WeaponCollection
  commentId: T:GTA.WeaponCollection
  parent: GTA
  isExternal: true
  href: GTA.WeaponCollection.html
  name: WeaponCollection
  nameWithType: WeaponCollection
  fullName: GTA.WeaponCollection
- uid: GTA.Ped.VehicleWeapon*
  commentId: Overload:GTA.Ped.VehicleWeapon
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VehicleWeapon
  name: VehicleWeapon
  nameWithType: Ped.VehicleWeapon
  fullName: GTA.Ped.VehicleWeapon
- uid: GTA.Ped.CanSwitchWeapons*
  commentId: Overload:GTA.Ped.CanSwitchWeapons
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanSwitchWeapons
  name: CanSwitchWeapons
  nameWithType: Ped.CanSwitchWeapons
  fullName: GTA.Ped.CanSwitchWeapons
- uid: GTA.Ped.IsOnBike*
  commentId: Overload:GTA.Ped.IsOnBike
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsOnBike
  name: IsOnBike
  nameWithType: Ped.IsOnBike
  fullName: GTA.Ped.IsOnBike
- uid: GTA.Ped.IsOnFoot*
  commentId: Overload:GTA.Ped.IsOnFoot
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsOnFoot
  name: IsOnFoot
  nameWithType: Ped.IsOnFoot
  fullName: GTA.Ped.IsOnFoot
- uid: GTA.Ped.IsInSub*
  commentId: Overload:GTA.Ped.IsInSub
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInSub
  name: IsInSub
  nameWithType: Ped.IsInSub
  fullName: GTA.Ped.IsInSub
- uid: GTA.Ped.IsInTaxi*
  commentId: Overload:GTA.Ped.IsInTaxi
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInTaxi
  name: IsInTaxi
  nameWithType: Ped.IsInTaxi
  fullName: GTA.Ped.IsInTaxi
- uid: GTA.Ped.IsInTrain*
  commentId: Overload:GTA.Ped.IsInTrain
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInTrain
  name: IsInTrain
  nameWithType: Ped.IsInTrain
  fullName: GTA.Ped.IsInTrain
- uid: GTA.Ped.IsInHeli*
  commentId: Overload:GTA.Ped.IsInHeli
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInHeli
  name: IsInHeli
  nameWithType: Ped.IsInHeli
  fullName: GTA.Ped.IsInHeli
- uid: GTA.Ped.IsInPlane*
  commentId: Overload:GTA.Ped.IsInPlane
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInPlane
  name: IsInPlane
  nameWithType: Ped.IsInPlane
  fullName: GTA.Ped.IsInPlane
- uid: GTA.Ped.IsInFlyingVehicle*
  commentId: Overload:GTA.Ped.IsInFlyingVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInFlyingVehicle
  name: IsInFlyingVehicle
  nameWithType: Ped.IsInFlyingVehicle
  fullName: GTA.Ped.IsInFlyingVehicle
- uid: GTA.Ped.IsInBoat*
  commentId: Overload:GTA.Ped.IsInBoat
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInBoat
  name: IsInBoat
  nameWithType: Ped.IsInBoat
  fullName: GTA.Ped.IsInBoat
- uid: GTA.Ped.IsInPoliceVehicle*
  commentId: Overload:GTA.Ped.IsInPoliceVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInPoliceVehicle
  name: IsInPoliceVehicle
  nameWithType: Ped.IsInPoliceVehicle
  fullName: GTA.Ped.IsInPoliceVehicle
- uid: GTA.Ped.IsEnteringVehicle*
  commentId: Overload:GTA.Ped.IsEnteringVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsEnteringVehicle
  name: IsEnteringVehicle
  nameWithType: Ped.IsEnteringVehicle
  fullName: GTA.Ped.IsEnteringVehicle
- uid: GTA.Ped.IsExitingVehicle*
  commentId: Overload:GTA.Ped.IsExitingVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsExitingVehicle
  name: IsExitingVehicle
  nameWithType: Ped.IsExitingVehicle
  fullName: GTA.Ped.IsExitingVehicle
- uid: GTA.Ped.IsJumpingOutOfVehicle*
  commentId: Overload:GTA.Ped.IsJumpingOutOfVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsJumpingOutOfVehicle
  name: IsJumpingOutOfVehicle
  nameWithType: Ped.IsJumpingOutOfVehicle
  fullName: GTA.Ped.IsJumpingOutOfVehicle
- uid: GTA.Ped.IsTryingToEnterALockedVehicle*
  commentId: Overload:GTA.Ped.IsTryingToEnterALockedVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsTryingToEnterALockedVehicle
  name: IsTryingToEnterALockedVehicle
  nameWithType: Ped.IsTryingToEnterALockedVehicle
  fullName: GTA.Ped.IsTryingToEnterALockedVehicle
- uid: GTA.Ped.CanBeDraggedOutOfVehicle*
  commentId: Overload:GTA.Ped.CanBeDraggedOutOfVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanBeDraggedOutOfVehicle
  name: CanBeDraggedOutOfVehicle
  nameWithType: Ped.CanBeDraggedOutOfVehicle
  fullName: GTA.Ped.CanBeDraggedOutOfVehicle
- uid: GTA.Ped.KnockOffVehicleType*
  commentId: Overload:GTA.Ped.KnockOffVehicleType
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_KnockOffVehicleType
  name: KnockOffVehicleType
  nameWithType: Ped.KnockOffVehicleType
  fullName: GTA.Ped.KnockOffVehicleType
- uid: GTA.KnockOffVehicleType
  commentId: T:GTA.KnockOffVehicleType
  parent: GTA
  isExternal: true
  href: GTA.KnockOffVehicleType.html
  name: KnockOffVehicleType
  nameWithType: KnockOffVehicleType
  fullName: GTA.KnockOffVehicleType
- uid: GTA.Ped.CanBeKnockedOffVehicle*
  commentId: Overload:GTA.Ped.CanBeKnockedOffVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanBeKnockedOffVehicle
  name: CanBeKnockedOffVehicle
  nameWithType: Ped.CanBeKnockedOffVehicle
  fullName: GTA.Ped.CanBeKnockedOffVehicle
- uid: GTA.Ped.CanFlyThroughWindscreen*
  commentId: Overload:GTA.Ped.CanFlyThroughWindscreen
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanFlyThroughWindscreen
  name: CanFlyThroughWindscreen
  nameWithType: Ped.CanFlyThroughWindscreen
  fullName: GTA.Ped.CanFlyThroughWindscreen
- uid: GTA.Ped.LastVehicle*
  commentId: Overload:GTA.Ped.LastVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_LastVehicle
  name: LastVehicle
  nameWithType: Ped.LastVehicle
  fullName: GTA.Ped.LastVehicle
- uid: GTA.Ped.CurrentVehicle*
  commentId: Overload:GTA.Ped.CurrentVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CurrentVehicle
  name: CurrentVehicle
  nameWithType: Ped.CurrentVehicle
  fullName: GTA.Ped.CurrentVehicle
- uid: GTA.Ped.VehicleTryingToEnter*
  commentId: Overload:GTA.Ped.VehicleTryingToEnter
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VehicleTryingToEnter
  name: VehicleTryingToEnter
  nameWithType: Ped.VehicleTryingToEnter
  fullName: GTA.Ped.VehicleTryingToEnter
- uid: GTA.Ped.GroundEntity*
  commentId: Overload:GTA.Ped.GroundEntity
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_GroundEntity
  name: GroundEntity
  nameWithType: Ped.GroundEntity
  fullName: GTA.Ped.GroundEntity
- uid: GTA.Ped.SeatIndex*
  commentId: Overload:GTA.Ped.SeatIndex
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SeatIndex
  name: SeatIndex
  nameWithType: Ped.SeatIndex
  fullName: GTA.Ped.SeatIndex
- uid: GTA.Ped.DrivingSpeed*
  commentId: Overload:GTA.Ped.DrivingSpeed
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DrivingSpeed
  name: DrivingSpeed
  nameWithType: Ped.DrivingSpeed
  fullName: GTA.Ped.DrivingSpeed
- uid: GTA.Ped.MaxDrivingSpeed*
  commentId: Overload:GTA.Ped.MaxDrivingSpeed
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_MaxDrivingSpeed
  name: MaxDrivingSpeed
  nameWithType: Ped.MaxDrivingSpeed
  fullName: GTA.Ped.MaxDrivingSpeed
- uid: GTA.Ped.VehicleDrivingFlags*
  commentId: Overload:GTA.Ped.VehicleDrivingFlags
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VehicleDrivingFlags
  name: VehicleDrivingFlags
  nameWithType: Ped.VehicleDrivingFlags
  fullName: GTA.Ped.VehicleDrivingFlags
- uid: GTA.VehicleDrivingFlags
  commentId: T:GTA.VehicleDrivingFlags
  parent: GTA
  isExternal: true
  href: GTA.VehicleDrivingFlags.html
  name: VehicleDrivingFlags
  nameWithType: VehicleDrivingFlags
  fullName: GTA.VehicleDrivingFlags
- uid: GTA.Ped.DrivingAggressiveness*
  commentId: Overload:GTA.Ped.DrivingAggressiveness
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DrivingAggressiveness
  name: DrivingAggressiveness
  nameWithType: Ped.DrivingAggressiveness
  fullName: GTA.Ped.DrivingAggressiveness
- uid: GTA.Ped.IsJacking*
  commentId: Overload:GTA.Ped.IsJacking
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsJacking
  name: IsJacking
  nameWithType: Ped.IsJacking
  fullName: GTA.Ped.IsJacking
- uid: GTA.Ped.IsBeingJacked*
  commentId: Overload:GTA.Ped.IsBeingJacked
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsBeingJacked
  name: IsBeingJacked
  nameWithType: Ped.IsBeingJacked
  fullName: GTA.Ped.IsBeingJacked
- uid: GTA.Ped.StaysInVehicleWhenJacked*
  commentId: Overload:GTA.Ped.StaysInVehicleWhenJacked
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_StaysInVehicleWhenJacked
  name: StaysInVehicleWhenJacked
  nameWithType: Ped.StaysInVehicleWhenJacked
  fullName: GTA.Ped.StaysInVehicleWhenJacked
- uid: GTA.Ped.Jacker*
  commentId: Overload:GTA.Ped.Jacker
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Jacker
  name: Jacker
  nameWithType: Ped.Jacker
  fullName: GTA.Ped.Jacker
- uid: GTA.Ped.JackTarget*
  commentId: Overload:GTA.Ped.JackTarget
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_JackTarget
  name: JackTarget
  nameWithType: Ped.JackTarget
  fullName: GTA.Ped.JackTarget
- uid: GTA.Ped.IsInParachuteFreeFall*
  commentId: Overload:GTA.Ped.IsInParachuteFreeFall
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInParachuteFreeFall
  name: IsInParachuteFreeFall
  nameWithType: Ped.IsInParachuteFreeFall
  fullName: GTA.Ped.IsInParachuteFreeFall
- uid: GTA.Ped.ParachuteState*
  commentId: Overload:GTA.Ped.ParachuteState
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ParachuteState
  name: ParachuteState
  nameWithType: Ped.ParachuteState
  fullName: GTA.Ped.ParachuteState
- uid: GTA.ParachuteState
  commentId: T:GTA.ParachuteState
  parent: GTA
  isExternal: true
  href: GTA.ParachuteState.html
  name: ParachuteState
  nameWithType: ParachuteState
  fullName: GTA.ParachuteState
- uid: GTA.Ped.ParachuteLandingType*
  commentId: Overload:GTA.Ped.ParachuteLandingType
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_ParachuteLandingType
  name: ParachuteLandingType
  nameWithType: Ped.ParachuteLandingType
  fullName: GTA.Ped.ParachuteLandingType
- uid: GTA.ParachuteLandingType
  commentId: T:GTA.ParachuteLandingType
  parent: GTA
  isExternal: true
  href: GTA.ParachuteLandingType.html
  name: ParachuteLandingType
  nameWithType: ParachuteLandingType
  fullName: GTA.ParachuteLandingType
- uid: GTA.Ped.IsEnemy*
  commentId: Overload:GTA.Ped.IsEnemy
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsEnemy
  name: IsEnemy
  nameWithType: Ped.IsEnemy
  fullName: GTA.Ped.IsEnemy
- uid: GTA.Ped.IsPriorityTargetForEnemies*
  commentId: Overload:GTA.Ped.IsPriorityTargetForEnemies
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPriorityTargetForEnemies
  name: IsPriorityTargetForEnemies
  nameWithType: Ped.IsPriorityTargetForEnemies
  fullName: GTA.Ped.IsPriorityTargetForEnemies
- uid: GTA.Ped.IsFleeing*
  commentId: Overload:GTA.Ped.IsFleeing
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsFleeing
  name: IsFleeing
  nameWithType: Ped.IsFleeing
  fullName: GTA.Ped.IsFleeing
- uid: GTA.Ped.IsInjured*
  commentId: Overload:GTA.Ped.IsInjured
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInjured
  name: IsInjured
  nameWithType: Ped.IsInjured
  fullName: GTA.Ped.IsInjured
- uid: GTA.Ped.IsInStealthMode*
  commentId: Overload:GTA.Ped.IsInStealthMode
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInStealthMode
  name: IsInStealthMode
  nameWithType: Ped.IsInStealthMode
  fullName: GTA.Ped.IsInStealthMode
- uid: GTA.Ped.IsInCombat*
  commentId: Overload:GTA.Ped.IsInCombat
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInCombat
  name: IsInCombat
  nameWithType: Ped.IsInCombat
  fullName: GTA.Ped.IsInCombat
- uid: GTA.Ped.IsInMeleeCombat*
  commentId: Overload:GTA.Ped.IsInMeleeCombat
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInMeleeCombat
  name: IsInMeleeCombat
  nameWithType: Ped.IsInMeleeCombat
  fullName: GTA.Ped.IsInMeleeCombat
- uid: GTA.Ped.IsAiming*
  commentId: Overload:GTA.Ped.IsAiming
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsAiming
  name: IsAiming
  nameWithType: Ped.IsAiming
  fullName: GTA.Ped.IsAiming
- uid: GTA.Ped.IsPlantingBomb*
  commentId: Overload:GTA.Ped.IsPlantingBomb
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPlantingBomb
  name: IsPlantingBomb
  nameWithType: Ped.IsPlantingBomb
  fullName: GTA.Ped.IsPlantingBomb
- uid: GTA.Ped.IsShooting*
  commentId: Overload:GTA.Ped.IsShooting
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsShooting
  name: IsShooting
  nameWithType: Ped.IsShooting
  fullName: GTA.Ped.IsShooting
- uid: GTA.Ped.IsReloading*
  commentId: Overload:GTA.Ped.IsReloading
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsReloading
  name: IsReloading
  nameWithType: Ped.IsReloading
  fullName: GTA.Ped.IsReloading
- uid: GTA.Ped.IsDoingDriveBy*
  commentId: Overload:GTA.Ped.IsDoingDriveBy
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsDoingDriveBy
  name: IsDoingDriveBy
  nameWithType: Ped.IsDoingDriveBy
  fullName: GTA.Ped.IsDoingDriveBy
- uid: GTA.Ped.IsGoingIntoCover*
  commentId: Overload:GTA.Ped.IsGoingIntoCover
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsGoingIntoCover
  name: IsGoingIntoCover
  nameWithType: Ped.IsGoingIntoCover
  fullName: GTA.Ped.IsGoingIntoCover
- uid: GTA.Ped.IsAimingFromCover*
  commentId: Overload:GTA.Ped.IsAimingFromCover
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsAimingFromCover
  name: IsAimingFromCover
  nameWithType: Ped.IsAimingFromCover
  fullName: GTA.Ped.IsAimingFromCover
- uid: GTA.Ped.IsBeingStunned*
  commentId: Overload:GTA.Ped.IsBeingStunned
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsBeingStunned
  name: IsBeingStunned
  nameWithType: Ped.IsBeingStunned
  fullName: GTA.Ped.IsBeingStunned
- uid: GTA.Ped.IsInCover*
  commentId: Overload:GTA.Ped.IsInCover
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInCover
  name: IsInCover
  nameWithType: Ped.IsInCover
  fullName: GTA.Ped.IsInCover
- uid: GTA.Ped.IsInCoverFacingLeft*
  commentId: Overload:GTA.Ped.IsInCoverFacingLeft
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInCoverFacingLeft
  name: IsInCoverFacingLeft
  nameWithType: Ped.IsInCoverFacingLeft
  fullName: GTA.Ped.IsInCoverFacingLeft
- uid: GTA.Ped.CanBeTargetted*
  commentId: Overload:GTA.Ped.CanBeTargetted
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanBeTargetted
  name: CanBeTargetted
  nameWithType: Ped.CanBeTargetted
  fullName: GTA.Ped.CanBeTargetted
- uid: GTA.Ped.CanBeShotInVehicle*
  commentId: Overload:GTA.Ped.CanBeShotInVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanBeShotInVehicle
  name: CanBeShotInVehicle
  nameWithType: Ped.CanBeShotInVehicle
  fullName: GTA.Ped.CanBeShotInVehicle
- uid: GTA.Ped.WasKilledByStealth*
  commentId: Overload:GTA.Ped.WasKilledByStealth
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_WasKilledByStealth
  name: WasKilledByStealth
  nameWithType: Ped.WasKilledByStealth
  fullName: GTA.Ped.WasKilledByStealth
- uid: GTA.Ped.WasKilledByTakedown*
  commentId: Overload:GTA.Ped.WasKilledByTakedown
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_WasKilledByTakedown
  name: WasKilledByTakedown
  nameWithType: Ped.WasKilledByTakedown
  fullName: GTA.Ped.WasKilledByTakedown
- uid: GTA.Ped.CombatTarget*
  commentId: Overload:GTA.Ped.CombatTarget
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CombatTarget
  name: CombatTarget
  nameWithType: Ped.CombatTarget
  fullName: GTA.Ped.CombatTarget
- uid: GTA.Ped.IsPerformingMeleeAction*
  commentId: Overload:GTA.Ped.IsPerformingMeleeAction
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPerformingMeleeAction
  name: IsPerformingMeleeAction
  nameWithType: Ped.IsPerformingMeleeAction
  fullName: GTA.Ped.IsPerformingMeleeAction
- uid: GTA.Ped.IsPerformingStealthKill*
  commentId: Overload:GTA.Ped.IsPerformingStealthKill
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPerformingStealthKill
  name: IsPerformingStealthKill
  nameWithType: Ped.IsPerformingStealthKill
  fullName: GTA.Ped.IsPerformingStealthKill
- uid: GTA.Ped.IsPerformingCounterAttack*
  commentId: Overload:GTA.Ped.IsPerformingCounterAttack
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPerformingCounterAttack
  name: IsPerformingCounterAttack
  nameWithType: Ped.IsPerformingCounterAttack
  fullName: GTA.Ped.IsPerformingCounterAttack
- uid: GTA.Ped.IsBeingStealthKilled*
  commentId: Overload:GTA.Ped.IsBeingStealthKilled
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsBeingStealthKilled
  name: IsBeingStealthKilled
  nameWithType: Ped.IsBeingStealthKilled
  fullName: GTA.Ped.IsBeingStealthKilled
- uid: GTA.Ped.MeleeTarget*
  commentId: Overload:GTA.Ped.MeleeTarget
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_MeleeTarget
  name: MeleeTarget
  nameWithType: Ped.MeleeTarget
  fullName: GTA.Ped.MeleeTarget
- uid: GTA.Ped.Killer*
  commentId: Overload:GTA.Ped.Killer
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Killer
  name: Killer
  nameWithType: Ped.Killer
  fullName: GTA.Ped.Killer
- uid: GTA.Ped.CauseOfDeath*
  commentId: Overload:GTA.Ped.CauseOfDeath
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CauseOfDeath
  name: CauseOfDeath
  nameWithType: Ped.CauseOfDeath
  fullName: GTA.Ped.CauseOfDeath
- uid: GTA.Ped.TimeOfDeath*
  commentId: Overload:GTA.Ped.TimeOfDeath
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_TimeOfDeath
  name: TimeOfDeath
  nameWithType: Ped.TimeOfDeath
  fullName: GTA.Ped.TimeOfDeath
- uid: GTA.Ped.CanWrithe*
  commentId: Overload:GTA.Ped.CanWrithe
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanWrithe
  name: CanWrithe
  nameWithType: Ped.CanWrithe
  fullName: GTA.Ped.CanWrithe
- uid: GTA.Ped.CanSufferCriticalHits*
  commentId: Overload:GTA.Ped.CanSufferCriticalHits
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanSufferCriticalHits
  name: CanSufferCriticalHits
  nameWithType: Ped.CanSufferCriticalHits
  fullName: GTA.Ped.CanSufferCriticalHits
- uid: GTA.Ped.DiesOnLowHealth*
  commentId: Overload:GTA.Ped.DiesOnLowHealth
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DiesOnLowHealth
  name: DiesOnLowHealth
  nameWithType: Ped.DiesOnLowHealth
  fullName: GTA.Ped.DiesOnLowHealth
- uid: GTA.Ped.DiesInstantlyInWater*
  commentId: Overload:GTA.Ped.DiesInstantlyInWater
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DiesInstantlyInWater
  name: DiesInstantlyInWater
  nameWithType: Ped.DiesInstantlyInWater
  fullName: GTA.Ped.DiesInstantlyInWater
- uid: GTA.Ped.DrownsInWater*
  commentId: Overload:GTA.Ped.DrownsInWater
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DrownsInWater
  name: DrownsInWater
  nameWithType: Ped.DrownsInWater
  fullName: GTA.Ped.DrownsInWater
- uid: GTA.Ped.DrownsInSinkingVehicle*
  commentId: Overload:GTA.Ped.DrownsInSinkingVehicle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DrownsInSinkingVehicle
  name: DrownsInSinkingVehicle
  nameWithType: Ped.DrownsInSinkingVehicle
  fullName: GTA.Ped.DrownsInSinkingVehicle
- uid: GTA.Ped.DropsEquippedWeaponOnDeath*
  commentId: Overload:GTA.Ped.DropsEquippedWeaponOnDeath
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_DropsEquippedWeaponOnDeath
  name: DropsEquippedWeaponOnDeath
  nameWithType: Ped.DropsEquippedWeaponOnDeath
  fullName: GTA.Ped.DropsEquippedWeaponOnDeath
- uid: GTA.Ped.InjuryHealthThreshold*
  commentId: Overload:GTA.Ped.InjuryHealthThreshold
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_InjuryHealthThreshold
  name: InjuryHealthThreshold
  nameWithType: Ped.InjuryHealthThreshold
  fullName: GTA.Ped.InjuryHealthThreshold
- uid: GTA.Ped.FatalInjuryHealthThreshold*
  commentId: Overload:GTA.Ped.FatalInjuryHealthThreshold
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_FatalInjuryHealthThreshold
  name: FatalInjuryHealthThreshold
  nameWithType: Ped.FatalInjuryHealthThreshold
  fullName: GTA.Ped.FatalInjuryHealthThreshold
- uid: GTA.Ped.LastWeaponImpactPosition*
  commentId: Overload:GTA.Ped.LastWeaponImpactPosition
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_LastWeaponImpactPosition
  name: LastWeaponImpactPosition
  nameWithType: Ped.LastWeaponImpactPosition
  fullName: GTA.Ped.LastWeaponImpactPosition
- uid: GTA.Ped.RelationshipGroup*
  commentId: Overload:GTA.Ped.RelationshipGroup
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_RelationshipGroup
  name: RelationshipGroup
  nameWithType: Ped.RelationshipGroup
  fullName: GTA.Ped.RelationshipGroup
- uid: GTA.RelationshipGroup
  commentId: T:GTA.RelationshipGroup
  parent: GTA
  isExternal: true
  href: GTA.RelationshipGroup.html
  name: RelationshipGroup
  nameWithType: RelationshipGroup
  fullName: GTA.RelationshipGroup
- uid: GTA.Ped.SeeingRange*
  commentId: Overload:GTA.Ped.SeeingRange
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_SeeingRange
  name: SeeingRange
  nameWithType: Ped.SeeingRange
  fullName: GTA.Ped.SeeingRange
- uid: GTA.Ped.HearingRange*
  commentId: Overload:GTA.Ped.HearingRange
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_HearingRange
  name: HearingRange
  nameWithType: Ped.HearingRange
  fullName: GTA.Ped.HearingRange
- uid: GTA.Ped.VisualFieldMinAngle*
  commentId: Overload:GTA.Ped.VisualFieldMinAngle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldMinAngle
  name: VisualFieldMinAngle
  nameWithType: Ped.VisualFieldMinAngle
  fullName: GTA.Ped.VisualFieldMinAngle
- uid: GTA.Ped.VisualFieldMaxAngle*
  commentId: Overload:GTA.Ped.VisualFieldMaxAngle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldMaxAngle
  name: VisualFieldMaxAngle
  nameWithType: Ped.VisualFieldMaxAngle
  fullName: GTA.Ped.VisualFieldMaxAngle
- uid: GTA.Ped.VisualFieldMinElevationAngle*
  commentId: Overload:GTA.Ped.VisualFieldMinElevationAngle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldMinElevationAngle
  name: VisualFieldMinElevationAngle
  nameWithType: Ped.VisualFieldMinElevationAngle
  fullName: GTA.Ped.VisualFieldMinElevationAngle
- uid: GTA.Ped.VisualFieldMaxElevationAngle*
  commentId: Overload:GTA.Ped.VisualFieldMaxElevationAngle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldMaxElevationAngle
  name: VisualFieldMaxElevationAngle
  nameWithType: Ped.VisualFieldMaxElevationAngle
  fullName: GTA.Ped.VisualFieldMaxElevationAngle
- uid: GTA.Ped.VisualFieldPeripheralRange*
  commentId: Overload:GTA.Ped.VisualFieldPeripheralRange
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldPeripheralRange
  name: VisualFieldPeripheralRange
  nameWithType: Ped.VisualFieldPeripheralRange
  fullName: GTA.Ped.VisualFieldPeripheralRange
- uid: GTA.Ped.VisualFieldCenterAngle*
  commentId: Overload:GTA.Ped.VisualFieldCenterAngle
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_VisualFieldCenterAngle
  name: VisualFieldCenterAngle
  nameWithType: Ped.VisualFieldCenterAngle
  fullName: GTA.Ped.VisualFieldCenterAngle
- uid: GTA.Ped.IsInGroup*
  commentId: Overload:GTA.Ped.IsInGroup
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsInGroup
  name: IsInGroup
  nameWithType: Ped.IsInGroup
  fullName: GTA.Ped.IsInGroup
- uid: GTA.Ped.NeverLeavesGroup*
  commentId: Overload:GTA.Ped.NeverLeavesGroup
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_NeverLeavesGroup
  name: NeverLeavesGroup
  nameWithType: Ped.NeverLeavesGroup
  fullName: GTA.Ped.NeverLeavesGroup
- uid: GTA.Ped.PedGroup*
  commentId: Overload:GTA.Ped.PedGroup
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_PedGroup
  name: PedGroup
  nameWithType: Ped.PedGroup
  fullName: GTA.Ped.PedGroup
- uid: GTA.PedGroup
  commentId: T:GTA.PedGroup
  parent: GTA
  isExternal: true
  href: GTA.PedGroup.html
  name: PedGroup
  nameWithType: PedGroup
  fullName: GTA.PedGroup
- uid: GTA.Ped.IsPainAudioEnabled*
  commentId: Overload:GTA.Ped.IsPainAudioEnabled
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsPainAudioEnabled
  name: IsPainAudioEnabled
  nameWithType: Ped.IsPainAudioEnabled
  fullName: GTA.Ped.IsPainAudioEnabled
- uid: GTA.Ped.IsAmbientSpeechPlaying*
  commentId: Overload:GTA.Ped.IsAmbientSpeechPlaying
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsAmbientSpeechPlaying
  name: IsAmbientSpeechPlaying
  nameWithType: Ped.IsAmbientSpeechPlaying
  fullName: GTA.Ped.IsAmbientSpeechPlaying
- uid: GTA.Ped.IsScriptedSpeechPlaying*
  commentId: Overload:GTA.Ped.IsScriptedSpeechPlaying
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsScriptedSpeechPlaying
  name: IsScriptedSpeechPlaying
  nameWithType: Ped.IsScriptedSpeechPlaying
  fullName: GTA.Ped.IsScriptedSpeechPlaying
- uid: GTA.Ped.IsAnySpeechPlaying*
  commentId: Overload:GTA.Ped.IsAnySpeechPlaying
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsAnySpeechPlaying
  name: IsAnySpeechPlaying
  nameWithType: Ped.IsAnySpeechPlaying
  fullName: GTA.Ped.IsAnySpeechPlaying
- uid: GTA.Ped.IsAmbientSpeechEnabled*
  commentId: Overload:GTA.Ped.IsAmbientSpeechEnabled
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_IsAmbientSpeechEnabled
  name: IsAmbientSpeechEnabled
  nameWithType: Ped.IsAmbientSpeechEnabled
  fullName: GTA.Ped.IsAmbientSpeechEnabled
- uid: GTA.Ped.Voice*
  commentId: Overload:GTA.Ped.Voice
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_Voice
  name: Voice
  nameWithType: Ped.Voice
  fullName: GTA.Ped.Voice
- uid: GTA.Ped.CanPlayGestures*
  commentId: Overload:GTA.Ped.CanPlayGestures
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_CanPlayGestures
  name: CanPlayGestures
  nameWithType: Ped.CanPlayGestures
  fullName: GTA.Ped.CanPlayGestures
- uid: GTA.Ped.MoveNetworkTaskInterface*
  commentId: Overload:GTA.Ped.MoveNetworkTaskInterface
  isExternal: true
  href: GTA.Ped.html#GTA_Ped_MoveNetworkTaskInterface
  name: MoveNetworkTaskInterface
  nameWithType: Ped.MoveNetworkTaskInterface
  fullName: GTA.Ped.MoveNetworkTaskInterface
- uid: GTA.PedMoveNetworkTaskInterface
  commentId: T:GTA.PedMoveNetworkTaskInterface
  parent: GTA
  isExternal: true
  href: GTA.PedMoveNetworkTaskInterface.html
  name: PedMoveNetworkTaskInterface
  nameWithType: PedMoveNetworkTaskInterface
  fullName: GTA.PedMoveNetworkTaskInterface
