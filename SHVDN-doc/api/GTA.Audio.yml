### YamlMime:ManagedReference
items:
- uid: GTA.Audio
  commentId: T:GTA.Audio
  id: Audio
  parent: GTA
  children:
  - GTA.Audio.GetSoundId
  - GTA.Audio.PlayMusic(System.String)
  - GTA.Audio.PlaySoundAndForget(System.String,System.String,System.Boolean)
  - GTA.Audio.PlaySoundAt(GTA.Entity,System.String)
  - GTA.Audio.PlaySoundFromEntityAndForget(GTA.Entity,System.String,System.String)
  - GTA.Audio.PlaySoundFromPositionAndForget(GTA.Math.Vector3,System.String,System.String,System.Boolean)
  - GTA.Audio.PlaySoundFrontendAndForget(System.String,System.String,System.Boolean)
  - GTA.Audio.SetAudioFlag(GTA.AudioFlags,System.Boolean)
  - GTA.Audio.StopMusic(System.String)
  langs:
  - csharp
  - vb
  name: Audio
  nameWithType: Audio
  fullName: GTA.Audio
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static class Audio
    content.vb: Public Module Audio
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: GTA.Audio.PlayMusic(System.String)
  commentId: M:GTA.Audio.PlayMusic(System.String)
  id: PlayMusic(System.String)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlayMusic(string)
  nameWithType: Audio.PlayMusic(string)
  fullName: GTA.Audio.PlayMusic(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void PlayMusic(string musicFile)
    parameters:
    - id: musicFile
      type: System.String
    content.vb: Public Shared Sub PlayMusic(musicFile As String)
  overload: GTA.Audio.PlayMusic*
  nameWithType.vb: Audio.PlayMusic(String)
  fullName.vb: GTA.Audio.PlayMusic(String)
  name.vb: PlayMusic(String)
- uid: GTA.Audio.StopMusic(System.String)
  commentId: M:GTA.Audio.StopMusic(System.String)
  id: StopMusic(System.String)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: StopMusic(string)
  nameWithType: Audio.StopMusic(string)
  fullName: GTA.Audio.StopMusic(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void StopMusic(string musicFile)
    parameters:
    - id: musicFile
      type: System.String
    content.vb: Public Shared Sub StopMusic(musicFile As String)
  overload: GTA.Audio.StopMusic*
  nameWithType.vb: Audio.StopMusic(String)
  fullName.vb: GTA.Audio.StopMusic(String)
  name.vb: StopMusic(String)
- uid: GTA.Audio.GetSoundId
  commentId: M:GTA.Audio.GetSoundId
  id: GetSoundId
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: GetSoundId()
  nameWithType: Audio.GetSoundId()
  fullName: GTA.Audio.GetSoundId()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static ScriptSound GetSoundId()
    return:
      type: GTA.ScriptSound
    content.vb: Public Shared Function GetSoundId() As ScriptSound
  overload: GTA.Audio.GetSoundId*
- uid: GTA.Audio.PlaySoundAndForget(System.String,System.String,System.Boolean)
  commentId: M:GTA.Audio.PlaySoundAndForget(System.String,System.String,System.Boolean)
  id: PlaySoundAndForget(System.String,System.String,System.Boolean)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlaySoundAndForget(string, string, bool)
  nameWithType: Audio.PlaySoundAndForget(string, string, bool)
  fullName: GTA.Audio.PlaySoundAndForget(string, string, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void PlaySoundAndForget(string soundName, string setName, bool enableOnReplay = true)
    parameters:
    - id: soundName
      type: System.String
    - id: setName
      type: System.String
    - id: enableOnReplay
      type: System.Boolean
    content.vb: Public Shared Sub PlaySoundAndForget(soundName As String, setName As String, enableOnReplay As Boolean = True)
  overload: GTA.Audio.PlaySoundAndForget*
  nameWithType.vb: Audio.PlaySoundAndForget(String, String, Boolean)
  fullName.vb: GTA.Audio.PlaySoundAndForget(String, String, Boolean)
  name.vb: PlaySoundAndForget(String, String, Boolean)
- uid: GTA.Audio.PlaySoundFrontendAndForget(System.String,System.String,System.Boolean)
  commentId: M:GTA.Audio.PlaySoundFrontendAndForget(System.String,System.String,System.Boolean)
  id: PlaySoundFrontendAndForget(System.String,System.String,System.Boolean)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlaySoundFrontendAndForget(string, string, bool)
  nameWithType: Audio.PlaySoundFrontendAndForget(string, string, bool)
  fullName: GTA.Audio.PlaySoundFrontendAndForget(string, string, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void PlaySoundFrontendAndForget(string soundName, string setName, bool enableOnReplay = true)
    parameters:
    - id: soundName
      type: System.String
    - id: setName
      type: System.String
    - id: enableOnReplay
      type: System.Boolean
    content.vb: Public Shared Sub PlaySoundFrontendAndForget(soundName As String, setName As String, enableOnReplay As Boolean = True)
  overload: GTA.Audio.PlaySoundFrontendAndForget*
  nameWithType.vb: Audio.PlaySoundFrontendAndForget(String, String, Boolean)
  fullName.vb: GTA.Audio.PlaySoundFrontendAndForget(String, String, Boolean)
  name.vb: PlaySoundFrontendAndForget(String, String, Boolean)
- uid: GTA.Audio.PlaySoundFromEntityAndForget(GTA.Entity,System.String,System.String)
  commentId: M:GTA.Audio.PlaySoundFromEntityAndForget(GTA.Entity,System.String,System.String)
  id: PlaySoundFromEntityAndForget(GTA.Entity,System.String,System.String)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlaySoundFromEntityAndForget(Entity, string, string)
  nameWithType: Audio.PlaySoundFromEntityAndForget(Entity, string, string)
  fullName: GTA.Audio.PlaySoundFromEntityAndForget(GTA.Entity, string, string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void PlaySoundFromEntityAndForget(Entity entity, string soundName, string setName = null)
    parameters:
    - id: entity
      type: GTA.Entity
    - id: soundName
      type: System.String
    - id: setName
      type: System.String
    content.vb: Public Shared Sub PlaySoundFromEntityAndForget(entity As Entity, soundName As String, setName As String = Nothing)
  overload: GTA.Audio.PlaySoundFromEntityAndForget*
  nameWithType.vb: Audio.PlaySoundFromEntityAndForget(Entity, String, String)
  fullName.vb: GTA.Audio.PlaySoundFromEntityAndForget(GTA.Entity, String, String)
  name.vb: PlaySoundFromEntityAndForget(Entity, String, String)
- uid: GTA.Audio.PlaySoundFromPositionAndForget(GTA.Math.Vector3,System.String,System.String,System.Boolean)
  commentId: M:GTA.Audio.PlaySoundFromPositionAndForget(GTA.Math.Vector3,System.String,System.String,System.Boolean)
  id: PlaySoundFromPositionAndForget(GTA.Math.Vector3,System.String,System.String,System.Boolean)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlaySoundFromPositionAndForget(Vector3, string, string, bool)
  nameWithType: Audio.PlaySoundFromPositionAndForget(Vector3, string, string, bool)
  fullName: GTA.Audio.PlaySoundFromPositionAndForget(GTA.Math.Vector3, string, string, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void PlaySoundFromPositionAndForget(Vector3 position, string soundName, string setName = null, bool isExteriorLoc = false)
    parameters:
    - id: position
      type: GTA.Math.Vector3
    - id: soundName
      type: System.String
    - id: setName
      type: System.String
    - id: isExteriorLoc
      type: System.Boolean
    content.vb: Public Shared Sub PlaySoundFromPositionAndForget(position As Vector3, soundName As String, setName As String = Nothing, isExteriorLoc As Boolean = False)
  overload: GTA.Audio.PlaySoundFromPositionAndForget*
  nameWithType.vb: Audio.PlaySoundFromPositionAndForget(Vector3, String, String, Boolean)
  fullName.vb: GTA.Audio.PlaySoundFromPositionAndForget(GTA.Math.Vector3, String, String, Boolean)
  name.vb: PlaySoundFromPositionAndForget(Vector3, String, String, Boolean)
- uid: GTA.Audio.PlaySoundAt(GTA.Entity,System.String)
  commentId: M:GTA.Audio.PlaySoundAt(GTA.Entity,System.String)
  id: PlaySoundAt(GTA.Entity,System.String)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: PlaySoundAt(Entity, string)
  nameWithType: Audio.PlaySoundAt(Entity, string)
  fullName: GTA.Audio.PlaySoundAt(GTA.Entity, string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: >-
      [Obsolete("Audio.PlaySoundAt is obsolete, use ScriptSoundId.PlaySoundFromEntity or Audio.PlaySoundFromEntityAndForget.")]

      public static int PlaySoundAt(Entity entity, string soundFile)
    parameters:
    - id: entity
      type: GTA.Entity
    - id: soundFile
      type: System.String
    return:
      type: System.Int32
    content.vb: >-
      <Obsolete("Audio.PlaySoundAt is obsolete, use ScriptSoundId.PlaySoundFromEntity or Audio.PlaySoundFromEntityAndForget.")>

      Public Shared Function PlaySoundAt(entity As Entity, soundFile As String) As Integer
  overload: GTA.Audio.PlaySoundAt*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Audio.PlaySoundAt is obsolete, use ScriptSoundId.PlaySoundFromEntity or Audio.PlaySoundFromEntityAndForget.
  nameWithType.vb: Audio.PlaySoundAt(Entity, String)
  fullName.vb: GTA.Audio.PlaySoundAt(GTA.Entity, String)
  name.vb: PlaySoundAt(Entity, String)
- uid: GTA.Audio.SetAudioFlag(GTA.AudioFlags,System.Boolean)
  commentId: M:GTA.Audio.SetAudioFlag(GTA.AudioFlags,System.Boolean)
  id: SetAudioFlag(GTA.AudioFlags,System.Boolean)
  parent: GTA.Audio
  langs:
  - csharp
  - vb
  name: SetAudioFlag(AudioFlags, bool)
  nameWithType: Audio.SetAudioFlag(AudioFlags, bool)
  fullName: GTA.Audio.SetAudioFlag(GTA.AudioFlags, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static void SetAudioFlag(AudioFlags flag, bool toggle)
    parameters:
    - id: flag
      type: GTA.AudioFlags
    - id: toggle
      type: System.Boolean
    content.vb: Public Shared Sub SetAudioFlag(flag As AudioFlags, toggle As Boolean)
  overload: GTA.Audio.SetAudioFlag*
  nameWithType.vb: Audio.SetAudioFlag(AudioFlags, Boolean)
  fullName.vb: GTA.Audio.SetAudioFlag(GTA.AudioFlags, Boolean)
  name.vb: SetAudioFlag(AudioFlags, Boolean)
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.Audio.PlayMusic*
  commentId: Overload:GTA.Audio.PlayMusic
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlayMusic_System_String_
  name: PlayMusic
  nameWithType: Audio.PlayMusic
  fullName: GTA.Audio.PlayMusic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.Audio.StopMusic*
  commentId: Overload:GTA.Audio.StopMusic
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_StopMusic_System_String_
  name: StopMusic
  nameWithType: Audio.StopMusic
  fullName: GTA.Audio.StopMusic
- uid: GTA.Audio.GetSoundId*
  commentId: Overload:GTA.Audio.GetSoundId
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_GetSoundId
  name: GetSoundId
  nameWithType: Audio.GetSoundId
  fullName: GTA.Audio.GetSoundId
- uid: GTA.ScriptSound
  commentId: T:GTA.ScriptSound
  parent: GTA
  isExternal: true
  href: GTA.ScriptSound.html
  name: ScriptSound
  nameWithType: ScriptSound
  fullName: GTA.ScriptSound
- uid: GTA.Audio.PlaySoundAndForget*
  commentId: Overload:GTA.Audio.PlaySoundAndForget
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlaySoundAndForget_System_String_System_String_System_Boolean_
  name: PlaySoundAndForget
  nameWithType: Audio.PlaySoundAndForget
  fullName: GTA.Audio.PlaySoundAndForget
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.Audio.PlaySoundFrontendAndForget*
  commentId: Overload:GTA.Audio.PlaySoundFrontendAndForget
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlaySoundFrontendAndForget_System_String_System_String_System_Boolean_
  name: PlaySoundFrontendAndForget
  nameWithType: Audio.PlaySoundFrontendAndForget
  fullName: GTA.Audio.PlaySoundFrontendAndForget
- uid: GTA.Audio.PlaySoundFromEntityAndForget*
  commentId: Overload:GTA.Audio.PlaySoundFromEntityAndForget
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlaySoundFromEntityAndForget_GTA_Entity_System_String_System_String_
  name: PlaySoundFromEntityAndForget
  nameWithType: Audio.PlaySoundFromEntityAndForget
  fullName: GTA.Audio.PlaySoundFromEntityAndForget
- uid: GTA.Entity
  commentId: T:GTA.Entity
  parent: GTA
  isExternal: true
  href: GTA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: GTA.Entity
- uid: GTA.Audio.PlaySoundFromPositionAndForget*
  commentId: Overload:GTA.Audio.PlaySoundFromPositionAndForget
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlaySoundFromPositionAndForget_GTA_Math_Vector3_System_String_System_String_System_Boolean_
  name: PlaySoundFromPositionAndForget
  nameWithType: Audio.PlaySoundFromPositionAndForget
  fullName: GTA.Audio.PlaySoundFromPositionAndForget
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.Audio.PlaySoundAt*
  commentId: Overload:GTA.Audio.PlaySoundAt
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_PlaySoundAt_GTA_Entity_System_String_
  name: PlaySoundAt
  nameWithType: Audio.PlaySoundAt
  fullName: GTA.Audio.PlaySoundAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.Audio.SetAudioFlag*
  commentId: Overload:GTA.Audio.SetAudioFlag
  isExternal: true
  href: GTA.Audio.html#GTA_Audio_SetAudioFlag_GTA_AudioFlags_System_Boolean_
  name: SetAudioFlag
  nameWithType: Audio.SetAudioFlag
  fullName: GTA.Audio.SetAudioFlag
- uid: GTA.AudioFlags
  commentId: T:GTA.AudioFlags
  parent: GTA
  isExternal: true
  href: GTA.AudioFlags.html
  name: AudioFlags
  nameWithType: AudioFlags
  fullName: GTA.AudioFlags
