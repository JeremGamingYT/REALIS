### YamlMime:ManagedReference
items:
- uid: GTA.AtLiteralHashValue
  commentId: T:GTA.AtLiteralHashValue
  id: AtLiteralHashValue
  parent: GTA
  children:
  - GTA.AtLiteralHashValue.#ctor(System.UInt32)
  - GTA.AtLiteralHashValue.Equals(GTA.AtLiteralHashValue)
  - GTA.AtLiteralHashValue.Equals(System.Object)
  - GTA.AtLiteralHashValue.FromBytes(System.Byte[])
  - GTA.AtLiteralHashValue.FromString(System.String)
  - GTA.AtLiteralHashValue.FromStringUtf8(System.String)
  - GTA.AtLiteralHashValue.GetHashCode
  - GTA.AtLiteralHashValue.GetJoaatHash
  - GTA.AtLiteralHashValue.Hash
  - GTA.AtLiteralHashValue.IsNull
  - GTA.AtLiteralHashValue.Null
  - GTA.AtLiteralHashValue.op_Equality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  - GTA.AtLiteralHashValue.op_Explicit(GTA.AtLiteralHashValue)~System.UInt32
  - GTA.AtLiteralHashValue.op_Explicit(System.UInt32)~GTA.AtLiteralHashValue
  - GTA.AtLiteralHashValue.op_Inequality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  langs:
  - csharp
  - vb
  name: AtLiteralHashValue
  nameWithType: AtLiteralHashValue
  fullName: GTA.AtLiteralHashValue
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public readonly struct AtLiteralHashValue : IEquatable<AtLiteralHashValue>, IJoaatHashValue'
    content.vb: Public Structure AtLiteralHashValue Implements IEquatable(Of AtLiteralHashValue), IJoaatHashValue
  implements:
  - System.IEquatable{GTA.AtLiteralHashValue}
  - GTA.IJoaatHashValue
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.AtLiteralHashValue.Hash
  commentId: F:GTA.AtLiteralHashValue.Hash
  id: Hash
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: AtLiteralHashValue.Hash
  fullName: GTA.AtLiteralHashValue.Hash
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public readonly uint Hash
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Hash As UInteger
- uid: GTA.AtLiteralHashValue.#ctor(System.UInt32)
  commentId: M:GTA.AtLiteralHashValue.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: AtLiteralHashValue(uint)
  nameWithType: AtLiteralHashValue.AtLiteralHashValue(uint)
  fullName: GTA.AtLiteralHashValue.AtLiteralHashValue(uint)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public AtLiteralHashValue(uint hash)
    parameters:
    - id: hash
      type: System.UInt32
    content.vb: Public Sub New(hash As UInteger)
  overload: GTA.AtLiteralHashValue.#ctor*
  nameWithType.vb: AtLiteralHashValue.New(UInteger)
  fullName.vb: GTA.AtLiteralHashValue.New(UInteger)
  name.vb: New(UInteger)
- uid: GTA.AtLiteralHashValue.GetJoaatHash
  commentId: M:GTA.AtLiteralHashValue.GetJoaatHash
  id: GetJoaatHash
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: GetJoaatHash()
  nameWithType: AtLiteralHashValue.GetJoaatHash()
  fullName: GTA.AtLiteralHashValue.GetJoaatHash()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public uint GetJoaatHash()
    return:
      type: System.UInt32
    content.vb: Public Function GetJoaatHash() As UInteger
  overload: GTA.AtLiteralHashValue.GetJoaatHash*
  implements:
  - GTA.IJoaatHashValue.GetJoaatHash
- uid: GTA.AtLiteralHashValue.FromString(System.String)
  commentId: M:GTA.AtLiteralHashValue.FromString(System.String)
  id: FromString(System.String)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: AtLiteralHashValue.FromString(string)
  fullName: GTA.AtLiteralHashValue.FromString(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static AtLiteralHashValue FromString(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: GTA.AtLiteralHashValue
    content.vb: Public Shared Function FromString(input As String) As AtLiteralHashValue
  overload: GTA.AtLiteralHashValue.FromString*
  nameWithType.vb: AtLiteralHashValue.FromString(String)
  fullName.vb: GTA.AtLiteralHashValue.FromString(String)
  name.vb: FromString(String)
- uid: GTA.AtLiteralHashValue.FromBytes(System.Byte[])
  commentId: M:GTA.AtLiteralHashValue.FromBytes(System.Byte[])
  id: FromBytes(System.Byte[])
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: FromBytes(byte[])
  nameWithType: AtLiteralHashValue.FromBytes(byte[])
  fullName: GTA.AtLiteralHashValue.FromBytes(byte[])
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static AtLiteralHashValue FromBytes(byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: GTA.AtLiteralHashValue
    content.vb: Public Shared Function FromBytes(input As Byte()) As AtLiteralHashValue
  overload: GTA.AtLiteralHashValue.FromBytes*
  nameWithType.vb: AtLiteralHashValue.FromBytes(Byte())
  fullName.vb: GTA.AtLiteralHashValue.FromBytes(Byte())
  name.vb: FromBytes(Byte())
- uid: GTA.AtLiteralHashValue.FromStringUtf8(System.String)
  commentId: M:GTA.AtLiteralHashValue.FromStringUtf8(System.String)
  id: FromStringUtf8(System.String)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: FromStringUtf8(string)
  nameWithType: AtLiteralHashValue.FromStringUtf8(string)
  fullName: GTA.AtLiteralHashValue.FromStringUtf8(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static AtLiteralHashValue FromStringUtf8(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: GTA.AtLiteralHashValue
    content.vb: Public Shared Function FromStringUtf8(input As String) As AtLiteralHashValue
  overload: GTA.AtLiteralHashValue.FromStringUtf8*
  nameWithType.vb: AtLiteralHashValue.FromStringUtf8(String)
  fullName.vb: GTA.AtLiteralHashValue.FromStringUtf8(String)
  name.vb: FromStringUtf8(String)
- uid: GTA.AtLiteralHashValue.Equals(GTA.AtLiteralHashValue)
  commentId: M:GTA.AtLiteralHashValue.Equals(GTA.AtLiteralHashValue)
  id: Equals(GTA.AtLiteralHashValue)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: Equals(AtLiteralHashValue)
  nameWithType: AtLiteralHashValue.Equals(AtLiteralHashValue)
  fullName: GTA.AtLiteralHashValue.Equals(GTA.AtLiteralHashValue)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public bool Equals(AtLiteralHashValue other)
    parameters:
    - id: other
      type: GTA.AtLiteralHashValue
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AtLiteralHashValue) As Boolean
  overload: GTA.AtLiteralHashValue.Equals*
  implements:
  - System.IEquatable{GTA.AtLiteralHashValue}.Equals(GTA.AtLiteralHashValue)
- uid: GTA.AtLiteralHashValue.Equals(System.Object)
  commentId: M:GTA.AtLiteralHashValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: AtLiteralHashValue.Equals(object)
  fullName: GTA.AtLiteralHashValue.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.AtLiteralHashValue.Equals*
  nameWithType.vb: AtLiteralHashValue.Equals(Object)
  fullName.vb: GTA.AtLiteralHashValue.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.AtLiteralHashValue.op_Equality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  commentId: M:GTA.AtLiteralHashValue.op_Equality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  id: op_Equality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: operator ==(AtLiteralHashValue, AtLiteralHashValue)
  nameWithType: AtLiteralHashValue.operator ==(AtLiteralHashValue, AtLiteralHashValue)
  fullName: GTA.AtLiteralHashValue.operator ==(GTA.AtLiteralHashValue, GTA.AtLiteralHashValue)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(AtLiteralHashValue left, AtLiteralHashValue right)
    parameters:
    - id: left
      type: GTA.AtLiteralHashValue
    - id: right
      type: GTA.AtLiteralHashValue
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As AtLiteralHashValue, right As AtLiteralHashValue) As Boolean
  overload: GTA.AtLiteralHashValue.op_Equality*
  nameWithType.vb: AtLiteralHashValue.=(AtLiteralHashValue, AtLiteralHashValue)
  fullName.vb: GTA.AtLiteralHashValue.=(GTA.AtLiteralHashValue, GTA.AtLiteralHashValue)
  name.vb: =(AtLiteralHashValue, AtLiteralHashValue)
- uid: GTA.AtLiteralHashValue.op_Inequality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  commentId: M:GTA.AtLiteralHashValue.op_Inequality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  id: op_Inequality(GTA.AtLiteralHashValue,GTA.AtLiteralHashValue)
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: operator !=(AtLiteralHashValue, AtLiteralHashValue)
  nameWithType: AtLiteralHashValue.operator !=(AtLiteralHashValue, AtLiteralHashValue)
  fullName: GTA.AtLiteralHashValue.operator !=(GTA.AtLiteralHashValue, GTA.AtLiteralHashValue)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(AtLiteralHashValue left, AtLiteralHashValue right)
    parameters:
    - id: left
      type: GTA.AtLiteralHashValue
    - id: right
      type: GTA.AtLiteralHashValue
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As AtLiteralHashValue, right As AtLiteralHashValue) As Boolean
  overload: GTA.AtLiteralHashValue.op_Inequality*
  nameWithType.vb: AtLiteralHashValue.<>(AtLiteralHashValue, AtLiteralHashValue)
  fullName.vb: GTA.AtLiteralHashValue.<>(GTA.AtLiteralHashValue, GTA.AtLiteralHashValue)
  name.vb: <>(AtLiteralHashValue, AtLiteralHashValue)
- uid: GTA.AtLiteralHashValue.op_Explicit(System.UInt32)~GTA.AtLiteralHashValue
  commentId: M:GTA.AtLiteralHashValue.op_Explicit(System.UInt32)~GTA.AtLiteralHashValue
  id: op_Explicit(System.UInt32)~GTA.AtLiteralHashValue
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: explicit operator AtLiteralHashValue(uint)
  nameWithType: AtLiteralHashValue.explicit operator AtLiteralHashValue(uint)
  fullName: GTA.AtLiteralHashValue.explicit operator GTA.AtLiteralHashValue(uint)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static explicit operator AtLiteralHashValue(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: GTA.AtLiteralHashValue
    content.vb: Public Shared Narrowing Operator CType(value As UInteger) As AtLiteralHashValue
  overload: GTA.AtLiteralHashValue.op_Explicit*
  nameWithType.vb: AtLiteralHashValue.CType(UInteger)
  fullName.vb: GTA.AtLiteralHashValue.CType(UInteger)
  name.vb: CType(UInteger)
- uid: GTA.AtLiteralHashValue.op_Explicit(GTA.AtLiteralHashValue)~System.UInt32
  commentId: M:GTA.AtLiteralHashValue.op_Explicit(GTA.AtLiteralHashValue)~System.UInt32
  id: op_Explicit(GTA.AtLiteralHashValue)~System.UInt32
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: explicit operator uint(AtLiteralHashValue)
  nameWithType: AtLiteralHashValue.explicit operator uint(AtLiteralHashValue)
  fullName: GTA.AtLiteralHashValue.explicit operator uint(GTA.AtLiteralHashValue)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static explicit operator uint(AtLiteralHashValue value)
    parameters:
    - id: value
      type: GTA.AtLiteralHashValue
    return:
      type: System.UInt32
    content.vb: Public Shared Narrowing Operator CType(value As AtLiteralHashValue) As UInteger
  overload: GTA.AtLiteralHashValue.op_Explicit*
  nameWithType.vb: AtLiteralHashValue.CType(AtLiteralHashValue)
  fullName.vb: GTA.AtLiteralHashValue.CType(GTA.AtLiteralHashValue)
  name.vb: CType(AtLiteralHashValue)
- uid: GTA.AtLiteralHashValue.GetHashCode
  commentId: M:GTA.AtLiteralHashValue.GetHashCode
  id: GetHashCode
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AtLiteralHashValue.GetHashCode()
  fullName: GTA.AtLiteralHashValue.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.AtLiteralHashValue.GetHashCode*
- uid: GTA.AtLiteralHashValue.Null
  commentId: P:GTA.AtLiteralHashValue.Null
  id: "Null"
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: "Null"
  nameWithType: AtLiteralHashValue.Null
  fullName: GTA.AtLiteralHashValue.Null
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static AtLiteralHashValue Null { get; }
    parameters: []
    return:
      type: GTA.AtLiteralHashValue
    content.vb: Public Shared ReadOnly Property Null As AtLiteralHashValue
  overload: GTA.AtLiteralHashValue.Null*
- uid: GTA.AtLiteralHashValue.IsNull
  commentId: P:GTA.AtLiteralHashValue.IsNull
  id: IsNull
  parent: GTA.AtLiteralHashValue
  langs:
  - csharp
  - vb
  name: IsNull
  nameWithType: AtLiteralHashValue.IsNull
  fullName: GTA.AtLiteralHashValue.IsNull
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsNull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNull As Boolean
  overload: GTA.AtLiteralHashValue.IsNull*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.IEquatable{GTA.AtLiteralHashValue}
  commentId: T:System.IEquatable{GTA.AtLiteralHashValue}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<AtLiteralHashValue>
  nameWithType: IEquatable<AtLiteralHashValue>
  fullName: System.IEquatable<GTA.AtLiteralHashValue>
  nameWithType.vb: IEquatable(Of AtLiteralHashValue)
  fullName.vb: System.IEquatable(Of GTA.AtLiteralHashValue)
  name.vb: IEquatable(Of AtLiteralHashValue)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.AtLiteralHashValue
    name: AtLiteralHashValue
    isExternal: true
    href: GTA.AtLiteralHashValue.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.AtLiteralHashValue
    name: AtLiteralHashValue
    isExternal: true
    href: GTA.AtLiteralHashValue.html
  - name: )
- uid: GTA.IJoaatHashValue
  commentId: T:GTA.IJoaatHashValue
  parent: GTA
  isExternal: true
  href: GTA.IJoaatHashValue.html
  name: IJoaatHashValue
  nameWithType: IJoaatHashValue
  fullName: GTA.IJoaatHashValue
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: GTA.AtLiteralHashValue.#ctor*
  commentId: Overload:GTA.AtLiteralHashValue.#ctor
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue__ctor_System_UInt32_
  name: AtLiteralHashValue
  nameWithType: AtLiteralHashValue.AtLiteralHashValue
  fullName: GTA.AtLiteralHashValue.AtLiteralHashValue
  nameWithType.vb: AtLiteralHashValue.New
  fullName.vb: GTA.AtLiteralHashValue.New
  name.vb: New
- uid: GTA.AtLiteralHashValue.GetJoaatHash*
  commentId: Overload:GTA.AtLiteralHashValue.GetJoaatHash
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_GetJoaatHash
  name: GetJoaatHash
  nameWithType: AtLiteralHashValue.GetJoaatHash
  fullName: GTA.AtLiteralHashValue.GetJoaatHash
- uid: GTA.IJoaatHashValue.GetJoaatHash
  commentId: M:GTA.IJoaatHashValue.GetJoaatHash
  parent: GTA.IJoaatHashValue
  isExternal: true
  href: GTA.IJoaatHashValue.html#GTA_IJoaatHashValue_GetJoaatHash
  name: GetJoaatHash()
  nameWithType: IJoaatHashValue.GetJoaatHash()
  fullName: GTA.IJoaatHashValue.GetJoaatHash()
  spec.csharp:
  - uid: GTA.IJoaatHashValue.GetJoaatHash
    name: GetJoaatHash
    isExternal: true
    href: GTA.IJoaatHashValue.html#GTA_IJoaatHashValue_GetJoaatHash
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.IJoaatHashValue.GetJoaatHash
    name: GetJoaatHash
    isExternal: true
    href: GTA.IJoaatHashValue.html#GTA_IJoaatHashValue_GetJoaatHash
  - name: (
  - name: )
- uid: GTA.AtLiteralHashValue.FromString*
  commentId: Overload:GTA.AtLiteralHashValue.FromString
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_FromString_System_String_
  name: FromString
  nameWithType: AtLiteralHashValue.FromString
  fullName: GTA.AtLiteralHashValue.FromString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.AtLiteralHashValue
  commentId: T:GTA.AtLiteralHashValue
  parent: GTA
  isExternal: true
  href: GTA.AtLiteralHashValue.html
  name: AtLiteralHashValue
  nameWithType: AtLiteralHashValue
  fullName: GTA.AtLiteralHashValue
- uid: GTA.AtLiteralHashValue.FromBytes*
  commentId: Overload:GTA.AtLiteralHashValue.FromBytes
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_FromBytes_System_Byte___
  name: FromBytes
  nameWithType: AtLiteralHashValue.FromBytes
  fullName: GTA.AtLiteralHashValue.FromBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: GTA.AtLiteralHashValue.FromStringUtf8*
  commentId: Overload:GTA.AtLiteralHashValue.FromStringUtf8
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_FromStringUtf8_System_String_
  name: FromStringUtf8
  nameWithType: AtLiteralHashValue.FromStringUtf8
  fullName: GTA.AtLiteralHashValue.FromStringUtf8
- uid: GTA.AtLiteralHashValue.Equals*
  commentId: Overload:GTA.AtLiteralHashValue.Equals
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_Equals_GTA_AtLiteralHashValue_
  name: Equals
  nameWithType: AtLiteralHashValue.Equals
  fullName: GTA.AtLiteralHashValue.Equals
- uid: System.IEquatable{GTA.AtLiteralHashValue}.Equals(GTA.AtLiteralHashValue)
  commentId: M:System.IEquatable{GTA.AtLiteralHashValue}.Equals(GTA.AtLiteralHashValue)
  parent: System.IEquatable{GTA.AtLiteralHashValue}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(AtLiteralHashValue)
  nameWithType: IEquatable<AtLiteralHashValue>.Equals(AtLiteralHashValue)
  fullName: System.IEquatable<GTA.AtLiteralHashValue>.Equals(GTA.AtLiteralHashValue)
  nameWithType.vb: IEquatable(Of AtLiteralHashValue).Equals(AtLiteralHashValue)
  fullName.vb: System.IEquatable(Of GTA.AtLiteralHashValue).Equals(GTA.AtLiteralHashValue)
  spec.csharp:
  - uid: System.IEquatable{GTA.AtLiteralHashValue}.Equals(GTA.AtLiteralHashValue)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.AtLiteralHashValue
    name: AtLiteralHashValue
    isExternal: true
    href: GTA.AtLiteralHashValue.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.AtLiteralHashValue}.Equals(GTA.AtLiteralHashValue)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.AtLiteralHashValue
    name: AtLiteralHashValue
    isExternal: true
    href: GTA.AtLiteralHashValue.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.AtLiteralHashValue.op_Equality*
  commentId: Overload:GTA.AtLiteralHashValue.op_Equality
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_op_Equality_GTA_AtLiteralHashValue_GTA_AtLiteralHashValue_
  name: operator ==
  nameWithType: AtLiteralHashValue.operator ==
  fullName: GTA.AtLiteralHashValue.operator ==
  nameWithType.vb: AtLiteralHashValue.=
  fullName.vb: GTA.AtLiteralHashValue.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.AtLiteralHashValue.op_Equality*
    name: ==
    isExternal: true
    href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_op_Equality_GTA_AtLiteralHashValue_GTA_AtLiteralHashValue_
- uid: GTA.AtLiteralHashValue.op_Inequality*
  commentId: Overload:GTA.AtLiteralHashValue.op_Inequality
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_op_Inequality_GTA_AtLiteralHashValue_GTA_AtLiteralHashValue_
  name: operator !=
  nameWithType: AtLiteralHashValue.operator !=
  fullName: GTA.AtLiteralHashValue.operator !=
  nameWithType.vb: AtLiteralHashValue.<>
  fullName.vb: GTA.AtLiteralHashValue.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.AtLiteralHashValue.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_op_Inequality_GTA_AtLiteralHashValue_GTA_AtLiteralHashValue_
- uid: GTA.AtLiteralHashValue.op_Explicit*
  commentId: Overload:GTA.AtLiteralHashValue.op_Explicit
  name: explicit operator
  nameWithType: AtLiteralHashValue.explicit operator
  fullName: GTA.AtLiteralHashValue.explicit operator
  nameWithType.vb: AtLiteralHashValue.CType
  fullName.vb: GTA.AtLiteralHashValue.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.AtLiteralHashValue.GetHashCode*
  commentId: Overload:GTA.AtLiteralHashValue.GetHashCode
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_GetHashCode
  name: GetHashCode
  nameWithType: AtLiteralHashValue.GetHashCode
  fullName: GTA.AtLiteralHashValue.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.AtLiteralHashValue.Null*
  commentId: Overload:GTA.AtLiteralHashValue.Null
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_Null
  name: "Null"
  nameWithType: AtLiteralHashValue.Null
  fullName: GTA.AtLiteralHashValue.Null
- uid: GTA.AtLiteralHashValue.IsNull*
  commentId: Overload:GTA.AtLiteralHashValue.IsNull
  isExternal: true
  href: GTA.AtLiteralHashValue.html#GTA_AtLiteralHashValue_IsNull
  name: IsNull
  nameWithType: AtLiteralHashValue.IsNull
  fullName: GTA.AtLiteralHashValue.IsNull
