### YamlMime:ManagedReference
items:
- uid: GTA.EntityDamageRecord
  commentId: T:GTA.EntityDamageRecord
  id: EntityDamageRecord
  parent: GTA
  children:
  - GTA.EntityDamageRecord.Attacker
  - GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  - GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  - GTA.EntityDamageRecord.Equals(GTA.EntityDamageRecord)
  - GTA.EntityDamageRecord.Equals(System.Object)
  - GTA.EntityDamageRecord.GameTime
  - GTA.EntityDamageRecord.GetHashCode
  - GTA.EntityDamageRecord.Victim
  - GTA.EntityDamageRecord.WeaponHash
  - GTA.EntityDamageRecord.op_Equality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  - GTA.EntityDamageRecord.op_Inequality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  langs:
  - csharp
  - vb
  name: EntityDamageRecord
  nameWithType: EntityDamageRecord
  fullName: GTA.EntityDamageRecord
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public readonly struct EntityDamageRecord
    content.vb: Public Structure EntityDamageRecord
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  commentId: M:GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  id: Deconstruct(GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Deconstruct(out Entity, out WeaponHash, out int)
  nameWithType: EntityDamageRecord.Deconstruct(out Entity, out WeaponHash, out int)
  fullName: GTA.EntityDamageRecord.Deconstruct(out GTA.Entity, out GTA.WeaponHash, out int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Deconstruct(out Entity attacker, out WeaponHash weaponHash, out int gameTime)
    parameters:
    - id: attacker
      type: GTA.Entity
    - id: weaponHash
      type: GTA.WeaponHash
    - id: gameTime
      type: System.Int32
    content.vb: Public Sub Deconstruct(attacker As Entity, weaponHash As WeaponHash, gameTime As Integer)
  overload: GTA.EntityDamageRecord.Deconstruct*
  nameWithType.vb: EntityDamageRecord.Deconstruct(Entity, WeaponHash, Integer)
  fullName.vb: GTA.EntityDamageRecord.Deconstruct(GTA.Entity, GTA.WeaponHash, Integer)
  name.vb: Deconstruct(Entity, WeaponHash, Integer)
- uid: GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  commentId: M:GTA.EntityDamageRecord.Deconstruct(GTA.Entity@,GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  id: Deconstruct(GTA.Entity@,GTA.Entity@,GTA.WeaponHash@,System.Int32@)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Deconstruct(out Entity, out Entity, out WeaponHash, out int)
  nameWithType: EntityDamageRecord.Deconstruct(out Entity, out Entity, out WeaponHash, out int)
  fullName: GTA.EntityDamageRecord.Deconstruct(out GTA.Entity, out GTA.Entity, out GTA.WeaponHash, out int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Deconstruct(out Entity victim, out Entity attacker, out WeaponHash weaponHash, out int gameTime)
    parameters:
    - id: victim
      type: GTA.Entity
    - id: attacker
      type: GTA.Entity
    - id: weaponHash
      type: GTA.WeaponHash
    - id: gameTime
      type: System.Int32
    content.vb: Public Sub Deconstruct(victim As Entity, attacker As Entity, weaponHash As WeaponHash, gameTime As Integer)
  overload: GTA.EntityDamageRecord.Deconstruct*
  nameWithType.vb: EntityDamageRecord.Deconstruct(Entity, Entity, WeaponHash, Integer)
  fullName.vb: GTA.EntityDamageRecord.Deconstruct(GTA.Entity, GTA.Entity, GTA.WeaponHash, Integer)
  name.vb: Deconstruct(Entity, Entity, WeaponHash, Integer)
- uid: GTA.EntityDamageRecord.Equals(GTA.EntityDamageRecord)
  commentId: M:GTA.EntityDamageRecord.Equals(GTA.EntityDamageRecord)
  id: Equals(GTA.EntityDamageRecord)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Equals(EntityDamageRecord)
  nameWithType: EntityDamageRecord.Equals(EntityDamageRecord)
  fullName: GTA.EntityDamageRecord.Equals(GTA.EntityDamageRecord)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool Equals(EntityDamageRecord entityDamageRecord)
    parameters:
    - id: entityDamageRecord
      type: GTA.EntityDamageRecord
    return:
      type: System.Boolean
    content.vb: Public Function Equals(entityDamageRecord As EntityDamageRecord) As Boolean
  overload: GTA.EntityDamageRecord.Equals*
- uid: GTA.EntityDamageRecord.Equals(System.Object)
  commentId: M:GTA.EntityDamageRecord.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: EntityDamageRecord.Equals(object)
  fullName: GTA.EntityDamageRecord.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.EntityDamageRecord.Equals*
  nameWithType.vb: EntityDamageRecord.Equals(Object)
  fullName.vb: GTA.EntityDamageRecord.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.EntityDamageRecord.op_Equality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  commentId: M:GTA.EntityDamageRecord.op_Equality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  id: op_Equality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: operator ==(EntityDamageRecord, EntityDamageRecord)
  nameWithType: EntityDamageRecord.operator ==(EntityDamageRecord, EntityDamageRecord)
  fullName: GTA.EntityDamageRecord.operator ==(GTA.EntityDamageRecord, GTA.EntityDamageRecord)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(EntityDamageRecord left, EntityDamageRecord right)
    parameters:
    - id: left
      type: GTA.EntityDamageRecord
    - id: right
      type: GTA.EntityDamageRecord
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As EntityDamageRecord, right As EntityDamageRecord) As Boolean
  overload: GTA.EntityDamageRecord.op_Equality*
  nameWithType.vb: EntityDamageRecord.=(EntityDamageRecord, EntityDamageRecord)
  fullName.vb: GTA.EntityDamageRecord.=(GTA.EntityDamageRecord, GTA.EntityDamageRecord)
  name.vb: =(EntityDamageRecord, EntityDamageRecord)
- uid: GTA.EntityDamageRecord.op_Inequality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  commentId: M:GTA.EntityDamageRecord.op_Inequality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  id: op_Inequality(GTA.EntityDamageRecord,GTA.EntityDamageRecord)
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: operator !=(EntityDamageRecord, EntityDamageRecord)
  nameWithType: EntityDamageRecord.operator !=(EntityDamageRecord, EntityDamageRecord)
  fullName: GTA.EntityDamageRecord.operator !=(GTA.EntityDamageRecord, GTA.EntityDamageRecord)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(EntityDamageRecord left, EntityDamageRecord right)
    parameters:
    - id: left
      type: GTA.EntityDamageRecord
    - id: right
      type: GTA.EntityDamageRecord
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As EntityDamageRecord, right As EntityDamageRecord) As Boolean
  overload: GTA.EntityDamageRecord.op_Inequality*
  nameWithType.vb: EntityDamageRecord.<>(EntityDamageRecord, EntityDamageRecord)
  fullName.vb: GTA.EntityDamageRecord.<>(GTA.EntityDamageRecord, GTA.EntityDamageRecord)
  name.vb: <>(EntityDamageRecord, EntityDamageRecord)
- uid: GTA.EntityDamageRecord.GetHashCode
  commentId: M:GTA.EntityDamageRecord.GetHashCode
  id: GetHashCode
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EntityDamageRecord.GetHashCode()
  fullName: GTA.EntityDamageRecord.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.EntityDamageRecord.GetHashCode*
- uid: GTA.EntityDamageRecord.Victim
  commentId: P:GTA.EntityDamageRecord.Victim
  id: Victim
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Victim
  nameWithType: EntityDamageRecord.Victim
  fullName: GTA.EntityDamageRecord.Victim
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Entity Victim { get; }
    parameters: []
    return:
      type: GTA.Entity
    content.vb: Public ReadOnly Property Victim As Entity
  overload: GTA.EntityDamageRecord.Victim*
- uid: GTA.EntityDamageRecord.Attacker
  commentId: P:GTA.EntityDamageRecord.Attacker
  id: Attacker
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: Attacker
  nameWithType: EntityDamageRecord.Attacker
  fullName: GTA.EntityDamageRecord.Attacker
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Entity Attacker { get; }
    parameters: []
    return:
      type: GTA.Entity
    content.vb: Public ReadOnly Property Attacker As Entity
  overload: GTA.EntityDamageRecord.Attacker*
- uid: GTA.EntityDamageRecord.GameTime
  commentId: P:GTA.EntityDamageRecord.GameTime
  id: GameTime
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: GameTime
  nameWithType: EntityDamageRecord.GameTime
  fullName: GTA.EntityDamageRecord.GameTime
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int GameTime { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property GameTime As Integer
  overload: GTA.EntityDamageRecord.GameTime*
- uid: GTA.EntityDamageRecord.WeaponHash
  commentId: P:GTA.EntityDamageRecord.WeaponHash
  id: WeaponHash
  parent: GTA.EntityDamageRecord
  langs:
  - csharp
  - vb
  name: WeaponHash
  nameWithType: EntityDamageRecord.WeaponHash
  fullName: GTA.EntityDamageRecord.WeaponHash
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public WeaponHash WeaponHash { get; }
    parameters: []
    return:
      type: GTA.WeaponHash
    content.vb: Public ReadOnly Property WeaponHash As WeaponHash
  overload: GTA.EntityDamageRecord.WeaponHash*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.EntityDamageRecord.Deconstruct*
  commentId: Overload:GTA.EntityDamageRecord.Deconstruct
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_Deconstruct_GTA_Entity__GTA_WeaponHash__System_Int32__
  name: Deconstruct
  nameWithType: EntityDamageRecord.Deconstruct
  fullName: GTA.EntityDamageRecord.Deconstruct
- uid: GTA.Entity
  commentId: T:GTA.Entity
  parent: GTA
  isExternal: true
  href: GTA.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: GTA.Entity
- uid: GTA.WeaponHash
  commentId: T:GTA.WeaponHash
  parent: GTA
  isExternal: true
  href: GTA.WeaponHash.html
  name: WeaponHash
  nameWithType: WeaponHash
  fullName: GTA.WeaponHash
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.EntityDamageRecord.Equals*
  commentId: Overload:GTA.EntityDamageRecord.Equals
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_Equals_GTA_EntityDamageRecord_
  name: Equals
  nameWithType: EntityDamageRecord.Equals
  fullName: GTA.EntityDamageRecord.Equals
- uid: GTA.EntityDamageRecord
  commentId: T:GTA.EntityDamageRecord
  parent: GTA
  isExternal: true
  href: GTA.EntityDamageRecord.html
  name: EntityDamageRecord
  nameWithType: EntityDamageRecord
  fullName: GTA.EntityDamageRecord
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.EntityDamageRecord.op_Equality*
  commentId: Overload:GTA.EntityDamageRecord.op_Equality
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_op_Equality_GTA_EntityDamageRecord_GTA_EntityDamageRecord_
  name: operator ==
  nameWithType: EntityDamageRecord.operator ==
  fullName: GTA.EntityDamageRecord.operator ==
  nameWithType.vb: EntityDamageRecord.=
  fullName.vb: GTA.EntityDamageRecord.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.EntityDamageRecord.op_Equality*
    name: ==
    isExternal: true
    href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_op_Equality_GTA_EntityDamageRecord_GTA_EntityDamageRecord_
- uid: GTA.EntityDamageRecord.op_Inequality*
  commentId: Overload:GTA.EntityDamageRecord.op_Inequality
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_op_Inequality_GTA_EntityDamageRecord_GTA_EntityDamageRecord_
  name: operator !=
  nameWithType: EntityDamageRecord.operator !=
  fullName: GTA.EntityDamageRecord.operator !=
  nameWithType.vb: EntityDamageRecord.<>
  fullName.vb: GTA.EntityDamageRecord.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.EntityDamageRecord.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_op_Inequality_GTA_EntityDamageRecord_GTA_EntityDamageRecord_
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.EntityDamageRecord.GetHashCode*
  commentId: Overload:GTA.EntityDamageRecord.GetHashCode
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_GetHashCode
  name: GetHashCode
  nameWithType: EntityDamageRecord.GetHashCode
  fullName: GTA.EntityDamageRecord.GetHashCode
- uid: GTA.EntityDamageRecord.Victim*
  commentId: Overload:GTA.EntityDamageRecord.Victim
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_Victim
  name: Victim
  nameWithType: EntityDamageRecord.Victim
  fullName: GTA.EntityDamageRecord.Victim
- uid: GTA.EntityDamageRecord.Attacker*
  commentId: Overload:GTA.EntityDamageRecord.Attacker
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_Attacker
  name: Attacker
  nameWithType: EntityDamageRecord.Attacker
  fullName: GTA.EntityDamageRecord.Attacker
- uid: GTA.EntityDamageRecord.GameTime*
  commentId: Overload:GTA.EntityDamageRecord.GameTime
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_GameTime
  name: GameTime
  nameWithType: EntityDamageRecord.GameTime
  fullName: GTA.EntityDamageRecord.GameTime
- uid: GTA.EntityDamageRecord.WeaponHash*
  commentId: Overload:GTA.EntityDamageRecord.WeaponHash
  isExternal: true
  href: GTA.EntityDamageRecord.html#GTA_EntityDamageRecord_WeaponHash
  name: WeaponHash
  nameWithType: EntityDamageRecord.WeaponHash
  fullName: GTA.EntityDamageRecord.WeaponHash
