### YamlMime:ManagedReference
items:
- uid: GTA.RelationshipGroup
  commentId: T:GTA.RelationshipGroup
  id: RelationshipGroup
  parent: GTA
  children:
  - GTA.RelationshipGroup.#ctor(GTA.RelationshipGroupHash)
  - GTA.RelationshipGroup.#ctor(System.Int32)
  - GTA.RelationshipGroup.#ctor(System.UInt32)
  - GTA.RelationshipGroup.ClearRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  - GTA.RelationshipGroup.Equals(GTA.RelationshipGroup)
  - GTA.RelationshipGroup.Equals(System.Object)
  - GTA.RelationshipGroup.GetHashCode
  - GTA.RelationshipGroup.GetRelationshipBetweenGroups(GTA.RelationshipGroup)
  - GTA.RelationshipGroup.Hash
  - GTA.RelationshipGroup.NativeValue
  - GTA.RelationshipGroup.Remove
  - GTA.RelationshipGroup.SetRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  - GTA.RelationshipGroup.ToString
  - GTA.RelationshipGroup.op_Equality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  - GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroup)~GTA.Native.InputArgument
  - GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroupHash)~GTA.RelationshipGroup
  - GTA.RelationshipGroup.op_Implicit(System.Int32)~GTA.RelationshipGroup
  - GTA.RelationshipGroup.op_Implicit(System.String)~GTA.RelationshipGroup
  - GTA.RelationshipGroup.op_Implicit(System.UInt32)~GTA.RelationshipGroup
  - GTA.RelationshipGroup.op_Inequality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  langs:
  - csharp
  - vb
  name: RelationshipGroup
  nameWithType: RelationshipGroup
  fullName: GTA.RelationshipGroup
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public struct RelationshipGroup : INativeValue, IEquatable<RelationshipGroup>'
    content.vb: Public Structure RelationshipGroup Implements INativeValue, IEquatable(Of RelationshipGroup)
  implements:
  - GTA.Native.INativeValue
  - System.IEquatable{GTA.RelationshipGroup}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.RelationshipGroup.#ctor(System.Int32)
  commentId: M:GTA.RelationshipGroup.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: RelationshipGroup(int)
  nameWithType: RelationshipGroup.RelationshipGroup(int)
  fullName: GTA.RelationshipGroup.RelationshipGroup(int)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public RelationshipGroup(int hash)
    parameters:
    - id: hash
      type: System.Int32
    content.vb: Public Sub New(hash As Integer)
  overload: GTA.RelationshipGroup.#ctor*
  nameWithType.vb: RelationshipGroup.New(Integer)
  fullName.vb: GTA.RelationshipGroup.New(Integer)
  name.vb: New(Integer)
- uid: GTA.RelationshipGroup.#ctor(System.UInt32)
  commentId: M:GTA.RelationshipGroup.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: RelationshipGroup(uint)
  nameWithType: RelationshipGroup.RelationshipGroup(uint)
  fullName: GTA.RelationshipGroup.RelationshipGroup(uint)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public RelationshipGroup(uint hash)
    parameters:
    - id: hash
      type: System.UInt32
    content.vb: Public Sub New(hash As UInteger)
  overload: GTA.RelationshipGroup.#ctor*
  nameWithType.vb: RelationshipGroup.New(UInteger)
  fullName.vb: GTA.RelationshipGroup.New(UInteger)
  name.vb: New(UInteger)
- uid: GTA.RelationshipGroup.#ctor(GTA.RelationshipGroupHash)
  commentId: M:GTA.RelationshipGroup.#ctor(GTA.RelationshipGroupHash)
  id: '#ctor(GTA.RelationshipGroupHash)'
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: RelationshipGroup(RelationshipGroupHash)
  nameWithType: RelationshipGroup.RelationshipGroup(RelationshipGroupHash)
  fullName: GTA.RelationshipGroup.RelationshipGroup(GTA.RelationshipGroupHash)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public RelationshipGroup(RelationshipGroupHash hash)
    parameters:
    - id: hash
      type: GTA.RelationshipGroupHash
    content.vb: Public Sub New(hash As RelationshipGroupHash)
  overload: GTA.RelationshipGroup.#ctor*
  nameWithType.vb: RelationshipGroup.New(RelationshipGroupHash)
  fullName.vb: GTA.RelationshipGroup.New(GTA.RelationshipGroupHash)
  name.vb: New(RelationshipGroupHash)
- uid: GTA.RelationshipGroup.GetRelationshipBetweenGroups(GTA.RelationshipGroup)
  commentId: M:GTA.RelationshipGroup.GetRelationshipBetweenGroups(GTA.RelationshipGroup)
  id: GetRelationshipBetweenGroups(GTA.RelationshipGroup)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: GetRelationshipBetweenGroups(RelationshipGroup)
  nameWithType: RelationshipGroup.GetRelationshipBetweenGroups(RelationshipGroup)
  fullName: GTA.RelationshipGroup.GetRelationshipBetweenGroups(GTA.RelationshipGroup)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Relationship GetRelationshipBetweenGroups(RelationshipGroup targetGroup)
    parameters:
    - id: targetGroup
      type: GTA.RelationshipGroup
    return:
      type: GTA.Relationship
    content.vb: Public Function GetRelationshipBetweenGroups(targetGroup As RelationshipGroup) As Relationship
  overload: GTA.RelationshipGroup.GetRelationshipBetweenGroups*
- uid: GTA.RelationshipGroup.SetRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  commentId: M:GTA.RelationshipGroup.SetRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  id: SetRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: SetRelationshipBetweenGroups(RelationshipGroup, Relationship, bool)
  nameWithType: RelationshipGroup.SetRelationshipBetweenGroups(RelationshipGroup, Relationship, bool)
  fullName: GTA.RelationshipGroup.SetRelationshipBetweenGroups(GTA.RelationshipGroup, GTA.Relationship, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void SetRelationshipBetweenGroups(RelationshipGroup targetGroup, Relationship relationship, bool bidirectionally = false)
    parameters:
    - id: targetGroup
      type: GTA.RelationshipGroup
    - id: relationship
      type: GTA.Relationship
    - id: bidirectionally
      type: System.Boolean
    content.vb: Public Sub SetRelationshipBetweenGroups(targetGroup As RelationshipGroup, relationship As Relationship, bidirectionally As Boolean = False)
  overload: GTA.RelationshipGroup.SetRelationshipBetweenGroups*
  nameWithType.vb: RelationshipGroup.SetRelationshipBetweenGroups(RelationshipGroup, Relationship, Boolean)
  fullName.vb: GTA.RelationshipGroup.SetRelationshipBetweenGroups(GTA.RelationshipGroup, GTA.Relationship, Boolean)
  name.vb: SetRelationshipBetweenGroups(RelationshipGroup, Relationship, Boolean)
- uid: GTA.RelationshipGroup.ClearRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  commentId: M:GTA.RelationshipGroup.ClearRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  id: ClearRelationshipBetweenGroups(GTA.RelationshipGroup,GTA.Relationship,System.Boolean)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: ClearRelationshipBetweenGroups(RelationshipGroup, Relationship, bool)
  nameWithType: RelationshipGroup.ClearRelationshipBetweenGroups(RelationshipGroup, Relationship, bool)
  fullName: GTA.RelationshipGroup.ClearRelationshipBetweenGroups(GTA.RelationshipGroup, GTA.Relationship, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void ClearRelationshipBetweenGroups(RelationshipGroup targetGroup, Relationship relationship, bool bidirectionally = false)
    parameters:
    - id: targetGroup
      type: GTA.RelationshipGroup
    - id: relationship
      type: GTA.Relationship
    - id: bidirectionally
      type: System.Boolean
    content.vb: Public Sub ClearRelationshipBetweenGroups(targetGroup As RelationshipGroup, relationship As Relationship, bidirectionally As Boolean = False)
  overload: GTA.RelationshipGroup.ClearRelationshipBetweenGroups*
  nameWithType.vb: RelationshipGroup.ClearRelationshipBetweenGroups(RelationshipGroup, Relationship, Boolean)
  fullName.vb: GTA.RelationshipGroup.ClearRelationshipBetweenGroups(GTA.RelationshipGroup, GTA.Relationship, Boolean)
  name.vb: ClearRelationshipBetweenGroups(RelationshipGroup, Relationship, Boolean)
- uid: GTA.RelationshipGroup.Remove
  commentId: M:GTA.RelationshipGroup.Remove
  id: Remove
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: Remove()
  nameWithType: RelationshipGroup.Remove()
  fullName: GTA.RelationshipGroup.Remove()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Remove()
    content.vb: Public Sub Remove()
  overload: GTA.RelationshipGroup.Remove*
- uid: GTA.RelationshipGroup.Equals(GTA.RelationshipGroup)
  commentId: M:GTA.RelationshipGroup.Equals(GTA.RelationshipGroup)
  id: Equals(GTA.RelationshipGroup)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: Equals(RelationshipGroup)
  nameWithType: RelationshipGroup.Equals(RelationshipGroup)
  fullName: GTA.RelationshipGroup.Equals(GTA.RelationshipGroup)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public bool Equals(RelationshipGroup group)
    parameters:
    - id: group
      type: GTA.RelationshipGroup
    return:
      type: System.Boolean
    content.vb: Public Function Equals(group As RelationshipGroup) As Boolean
  overload: GTA.RelationshipGroup.Equals*
  implements:
  - System.IEquatable{GTA.RelationshipGroup}.Equals(GTA.RelationshipGroup)
- uid: GTA.RelationshipGroup.Equals(System.Object)
  commentId: M:GTA.RelationshipGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: RelationshipGroup.Equals(object)
  fullName: GTA.RelationshipGroup.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.RelationshipGroup.Equals*
  nameWithType.vb: RelationshipGroup.Equals(Object)
  fullName.vb: GTA.RelationshipGroup.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.RelationshipGroup.op_Equality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  commentId: M:GTA.RelationshipGroup.op_Equality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  id: op_Equality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: operator ==(RelationshipGroup, RelationshipGroup)
  nameWithType: RelationshipGroup.operator ==(RelationshipGroup, RelationshipGroup)
  fullName: GTA.RelationshipGroup.operator ==(GTA.RelationshipGroup, GTA.RelationshipGroup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(RelationshipGroup left, RelationshipGroup right)
    parameters:
    - id: left
      type: GTA.RelationshipGroup
    - id: right
      type: GTA.RelationshipGroup
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As RelationshipGroup, right As RelationshipGroup) As Boolean
  overload: GTA.RelationshipGroup.op_Equality*
  nameWithType.vb: RelationshipGroup.=(RelationshipGroup, RelationshipGroup)
  fullName.vb: GTA.RelationshipGroup.=(GTA.RelationshipGroup, GTA.RelationshipGroup)
  name.vb: =(RelationshipGroup, RelationshipGroup)
- uid: GTA.RelationshipGroup.op_Inequality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  commentId: M:GTA.RelationshipGroup.op_Inequality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  id: op_Inequality(GTA.RelationshipGroup,GTA.RelationshipGroup)
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: operator !=(RelationshipGroup, RelationshipGroup)
  nameWithType: RelationshipGroup.operator !=(RelationshipGroup, RelationshipGroup)
  fullName: GTA.RelationshipGroup.operator !=(GTA.RelationshipGroup, GTA.RelationshipGroup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(RelationshipGroup left, RelationshipGroup right)
    parameters:
    - id: left
      type: GTA.RelationshipGroup
    - id: right
      type: GTA.RelationshipGroup
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As RelationshipGroup, right As RelationshipGroup) As Boolean
  overload: GTA.RelationshipGroup.op_Inequality*
  nameWithType.vb: RelationshipGroup.<>(RelationshipGroup, RelationshipGroup)
  fullName.vb: GTA.RelationshipGroup.<>(GTA.RelationshipGroup, GTA.RelationshipGroup)
  name.vb: <>(RelationshipGroup, RelationshipGroup)
- uid: GTA.RelationshipGroup.op_Implicit(System.Int32)~GTA.RelationshipGroup
  commentId: M:GTA.RelationshipGroup.op_Implicit(System.Int32)~GTA.RelationshipGroup
  id: op_Implicit(System.Int32)~GTA.RelationshipGroup
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: implicit operator RelationshipGroup(int)
  nameWithType: RelationshipGroup.implicit operator RelationshipGroup(int)
  fullName: GTA.RelationshipGroup.implicit operator GTA.RelationshipGroup(int)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator RelationshipGroup(int source)
    parameters:
    - id: source
      type: System.Int32
    return:
      type: GTA.RelationshipGroup
    content.vb: Public Shared Widening Operator CType(source As Integer) As RelationshipGroup
  overload: GTA.RelationshipGroup.op_Implicit*
  nameWithType.vb: RelationshipGroup.CType(Integer)
  fullName.vb: GTA.RelationshipGroup.CType(Integer)
  name.vb: CType(Integer)
- uid: GTA.RelationshipGroup.op_Implicit(System.UInt32)~GTA.RelationshipGroup
  commentId: M:GTA.RelationshipGroup.op_Implicit(System.UInt32)~GTA.RelationshipGroup
  id: op_Implicit(System.UInt32)~GTA.RelationshipGroup
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: implicit operator RelationshipGroup(uint)
  nameWithType: RelationshipGroup.implicit operator RelationshipGroup(uint)
  fullName: GTA.RelationshipGroup.implicit operator GTA.RelationshipGroup(uint)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator RelationshipGroup(uint source)
    parameters:
    - id: source
      type: System.UInt32
    return:
      type: GTA.RelationshipGroup
    content.vb: Public Shared Widening Operator CType(source As UInteger) As RelationshipGroup
  overload: GTA.RelationshipGroup.op_Implicit*
  nameWithType.vb: RelationshipGroup.CType(UInteger)
  fullName.vb: GTA.RelationshipGroup.CType(UInteger)
  name.vb: CType(UInteger)
- uid: GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroupHash)~GTA.RelationshipGroup
  commentId: M:GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroupHash)~GTA.RelationshipGroup
  id: op_Implicit(GTA.RelationshipGroupHash)~GTA.RelationshipGroup
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: implicit operator RelationshipGroup(RelationshipGroupHash)
  nameWithType: RelationshipGroup.implicit operator RelationshipGroup(RelationshipGroupHash)
  fullName: GTA.RelationshipGroup.implicit operator GTA.RelationshipGroup(GTA.RelationshipGroupHash)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator RelationshipGroup(RelationshipGroupHash source)
    parameters:
    - id: source
      type: GTA.RelationshipGroupHash
    return:
      type: GTA.RelationshipGroup
    content.vb: Public Shared Widening Operator CType(source As RelationshipGroupHash) As RelationshipGroup
  overload: GTA.RelationshipGroup.op_Implicit*
  nameWithType.vb: RelationshipGroup.CType(RelationshipGroupHash)
  fullName.vb: GTA.RelationshipGroup.CType(GTA.RelationshipGroupHash)
  name.vb: CType(RelationshipGroupHash)
- uid: GTA.RelationshipGroup.op_Implicit(System.String)~GTA.RelationshipGroup
  commentId: M:GTA.RelationshipGroup.op_Implicit(System.String)~GTA.RelationshipGroup
  id: op_Implicit(System.String)~GTA.RelationshipGroup
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: implicit operator RelationshipGroup(string)
  nameWithType: RelationshipGroup.implicit operator RelationshipGroup(string)
  fullName: GTA.RelationshipGroup.implicit operator GTA.RelationshipGroup(string)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator RelationshipGroup(string source)
    parameters:
    - id: source
      type: System.String
    return:
      type: GTA.RelationshipGroup
    content.vb: Public Shared Widening Operator CType(source As String) As RelationshipGroup
  overload: GTA.RelationshipGroup.op_Implicit*
  nameWithType.vb: RelationshipGroup.CType(String)
  fullName.vb: GTA.RelationshipGroup.CType(String)
  name.vb: CType(String)
- uid: GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroup)~GTA.Native.InputArgument
  commentId: M:GTA.RelationshipGroup.op_Implicit(GTA.RelationshipGroup)~GTA.Native.InputArgument
  id: op_Implicit(GTA.RelationshipGroup)~GTA.Native.InputArgument
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: implicit operator InputArgument(RelationshipGroup)
  nameWithType: RelationshipGroup.implicit operator InputArgument(RelationshipGroup)
  fullName: GTA.RelationshipGroup.implicit operator GTA.Native.InputArgument(GTA.RelationshipGroup)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static implicit operator InputArgument(RelationshipGroup value)
    parameters:
    - id: value
      type: GTA.RelationshipGroup
    return:
      type: GTA.Native.InputArgument
    content.vb: Public Shared Widening Operator CType(value As RelationshipGroup) As InputArgument
  overload: GTA.RelationshipGroup.op_Implicit*
  nameWithType.vb: RelationshipGroup.CType(RelationshipGroup)
  fullName.vb: GTA.RelationshipGroup.CType(GTA.RelationshipGroup)
  name.vb: CType(RelationshipGroup)
- uid: GTA.RelationshipGroup.GetHashCode
  commentId: M:GTA.RelationshipGroup.GetHashCode
  id: GetHashCode
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RelationshipGroup.GetHashCode()
  fullName: GTA.RelationshipGroup.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.RelationshipGroup.GetHashCode*
- uid: GTA.RelationshipGroup.ToString
  commentId: M:GTA.RelationshipGroup.ToString
  id: ToString
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RelationshipGroup.ToString()
  fullName: GTA.RelationshipGroup.ToString()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: GTA.RelationshipGroup.ToString*
- uid: GTA.RelationshipGroup.Hash
  commentId: P:GTA.RelationshipGroup.Hash
  id: Hash
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: RelationshipGroup.Hash
  fullName: GTA.RelationshipGroup.Hash
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public readonly int Hash { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Hash As Integer
  overload: GTA.RelationshipGroup.Hash*
- uid: GTA.RelationshipGroup.NativeValue
  commentId: P:GTA.RelationshipGroup.NativeValue
  id: NativeValue
  parent: GTA.RelationshipGroup
  langs:
  - csharp
  - vb
  name: NativeValue
  nameWithType: RelationshipGroup.NativeValue
  fullName: GTA.RelationshipGroup.NativeValue
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public ulong NativeValue { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property NativeValue As ULong
  overload: GTA.RelationshipGroup.NativeValue*
  implements:
  - GTA.Native.INativeValue.NativeValue
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: GTA.Native.INativeValue
  commentId: T:GTA.Native.INativeValue
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.INativeValue.html
  name: INativeValue
  nameWithType: INativeValue
  fullName: GTA.Native.INativeValue
- uid: System.IEquatable{GTA.RelationshipGroup}
  commentId: T:System.IEquatable{GTA.RelationshipGroup}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RelationshipGroup>
  nameWithType: IEquatable<RelationshipGroup>
  fullName: System.IEquatable<GTA.RelationshipGroup>
  nameWithType.vb: IEquatable(Of RelationshipGroup)
  fullName.vb: System.IEquatable(Of GTA.RelationshipGroup)
  name.vb: IEquatable(Of RelationshipGroup)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: GTA.Native
  commentId: N:GTA.Native
  isExternal: true
  href: GTA.html
  name: GTA.Native
  nameWithType: GTA.Native
  fullName: GTA.Native
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Native
    name: Native
    isExternal: true
    href: GTA.Native.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.RelationshipGroup.#ctor*
  commentId: Overload:GTA.RelationshipGroup.#ctor
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup__ctor_System_Int32_
  name: RelationshipGroup
  nameWithType: RelationshipGroup.RelationshipGroup
  fullName: GTA.RelationshipGroup.RelationshipGroup
  nameWithType.vb: RelationshipGroup.New
  fullName.vb: GTA.RelationshipGroup.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: GTA.RelationshipGroupHash
  commentId: T:GTA.RelationshipGroupHash
  parent: GTA
  isExternal: true
  href: GTA.RelationshipGroupHash.html
  name: RelationshipGroupHash
  nameWithType: RelationshipGroupHash
  fullName: GTA.RelationshipGroupHash
- uid: GTA.RelationshipGroup.GetRelationshipBetweenGroups*
  commentId: Overload:GTA.RelationshipGroup.GetRelationshipBetweenGroups
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_GetRelationshipBetweenGroups_GTA_RelationshipGroup_
  name: GetRelationshipBetweenGroups
  nameWithType: RelationshipGroup.GetRelationshipBetweenGroups
  fullName: GTA.RelationshipGroup.GetRelationshipBetweenGroups
- uid: GTA.RelationshipGroup
  commentId: T:GTA.RelationshipGroup
  parent: GTA
  isExternal: true
  href: GTA.RelationshipGroup.html
  name: RelationshipGroup
  nameWithType: RelationshipGroup
  fullName: GTA.RelationshipGroup
- uid: GTA.Relationship
  commentId: T:GTA.Relationship
  parent: GTA
  isExternal: true
  href: GTA.Relationship.html
  name: Relationship
  nameWithType: Relationship
  fullName: GTA.Relationship
- uid: GTA.RelationshipGroup.SetRelationshipBetweenGroups*
  commentId: Overload:GTA.RelationshipGroup.SetRelationshipBetweenGroups
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_SetRelationshipBetweenGroups_GTA_RelationshipGroup_GTA_Relationship_System_Boolean_
  name: SetRelationshipBetweenGroups
  nameWithType: RelationshipGroup.SetRelationshipBetweenGroups
  fullName: GTA.RelationshipGroup.SetRelationshipBetweenGroups
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.RelationshipGroup.ClearRelationshipBetweenGroups*
  commentId: Overload:GTA.RelationshipGroup.ClearRelationshipBetweenGroups
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_ClearRelationshipBetweenGroups_GTA_RelationshipGroup_GTA_Relationship_System_Boolean_
  name: ClearRelationshipBetweenGroups
  nameWithType: RelationshipGroup.ClearRelationshipBetweenGroups
  fullName: GTA.RelationshipGroup.ClearRelationshipBetweenGroups
- uid: GTA.RelationshipGroup.Remove*
  commentId: Overload:GTA.RelationshipGroup.Remove
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_Remove
  name: Remove
  nameWithType: RelationshipGroup.Remove
  fullName: GTA.RelationshipGroup.Remove
- uid: GTA.RelationshipGroup.Equals*
  commentId: Overload:GTA.RelationshipGroup.Equals
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_Equals_GTA_RelationshipGroup_
  name: Equals
  nameWithType: RelationshipGroup.Equals
  fullName: GTA.RelationshipGroup.Equals
- uid: System.IEquatable{GTA.RelationshipGroup}.Equals(GTA.RelationshipGroup)
  commentId: M:System.IEquatable{GTA.RelationshipGroup}.Equals(GTA.RelationshipGroup)
  parent: System.IEquatable{GTA.RelationshipGroup}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(RelationshipGroup)
  nameWithType: IEquatable<RelationshipGroup>.Equals(RelationshipGroup)
  fullName: System.IEquatable<GTA.RelationshipGroup>.Equals(GTA.RelationshipGroup)
  nameWithType.vb: IEquatable(Of RelationshipGroup).Equals(RelationshipGroup)
  fullName.vb: System.IEquatable(Of GTA.RelationshipGroup).Equals(GTA.RelationshipGroup)
  spec.csharp:
  - uid: System.IEquatable{GTA.RelationshipGroup}.Equals(GTA.RelationshipGroup)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.RelationshipGroup}.Equals(GTA.RelationshipGroup)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.RelationshipGroup
    name: RelationshipGroup
    isExternal: true
    href: GTA.RelationshipGroup.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: GTA.RelationshipGroup.op_Equality*
  commentId: Overload:GTA.RelationshipGroup.op_Equality
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_op_Equality_GTA_RelationshipGroup_GTA_RelationshipGroup_
  name: operator ==
  nameWithType: RelationshipGroup.operator ==
  fullName: GTA.RelationshipGroup.operator ==
  nameWithType.vb: RelationshipGroup.=
  fullName.vb: GTA.RelationshipGroup.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.RelationshipGroup.op_Equality*
    name: ==
    isExternal: true
    href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_op_Equality_GTA_RelationshipGroup_GTA_RelationshipGroup_
- uid: GTA.RelationshipGroup.op_Inequality*
  commentId: Overload:GTA.RelationshipGroup.op_Inequality
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_op_Inequality_GTA_RelationshipGroup_GTA_RelationshipGroup_
  name: operator !=
  nameWithType: RelationshipGroup.operator !=
  fullName: GTA.RelationshipGroup.operator !=
  nameWithType.vb: RelationshipGroup.<>
  fullName.vb: GTA.RelationshipGroup.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.RelationshipGroup.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_op_Inequality_GTA_RelationshipGroup_GTA_RelationshipGroup_
- uid: GTA.RelationshipGroup.op_Implicit*
  commentId: Overload:GTA.RelationshipGroup.op_Implicit
  name: implicit operator
  nameWithType: RelationshipGroup.implicit operator
  fullName: GTA.RelationshipGroup.implicit operator
  nameWithType.vb: RelationshipGroup.CType
  fullName.vb: GTA.RelationshipGroup.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.Native.InputArgument
  commentId: T:GTA.Native.InputArgument
  parent: GTA.Native
  isExternal: true
  href: GTA.Native.InputArgument.html
  name: InputArgument
  nameWithType: InputArgument
  fullName: GTA.Native.InputArgument
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.RelationshipGroup.GetHashCode*
  commentId: Overload:GTA.RelationshipGroup.GetHashCode
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_GetHashCode
  name: GetHashCode
  nameWithType: RelationshipGroup.GetHashCode
  fullName: GTA.RelationshipGroup.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: GTA.RelationshipGroup.ToString*
  commentId: Overload:GTA.RelationshipGroup.ToString
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_ToString
  name: ToString
  nameWithType: RelationshipGroup.ToString
  fullName: GTA.RelationshipGroup.ToString
- uid: GTA.RelationshipGroup.Hash*
  commentId: Overload:GTA.RelationshipGroup.Hash
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_Hash
  name: Hash
  nameWithType: RelationshipGroup.Hash
  fullName: GTA.RelationshipGroup.Hash
- uid: GTA.RelationshipGroup.NativeValue*
  commentId: Overload:GTA.RelationshipGroup.NativeValue
  isExternal: true
  href: GTA.RelationshipGroup.html#GTA_RelationshipGroup_NativeValue
  name: NativeValue
  nameWithType: RelationshipGroup.NativeValue
  fullName: GTA.RelationshipGroup.NativeValue
- uid: GTA.Native.INativeValue.NativeValue
  commentId: P:GTA.Native.INativeValue.NativeValue
  parent: GTA.Native.INativeValue
  isExternal: true
  href: GTA.Native.INativeValue.html#GTA_Native_INativeValue_NativeValue
  name: NativeValue
  nameWithType: INativeValue.NativeValue
  fullName: GTA.Native.INativeValue.NativeValue
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
