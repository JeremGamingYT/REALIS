### YamlMime:ManagedReference
items:
- uid: GTA.Math.Vector2
  commentId: T:GTA.Math.Vector2
  id: Vector2
  parent: GTA.Math
  children:
  - GTA.Math.Vector2.#ctor(System.Single,System.Single)
  - GTA.Math.Vector2.Add(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Angle(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Clamp(GTA.Math.Vector2,GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Distance(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.DistanceSquared(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.DistanceTo(GTA.Math.Vector2)
  - GTA.Math.Vector2.DistanceToSquared(GTA.Math.Vector2)
  - GTA.Math.Vector2.Divide(GTA.Math.Vector2,System.Single)
  - GTA.Math.Vector2.Dot(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Down
  - GTA.Math.Vector2.Equals(GTA.Math.Vector2)
  - GTA.Math.Vector2.Equals(System.Object)
  - GTA.Math.Vector2.GetHashCode
  - GTA.Math.Vector2.Item(System.Int32)
  - GTA.Math.Vector2.Left
  - GTA.Math.Vector2.Length
  - GTA.Math.Vector2.LengthSquared
  - GTA.Math.Vector2.Lerp(GTA.Math.Vector2,GTA.Math.Vector2,System.Single)
  - GTA.Math.Vector2.Maximize(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Minimize(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Multiply(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Multiply(GTA.Math.Vector2,System.Single)
  - GTA.Math.Vector2.Negate(GTA.Math.Vector2)
  - GTA.Math.Vector2.Normalize
  - GTA.Math.Vector2.Normalize(GTA.Math.Vector2)
  - GTA.Math.Vector2.Normalized
  - GTA.Math.Vector2.One
  - GTA.Math.Vector2.RandomXY
  - GTA.Math.Vector2.Reflect(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Right
  - GTA.Math.Vector2.SignedAngle(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.Subtract(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.ToHeading
  - GTA.Math.Vector2.ToString
  - GTA.Math.Vector2.ToString(System.String)
  - GTA.Math.Vector2.ToString(System.String,System.IFormatProvider)
  - GTA.Math.Vector2.UnitX
  - GTA.Math.Vector2.UnitY
  - GTA.Math.Vector2.Up
  - GTA.Math.Vector2.X
  - GTA.Math.Vector2.Y
  - GTA.Math.Vector2.Zero
  - GTA.Math.Vector2.op_Addition(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.op_Division(GTA.Math.Vector2,System.Single)
  - GTA.Math.Vector2.op_Equality(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.op_Implicit(GTA.Math.Vector2)~GTA.Math.Vector3
  - GTA.Math.Vector2.op_Inequality(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.op_Multiply(GTA.Math.Vector2,System.Single)
  - GTA.Math.Vector2.op_Multiply(System.Single,GTA.Math.Vector2)
  - GTA.Math.Vector2.op_Subtraction(GTA.Math.Vector2,GTA.Math.Vector2)
  - GTA.Math.Vector2.op_UnaryNegation(GTA.Math.Vector2)
  langs:
  - csharp
  - vb
  name: Vector2
  nameWithType: Vector2
  fullName: GTA.Math.Vector2
  type: Struct
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: 'public struct Vector2 : IEquatable<Vector2>, IFormattable'
    content.vb: Public Structure Vector2 Implements IEquatable(Of Vector2), IFormattable
  implements:
  - System.IEquatable{GTA.Math.Vector2}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.Math.Vector2.X
  commentId: F:GTA.Math.Vector2.X
  id: X
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector2.X
  fullName: GTA.Math.Vector2.X
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float X
    return:
      type: System.Single
    content.vb: Public X As Single
- uid: GTA.Math.Vector2.Y
  commentId: F:GTA.Math.Vector2.Y
  id: Y
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector2.Y
  fullName: GTA.Math.Vector2.Y
  type: Field
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float Y
    return:
      type: System.Single
    content.vb: Public Y As Single
- uid: GTA.Math.Vector2.#ctor(System.Single,System.Single)
  commentId: M:GTA.Math.Vector2.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Vector2(float, float)
  nameWithType: Vector2.Vector2(float, float)
  fullName: GTA.Math.Vector2.Vector2(float, float)
  type: Constructor
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public Vector2(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single)
  overload: GTA.Math.Vector2.#ctor*
  nameWithType.vb: Vector2.New(Single, Single)
  fullName.vb: GTA.Math.Vector2.New(Single, Single)
  name.vb: New(Single, Single)
- uid: GTA.Math.Vector2.Length
  commentId: M:GTA.Math.Vector2.Length
  id: Length
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Vector2.Length()
  fullName: GTA.Math.Vector2.Length()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float Length()
    return:
      type: System.Single
    content.vb: Public Function Length() As Single
  overload: GTA.Math.Vector2.Length*
- uid: GTA.Math.Vector2.LengthSquared
  commentId: M:GTA.Math.Vector2.LengthSquared
  id: LengthSquared
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Vector2.LengthSquared()
  fullName: GTA.Math.Vector2.LengthSquared()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float LengthSquared()
    return:
      type: System.Single
    content.vb: Public Function LengthSquared() As Single
  overload: GTA.Math.Vector2.LengthSquared*
- uid: GTA.Math.Vector2.Normalize
  commentId: M:GTA.Math.Vector2.Normalize
  id: Normalize
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector2.Normalize()
  fullName: GTA.Math.Vector2.Normalize()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: GTA.Math.Vector2.Normalize*
- uid: GTA.Math.Vector2.DistanceTo(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.DistanceTo(GTA.Math.Vector2)
  id: DistanceTo(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: DistanceTo(Vector2)
  nameWithType: Vector2.DistanceTo(Vector2)
  fullName: GTA.Math.Vector2.DistanceTo(GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float DistanceTo(Vector2 position)
    parameters:
    - id: position
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Function DistanceTo(position As Vector2) As Single
  overload: GTA.Math.Vector2.DistanceTo*
- uid: GTA.Math.Vector2.DistanceToSquared(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.DistanceToSquared(GTA.Math.Vector2)
  id: DistanceToSquared(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: DistanceToSquared(Vector2)
  nameWithType: Vector2.DistanceToSquared(Vector2)
  fullName: GTA.Math.Vector2.DistanceToSquared(GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float DistanceToSquared(Vector2 position)
    parameters:
    - id: position
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Function DistanceToSquared(position As Vector2) As Single
  overload: GTA.Math.Vector2.DistanceToSquared*
- uid: GTA.Math.Vector2.Distance(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Distance(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Distance(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Distance(Vector2, Vector2)
  nameWithType: Vector2.Distance(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Distance(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float Distance(Vector2 position1, Vector2 position2)
    parameters:
    - id: position1
      type: GTA.Math.Vector2
    - id: position2
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Shared Function Distance(position1 As Vector2, position2 As Vector2) As Single
  overload: GTA.Math.Vector2.Distance*
- uid: GTA.Math.Vector2.DistanceSquared(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.DistanceSquared(GTA.Math.Vector2,GTA.Math.Vector2)
  id: DistanceSquared(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2, Vector2)
  nameWithType: Vector2.DistanceSquared(Vector2, Vector2)
  fullName: GTA.Math.Vector2.DistanceSquared(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float DistanceSquared(Vector2 position1, Vector2 position2)
    parameters:
    - id: position1
      type: GTA.Math.Vector2
    - id: position2
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Shared Function DistanceSquared(position1 As Vector2, position2 As Vector2) As Single
  overload: GTA.Math.Vector2.DistanceSquared*
- uid: GTA.Math.Vector2.Angle(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Angle(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Angle(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Angle(Vector2, Vector2)
  nameWithType: Vector2.Angle(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Angle(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float Angle(Vector2 from, Vector2 to)
    parameters:
    - id: from
      type: GTA.Math.Vector2
    - id: to
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Shared Function Angle(from As Vector2, [to] As Vector2) As Single
  overload: GTA.Math.Vector2.Angle*
- uid: GTA.Math.Vector2.SignedAngle(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.SignedAngle(GTA.Math.Vector2,GTA.Math.Vector2)
  id: SignedAngle(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: SignedAngle(Vector2, Vector2)
  nameWithType: Vector2.SignedAngle(Vector2, Vector2)
  fullName: GTA.Math.Vector2.SignedAngle(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float SignedAngle(Vector2 from, Vector2 to)
    parameters:
    - id: from
      type: GTA.Math.Vector2
    - id: to
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Shared Function SignedAngle(from As Vector2, [to] As Vector2) As Single
  overload: GTA.Math.Vector2.SignedAngle*
- uid: GTA.Math.Vector2.ToHeading
  commentId: M:GTA.Math.Vector2.ToHeading
  id: ToHeading
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToHeading()
  nameWithType: Vector2.ToHeading()
  fullName: GTA.Math.Vector2.ToHeading()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly float ToHeading()
    return:
      type: System.Single
    content.vb: Public Function ToHeading() As Single
  overload: GTA.Math.Vector2.ToHeading*
- uid: GTA.Math.Vector2.RandomXY
  commentId: M:GTA.Math.Vector2.RandomXY
  id: RandomXY
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: RandomXY()
  nameWithType: Vector2.RandomXY()
  fullName: GTA.Math.Vector2.RandomXY()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 RandomXY()
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function RandomXY() As Vector2
  overload: GTA.Math.Vector2.RandomXY*
- uid: GTA.Math.Vector2.Add(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Add(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Add(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Add(Vector2, Vector2)
  nameWithType: Vector2.Add(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Add(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Add(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Add(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.Add*
- uid: GTA.Math.Vector2.Subtract(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Subtract(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Subtract(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Subtract(Vector2, Vector2)
  nameWithType: Vector2.Subtract(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Subtract(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Subtract(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Subtract(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.Subtract*
- uid: GTA.Math.Vector2.Multiply(GTA.Math.Vector2,System.Single)
  commentId: M:GTA.Math.Vector2.Multiply(GTA.Math.Vector2,System.Single)
  id: Multiply(GTA.Math.Vector2,System.Single)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, float)
  nameWithType: Vector2.Multiply(Vector2, float)
  fullName: GTA.Math.Vector2.Multiply(GTA.Math.Vector2, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Multiply(Vector2 value, float scale)
    parameters:
    - id: value
      type: GTA.Math.Vector2
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Multiply(value As Vector2, scale As Single) As Vector2
  overload: GTA.Math.Vector2.Multiply*
  nameWithType.vb: Vector2.Multiply(Vector2, Single)
  fullName.vb: GTA.Math.Vector2.Multiply(GTA.Math.Vector2, Single)
  name.vb: Multiply(Vector2, Single)
- uid: GTA.Math.Vector2.Multiply(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Multiply(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Multiply(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Multiply(Vector2, Vector2)
  nameWithType: Vector2.Multiply(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Multiply(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Multiply(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Multiply(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.Multiply*
- uid: GTA.Math.Vector2.Divide(GTA.Math.Vector2,System.Single)
  commentId: M:GTA.Math.Vector2.Divide(GTA.Math.Vector2,System.Single)
  id: Divide(GTA.Math.Vector2,System.Single)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Divide(Vector2, float)
  nameWithType: Vector2.Divide(Vector2, float)
  fullName: GTA.Math.Vector2.Divide(GTA.Math.Vector2, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Divide(Vector2 value, float scale)
    parameters:
    - id: value
      type: GTA.Math.Vector2
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Divide(value As Vector2, scale As Single) As Vector2
  overload: GTA.Math.Vector2.Divide*
  nameWithType.vb: Vector2.Divide(Vector2, Single)
  fullName.vb: GTA.Math.Vector2.Divide(GTA.Math.Vector2, Single)
  name.vb: Divide(Vector2, Single)
- uid: GTA.Math.Vector2.Negate(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Negate(GTA.Math.Vector2)
  id: Negate(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Negate(Vector2)
  nameWithType: Vector2.Negate(Vector2)
  fullName: GTA.Math.Vector2.Negate(GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Negate(Vector2 value)
    parameters:
    - id: value
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Negate(value As Vector2) As Vector2
  overload: GTA.Math.Vector2.Negate*
- uid: GTA.Math.Vector2.Clamp(GTA.Math.Vector2,GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Clamp(GTA.Math.Vector2,GTA.Math.Vector2,GTA.Math.Vector2)
  id: Clamp(GTA.Math.Vector2,GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Clamp(Vector2, Vector2, Vector2)
  nameWithType: Vector2.Clamp(Vector2, Vector2, Vector2)
  fullName: GTA.Math.Vector2.Clamp(GTA.Math.Vector2, GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Clamp(Vector2 value, Vector2 min, Vector2 max)
    parameters:
    - id: value
      type: GTA.Math.Vector2
    - id: min
      type: GTA.Math.Vector2
    - id: max
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Clamp(value As Vector2, min As Vector2, max As Vector2) As Vector2
  overload: GTA.Math.Vector2.Clamp*
- uid: GTA.Math.Vector2.Lerp(GTA.Math.Vector2,GTA.Math.Vector2,System.Single)
  commentId: M:GTA.Math.Vector2.Lerp(GTA.Math.Vector2,GTA.Math.Vector2,System.Single)
  id: Lerp(GTA.Math.Vector2,GTA.Math.Vector2,System.Single)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Lerp(Vector2, Vector2, float)
  nameWithType: Vector2.Lerp(Vector2, Vector2, float)
  fullName: GTA.Math.Vector2.Lerp(GTA.Math.Vector2, GTA.Math.Vector2, float)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Lerp(Vector2 start, Vector2 end, float amount)
    parameters:
    - id: start
      type: GTA.Math.Vector2
    - id: end
      type: GTA.Math.Vector2
    - id: amount
      type: System.Single
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Lerp(start As Vector2, [end] As Vector2, amount As Single) As Vector2
  overload: GTA.Math.Vector2.Lerp*
  nameWithType.vb: Vector2.Lerp(Vector2, Vector2, Single)
  fullName.vb: GTA.Math.Vector2.Lerp(GTA.Math.Vector2, GTA.Math.Vector2, Single)
  name.vb: Lerp(Vector2, Vector2, Single)
- uid: GTA.Math.Vector2.Normalize(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Normalize(GTA.Math.Vector2)
  id: Normalize(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalize(Vector2)
  nameWithType: Vector2.Normalize(Vector2)
  fullName: GTA.Math.Vector2.Normalize(GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Normalize(Vector2 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Normalize(vector As Vector2) As Vector2
  overload: GTA.Math.Vector2.Normalize*
- uid: GTA.Math.Vector2.Dot(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Dot(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Dot(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Dot(Vector2, Vector2)
  nameWithType: Vector2.Dot(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Dot(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static float Dot(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(left As Vector2, right As Vector2) As Single
  overload: GTA.Math.Vector2.Dot*
- uid: GTA.Math.Vector2.Reflect(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Reflect(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Reflect(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Reflect(Vector2, Vector2)
  nameWithType: Vector2.Reflect(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Reflect(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Reflect(Vector2 vector, Vector2 normal)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    - id: normal
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Reflect(vector As Vector2, normal As Vector2) As Vector2
  overload: GTA.Math.Vector2.Reflect*
- uid: GTA.Math.Vector2.Minimize(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Minimize(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Minimize(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Minimize(Vector2, Vector2)
  nameWithType: Vector2.Minimize(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Minimize(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Minimize(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Minimize(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.Minimize*
- uid: GTA.Math.Vector2.Maximize(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Maximize(GTA.Math.Vector2,GTA.Math.Vector2)
  id: Maximize(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Maximize(Vector2, Vector2)
  nameWithType: Vector2.Maximize(Vector2, Vector2)
  fullName: GTA.Math.Vector2.Maximize(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Maximize(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Function Maximize(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.Maximize*
- uid: GTA.Math.Vector2.op_Addition(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_Addition(GTA.Math.Vector2,GTA.Math.Vector2)
  id: op_Addition(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator +(Vector2, Vector2)
  nameWithType: Vector2.operator +(Vector2, Vector2)
  fullName: GTA.Math.Vector2.operator +(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator +(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator +(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.op_Addition*
  nameWithType.vb: Vector2.+(Vector2, Vector2)
  fullName.vb: GTA.Math.Vector2.+(GTA.Math.Vector2, GTA.Math.Vector2)
  name.vb: +(Vector2, Vector2)
- uid: GTA.Math.Vector2.op_Subtraction(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_Subtraction(GTA.Math.Vector2,GTA.Math.Vector2)
  id: op_Subtraction(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator -(Vector2, Vector2)
  nameWithType: Vector2.operator -(Vector2, Vector2)
  fullName: GTA.Math.Vector2.operator -(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator -(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator -(left As Vector2, right As Vector2) As Vector2
  overload: GTA.Math.Vector2.op_Subtraction*
  nameWithType.vb: Vector2.-(Vector2, Vector2)
  fullName.vb: GTA.Math.Vector2.-(GTA.Math.Vector2, GTA.Math.Vector2)
  name.vb: -(Vector2, Vector2)
- uid: GTA.Math.Vector2.op_UnaryNegation(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_UnaryNegation(GTA.Math.Vector2)
  id: op_UnaryNegation(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator -(Vector2)
  nameWithType: Vector2.operator -(Vector2)
  fullName: GTA.Math.Vector2.operator -(GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator -(Vector2 value)
    parameters:
    - id: value
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator -(value As Vector2) As Vector2
  overload: GTA.Math.Vector2.op_UnaryNegation*
  nameWithType.vb: Vector2.-(Vector2)
  fullName.vb: GTA.Math.Vector2.-(GTA.Math.Vector2)
  name.vb: -(Vector2)
- uid: GTA.Math.Vector2.op_Multiply(GTA.Math.Vector2,System.Single)
  commentId: M:GTA.Math.Vector2.op_Multiply(GTA.Math.Vector2,System.Single)
  id: op_Multiply(GTA.Math.Vector2,System.Single)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator *(Vector2, float)
  nameWithType: Vector2.operator *(Vector2, float)
  fullName: GTA.Math.Vector2.operator *(GTA.Math.Vector2, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator *(Vector2 vector, float scale)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator *(vector As Vector2, scale As Single) As Vector2
  overload: GTA.Math.Vector2.op_Multiply*
  nameWithType.vb: Vector2.*(Vector2, Single)
  fullName.vb: GTA.Math.Vector2.*(GTA.Math.Vector2, Single)
  name.vb: '*(Vector2, Single)'
- uid: GTA.Math.Vector2.op_Multiply(System.Single,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_Multiply(System.Single,GTA.Math.Vector2)
  id: op_Multiply(System.Single,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator *(float, Vector2)
  nameWithType: Vector2.operator *(float, Vector2)
  fullName: GTA.Math.Vector2.operator *(float, GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator *(float scale, Vector2 vector)
    parameters:
    - id: scale
      type: System.Single
    - id: vector
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator *(scale As Single, vector As Vector2) As Vector2
  overload: GTA.Math.Vector2.op_Multiply*
  nameWithType.vb: Vector2.*(Single, Vector2)
  fullName.vb: GTA.Math.Vector2.*(Single, GTA.Math.Vector2)
  name.vb: '*(Single, Vector2)'
- uid: GTA.Math.Vector2.op_Division(GTA.Math.Vector2,System.Single)
  commentId: M:GTA.Math.Vector2.op_Division(GTA.Math.Vector2,System.Single)
  id: op_Division(GTA.Math.Vector2,System.Single)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator /(Vector2, float)
  nameWithType: Vector2.operator /(Vector2, float)
  fullName: GTA.Math.Vector2.operator /(GTA.Math.Vector2, float)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 operator /(Vector2 vector, float scale)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    - id: scale
      type: System.Single
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared Operator /(vector As Vector2, scale As Single) As Vector2
  overload: GTA.Math.Vector2.op_Division*
  nameWithType.vb: Vector2./(Vector2, Single)
  fullName.vb: GTA.Math.Vector2./(GTA.Math.Vector2, Single)
  name.vb: /(Vector2, Single)
- uid: GTA.Math.Vector2.op_Equality(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_Equality(GTA.Math.Vector2,GTA.Math.Vector2)
  id: op_Equality(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator ==(Vector2, Vector2)
  nameWithType: Vector2.operator ==(Vector2, Vector2)
  fullName: GTA.Math.Vector2.operator ==(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator ==(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Vector2, right As Vector2) As Boolean
  overload: GTA.Math.Vector2.op_Equality*
  nameWithType.vb: Vector2.=(Vector2, Vector2)
  fullName.vb: GTA.Math.Vector2.=(GTA.Math.Vector2, GTA.Math.Vector2)
  name.vb: =(Vector2, Vector2)
- uid: GTA.Math.Vector2.op_Inequality(GTA.Math.Vector2,GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.op_Inequality(GTA.Math.Vector2,GTA.Math.Vector2)
  id: op_Inequality(GTA.Math.Vector2,GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: operator !=(Vector2, Vector2)
  nameWithType: Vector2.operator !=(Vector2, Vector2)
  fullName: GTA.Math.Vector2.operator !=(GTA.Math.Vector2, GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static bool operator !=(Vector2 left, Vector2 right)
    parameters:
    - id: left
      type: GTA.Math.Vector2
    - id: right
      type: GTA.Math.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Vector2, right As Vector2) As Boolean
  overload: GTA.Math.Vector2.op_Inequality*
  nameWithType.vb: Vector2.<>(Vector2, Vector2)
  fullName.vb: GTA.Math.Vector2.<>(GTA.Math.Vector2, GTA.Math.Vector2)
  name.vb: <>(Vector2, Vector2)
- uid: GTA.Math.Vector2.op_Implicit(GTA.Math.Vector2)~GTA.Math.Vector3
  commentId: M:GTA.Math.Vector2.op_Implicit(GTA.Math.Vector2)~GTA.Math.Vector3
  id: op_Implicit(GTA.Math.Vector2)~GTA.Math.Vector3
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector2)
  nameWithType: Vector2.implicit operator Vector3(Vector2)
  fullName: GTA.Math.Vector2.implicit operator GTA.Math.Vector3(GTA.Math.Vector2)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static implicit operator Vector3(Vector2 vector)
    parameters:
    - id: vector
      type: GTA.Math.Vector2
    return:
      type: GTA.Math.Vector3
    content.vb: Public Shared Widening Operator CType(vector As Vector2) As Vector3
  overload: GTA.Math.Vector2.op_Implicit*
  nameWithType.vb: Vector2.CType(Vector2)
  fullName.vb: GTA.Math.Vector2.CType(GTA.Math.Vector2)
  name.vb: CType(Vector2)
- uid: GTA.Math.Vector2.ToString
  commentId: M:GTA.Math.Vector2.ToString
  id: ToString
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2.ToString()
  fullName: GTA.Math.Vector2.ToString()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: GTA.Math.Vector2.ToString*
- uid: GTA.Math.Vector2.ToString(System.String)
  commentId: M:GTA.Math.Vector2.ToString(System.String)
  id: ToString(System.String)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector2.ToString(string)
  fullName: GTA.Math.Vector2.ToString(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: GTA.Math.Vector2.ToString*
  nameWithType.vb: Vector2.ToString(String)
  fullName.vb: GTA.Math.Vector2.ToString(String)
  name.vb: ToString(String)
- uid: GTA.Math.Vector2.ToString(System.String,System.IFormatProvider)
  commentId: M:GTA.Math.Vector2.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector2.ToString(string, IFormatProvider)
  fullName: GTA.Math.Vector2.ToString(string, System.IFormatProvider)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider provider)
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
  overload: GTA.Math.Vector2.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector2.ToString(String, IFormatProvider)
  fullName.vb: GTA.Math.Vector2.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: GTA.Math.Vector2.GetHashCode
  commentId: M:GTA.Math.Vector2.GetHashCode
  id: GetHashCode
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2.GetHashCode()
  fullName: GTA.Math.Vector2.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: GTA.Math.Vector2.GetHashCode*
- uid: GTA.Math.Vector2.Equals(System.Object)
  commentId: M:GTA.Math.Vector2.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector2.Equals(object)
  fullName: GTA.Math.Vector2.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: GTA.Math.Vector2.Equals*
  nameWithType.vb: Vector2.Equals(Object)
  fullName.vb: GTA.Math.Vector2.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.Math.Vector2.Equals(GTA.Math.Vector2)
  commentId: M:GTA.Math.Vector2.Equals(GTA.Math.Vector2)
  id: Equals(GTA.Math.Vector2)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Equals(Vector2)
  nameWithType: Vector2.Equals(Vector2)
  fullName: GTA.Math.Vector2.Equals(GTA.Math.Vector2)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  example: []
  syntax:
    content: public readonly bool Equals(Vector2 other)
    parameters:
    - id: other
      type: GTA.Math.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector2) As Boolean
  overload: GTA.Math.Vector2.Equals*
  implements:
  - System.IEquatable{GTA.Math.Vector2}.Equals(GTA.Math.Vector2)
- uid: GTA.Math.Vector2.Normalized
  commentId: P:GTA.Math.Vector2.Normalized
  id: Normalized
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector2.Normalized
  fullName: GTA.Math.Vector2.Normalized
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public readonly Vector2 Normalized { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public ReadOnly Property Normalized As Vector2
  overload: GTA.Math.Vector2.Normalized*
- uid: GTA.Math.Vector2.Zero
  commentId: P:GTA.Math.Vector2.Zero
  id: Zero
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector2.Zero
  fullName: GTA.Math.Vector2.Zero
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Zero { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property Zero As Vector2
  overload: GTA.Math.Vector2.Zero*
- uid: GTA.Math.Vector2.One
  commentId: P:GTA.Math.Vector2.One
  id: One
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector2.One
  fullName: GTA.Math.Vector2.One
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 One { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property One As Vector2
  overload: GTA.Math.Vector2.One*
- uid: GTA.Math.Vector2.UnitX
  commentId: P:GTA.Math.Vector2.UnitX
  id: UnitX
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: GTA.Math.Vector2.UnitX
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 UnitX { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property UnitX As Vector2
  overload: GTA.Math.Vector2.UnitX*
- uid: GTA.Math.Vector2.UnitY
  commentId: P:GTA.Math.Vector2.UnitY
  id: UnitY
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: GTA.Math.Vector2.UnitY
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 UnitY { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property UnitY As Vector2
  overload: GTA.Math.Vector2.UnitY*
- uid: GTA.Math.Vector2.Up
  commentId: P:GTA.Math.Vector2.Up
  id: Up
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Vector2.Up
  fullName: GTA.Math.Vector2.Up
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Up { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property Up As Vector2
  overload: GTA.Math.Vector2.Up*
- uid: GTA.Math.Vector2.Down
  commentId: P:GTA.Math.Vector2.Down
  id: Down
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: Vector2.Down
  fullName: GTA.Math.Vector2.Down
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Down { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property Down As Vector2
  overload: GTA.Math.Vector2.Down*
- uid: GTA.Math.Vector2.Right
  commentId: P:GTA.Math.Vector2.Right
  id: Right
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Vector2.Right
  fullName: GTA.Math.Vector2.Right
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Right { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property Right As Vector2
  overload: GTA.Math.Vector2.Right*
- uid: GTA.Math.Vector2.Left
  commentId: P:GTA.Math.Vector2.Left
  id: Left
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Vector2.Left
  fullName: GTA.Math.Vector2.Left
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public static Vector2 Left { get; }
    parameters: []
    return:
      type: GTA.Math.Vector2
    content.vb: Public Shared ReadOnly Property Left As Vector2
  overload: GTA.Math.Vector2.Left*
- uid: GTA.Math.Vector2.Item(System.Int32)
  commentId: P:GTA.Math.Vector2.Item(System.Int32)
  id: Item(System.Int32)
  parent: GTA.Math.Vector2
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector2.this[int]
  fullName: GTA.Math.Vector2.this[int]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA.Math
  syntax:
    content: public float this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Default Property this[](index As Integer) As Single
  overload: GTA.Math.Vector2.Item*
  nameWithType.vb: Vector2.this[](Integer)
  fullName.vb: GTA.Math.Vector2.this[](Integer)
  name.vb: this[](Integer)
references:
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: System.IEquatable{GTA.Math.Vector2}
  commentId: T:System.IEquatable{GTA.Math.Vector2}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector2>
  nameWithType: IEquatable<Vector2>
  fullName: System.IEquatable<GTA.Math.Vector2>
  nameWithType.vb: IEquatable(Of Vector2)
  fullName.vb: System.IEquatable(Of GTA.Math.Vector2)
  name.vb: IEquatable(Of Vector2)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: GTA.Math.Vector2
    name: Vector2
    isExternal: true
    href: GTA.Math.Vector2.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.Math.Vector2
    name: Vector2
    isExternal: true
    href: GTA.Math.Vector2.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: GTA.Math.Vector2.#ctor*
  commentId: Overload:GTA.Math.Vector2.#ctor
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2__ctor_System_Single_System_Single_
  name: Vector2
  nameWithType: Vector2.Vector2
  fullName: GTA.Math.Vector2.Vector2
  nameWithType.vb: Vector2.New
  fullName.vb: GTA.Math.Vector2.New
  name.vb: New
- uid: GTA.Math.Vector2.Length*
  commentId: Overload:GTA.Math.Vector2.Length
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Length
  name: Length
  nameWithType: Vector2.Length
  fullName: GTA.Math.Vector2.Length
- uid: GTA.Math.Vector2.LengthSquared*
  commentId: Overload:GTA.Math.Vector2.LengthSquared
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_LengthSquared
  name: LengthSquared
  nameWithType: Vector2.LengthSquared
  fullName: GTA.Math.Vector2.LengthSquared
- uid: GTA.Math.Vector2.Normalize*
  commentId: Overload:GTA.Math.Vector2.Normalize
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Normalize
  name: Normalize
  nameWithType: Vector2.Normalize
  fullName: GTA.Math.Vector2.Normalize
- uid: GTA.Math.Vector2.DistanceTo*
  commentId: Overload:GTA.Math.Vector2.DistanceTo
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_DistanceTo_GTA_Math_Vector2_
  name: DistanceTo
  nameWithType: Vector2.DistanceTo
  fullName: GTA.Math.Vector2.DistanceTo
- uid: GTA.Math.Vector2
  commentId: T:GTA.Math.Vector2
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: GTA.Math.Vector2
- uid: GTA.Math.Vector2.DistanceToSquared*
  commentId: Overload:GTA.Math.Vector2.DistanceToSquared
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_DistanceToSquared_GTA_Math_Vector2_
  name: DistanceToSquared
  nameWithType: Vector2.DistanceToSquared
  fullName: GTA.Math.Vector2.DistanceToSquared
- uid: GTA.Math.Vector2.Distance*
  commentId: Overload:GTA.Math.Vector2.Distance
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Distance_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Distance
  nameWithType: Vector2.Distance
  fullName: GTA.Math.Vector2.Distance
- uid: GTA.Math.Vector2.DistanceSquared*
  commentId: Overload:GTA.Math.Vector2.DistanceSquared
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_DistanceSquared_GTA_Math_Vector2_GTA_Math_Vector2_
  name: DistanceSquared
  nameWithType: Vector2.DistanceSquared
  fullName: GTA.Math.Vector2.DistanceSquared
- uid: GTA.Math.Vector2.Angle*
  commentId: Overload:GTA.Math.Vector2.Angle
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Angle_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Angle
  nameWithType: Vector2.Angle
  fullName: GTA.Math.Vector2.Angle
- uid: GTA.Math.Vector2.SignedAngle*
  commentId: Overload:GTA.Math.Vector2.SignedAngle
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_SignedAngle_GTA_Math_Vector2_GTA_Math_Vector2_
  name: SignedAngle
  nameWithType: Vector2.SignedAngle
  fullName: GTA.Math.Vector2.SignedAngle
- uid: GTA.Math.Vector2.ToHeading*
  commentId: Overload:GTA.Math.Vector2.ToHeading
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_ToHeading
  name: ToHeading
  nameWithType: Vector2.ToHeading
  fullName: GTA.Math.Vector2.ToHeading
- uid: GTA.Math.Vector2.RandomXY*
  commentId: Overload:GTA.Math.Vector2.RandomXY
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_RandomXY
  name: RandomXY
  nameWithType: Vector2.RandomXY
  fullName: GTA.Math.Vector2.RandomXY
- uid: GTA.Math.Vector2.Add*
  commentId: Overload:GTA.Math.Vector2.Add
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Add_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Add
  nameWithType: Vector2.Add
  fullName: GTA.Math.Vector2.Add
- uid: GTA.Math.Vector2.Subtract*
  commentId: Overload:GTA.Math.Vector2.Subtract
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Subtract_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Subtract
  nameWithType: Vector2.Subtract
  fullName: GTA.Math.Vector2.Subtract
- uid: GTA.Math.Vector2.Multiply*
  commentId: Overload:GTA.Math.Vector2.Multiply
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Multiply_GTA_Math_Vector2_System_Single_
  name: Multiply
  nameWithType: Vector2.Multiply
  fullName: GTA.Math.Vector2.Multiply
- uid: GTA.Math.Vector2.Divide*
  commentId: Overload:GTA.Math.Vector2.Divide
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Divide_GTA_Math_Vector2_System_Single_
  name: Divide
  nameWithType: Vector2.Divide
  fullName: GTA.Math.Vector2.Divide
- uid: GTA.Math.Vector2.Negate*
  commentId: Overload:GTA.Math.Vector2.Negate
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Negate_GTA_Math_Vector2_
  name: Negate
  nameWithType: Vector2.Negate
  fullName: GTA.Math.Vector2.Negate
- uid: GTA.Math.Vector2.Clamp*
  commentId: Overload:GTA.Math.Vector2.Clamp
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Clamp_GTA_Math_Vector2_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Clamp
  nameWithType: Vector2.Clamp
  fullName: GTA.Math.Vector2.Clamp
- uid: GTA.Math.Vector2.Lerp*
  commentId: Overload:GTA.Math.Vector2.Lerp
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Lerp_GTA_Math_Vector2_GTA_Math_Vector2_System_Single_
  name: Lerp
  nameWithType: Vector2.Lerp
  fullName: GTA.Math.Vector2.Lerp
- uid: GTA.Math.Vector2.Dot*
  commentId: Overload:GTA.Math.Vector2.Dot
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Dot_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Dot
  nameWithType: Vector2.Dot
  fullName: GTA.Math.Vector2.Dot
- uid: GTA.Math.Vector2.Reflect*
  commentId: Overload:GTA.Math.Vector2.Reflect
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Reflect_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Reflect
  nameWithType: Vector2.Reflect
  fullName: GTA.Math.Vector2.Reflect
- uid: GTA.Math.Vector2.Minimize*
  commentId: Overload:GTA.Math.Vector2.Minimize
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Minimize_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Minimize
  nameWithType: Vector2.Minimize
  fullName: GTA.Math.Vector2.Minimize
- uid: GTA.Math.Vector2.Maximize*
  commentId: Overload:GTA.Math.Vector2.Maximize
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Maximize_GTA_Math_Vector2_GTA_Math_Vector2_
  name: Maximize
  nameWithType: Vector2.Maximize
  fullName: GTA.Math.Vector2.Maximize
- uid: GTA.Math.Vector2.op_Addition*
  commentId: Overload:GTA.Math.Vector2.op_Addition
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Addition_GTA_Math_Vector2_GTA_Math_Vector2_
  name: operator +
  nameWithType: Vector2.operator +
  fullName: GTA.Math.Vector2.operator +
  nameWithType.vb: Vector2.+
  fullName.vb: GTA.Math.Vector2.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Addition*
    name: +
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Addition_GTA_Math_Vector2_GTA_Math_Vector2_
- uid: GTA.Math.Vector2.op_Subtraction*
  commentId: Overload:GTA.Math.Vector2.op_Subtraction
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Subtraction_GTA_Math_Vector2_GTA_Math_Vector2_
  name: operator -
  nameWithType: Vector2.operator -
  fullName: GTA.Math.Vector2.operator -
  nameWithType.vb: Vector2.-
  fullName.vb: GTA.Math.Vector2.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Subtraction*
    name: '-'
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Subtraction_GTA_Math_Vector2_GTA_Math_Vector2_
- uid: GTA.Math.Vector2.op_UnaryNegation*
  commentId: Overload:GTA.Math.Vector2.op_UnaryNegation
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_UnaryNegation_GTA_Math_Vector2_
  name: operator -
  nameWithType: Vector2.operator -
  fullName: GTA.Math.Vector2.operator -
  nameWithType.vb: Vector2.-
  fullName.vb: GTA.Math.Vector2.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_UnaryNegation*
    name: '-'
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_UnaryNegation_GTA_Math_Vector2_
- uid: GTA.Math.Vector2.op_Multiply*
  commentId: Overload:GTA.Math.Vector2.op_Multiply
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Multiply_GTA_Math_Vector2_System_Single_
  name: operator *
  nameWithType: Vector2.operator *
  fullName: GTA.Math.Vector2.operator *
  nameWithType.vb: Vector2.*
  fullName.vb: GTA.Math.Vector2.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Multiply*
    name: '*'
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Multiply_GTA_Math_Vector2_System_Single_
- uid: GTA.Math.Vector2.op_Division*
  commentId: Overload:GTA.Math.Vector2.op_Division
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Division_GTA_Math_Vector2_System_Single_
  name: operator /
  nameWithType: Vector2.operator /
  fullName: GTA.Math.Vector2.operator /
  nameWithType.vb: Vector2./
  fullName.vb: GTA.Math.Vector2./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Division*
    name: /
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Division_GTA_Math_Vector2_System_Single_
- uid: GTA.Math.Vector2.op_Equality*
  commentId: Overload:GTA.Math.Vector2.op_Equality
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Equality_GTA_Math_Vector2_GTA_Math_Vector2_
  name: operator ==
  nameWithType: Vector2.operator ==
  fullName: GTA.Math.Vector2.operator ==
  nameWithType.vb: Vector2.=
  fullName.vb: GTA.Math.Vector2.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Equality*
    name: ==
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Equality_GTA_Math_Vector2_GTA_Math_Vector2_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.Math.Vector2.op_Inequality*
  commentId: Overload:GTA.Math.Vector2.op_Inequality
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Inequality_GTA_Math_Vector2_GTA_Math_Vector2_
  name: operator !=
  nameWithType: Vector2.operator !=
  fullName: GTA.Math.Vector2.operator !=
  nameWithType.vb: Vector2.<>
  fullName.vb: GTA.Math.Vector2.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.Math.Vector2.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.Math.Vector2.html#GTA_Math_Vector2_op_Inequality_GTA_Math_Vector2_GTA_Math_Vector2_
- uid: GTA.Math.Vector2.op_Implicit*
  commentId: Overload:GTA.Math.Vector2.op_Implicit
  name: implicit operator
  nameWithType: Vector2.implicit operator
  fullName: GTA.Math.Vector2.implicit operator
  nameWithType.vb: Vector2.CType
  fullName.vb: GTA.Math.Vector2.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: GTA.Math.Vector2.ToString*
  commentId: Overload:GTA.Math.Vector2.ToString
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_ToString
  name: ToString
  nameWithType: Vector2.ToString
  fullName: GTA.Math.Vector2.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: GTA.Math.Vector2.GetHashCode*
  commentId: Overload:GTA.Math.Vector2.GetHashCode
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_GetHashCode
  name: GetHashCode
  nameWithType: Vector2.GetHashCode
  fullName: GTA.Math.Vector2.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.Math.Vector2.Equals*
  commentId: Overload:GTA.Math.Vector2.Equals
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Equals_System_Object_
  name: Equals
  nameWithType: Vector2.Equals
  fullName: GTA.Math.Vector2.Equals
- uid: System.IEquatable{GTA.Math.Vector2}.Equals(GTA.Math.Vector2)
  commentId: M:System.IEquatable{GTA.Math.Vector2}.Equals(GTA.Math.Vector2)
  parent: System.IEquatable{GTA.Math.Vector2}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector2)
  nameWithType: IEquatable<Vector2>.Equals(Vector2)
  fullName: System.IEquatable<GTA.Math.Vector2>.Equals(GTA.Math.Vector2)
  nameWithType.vb: IEquatable(Of Vector2).Equals(Vector2)
  fullName.vb: System.IEquatable(Of GTA.Math.Vector2).Equals(GTA.Math.Vector2)
  spec.csharp:
  - uid: System.IEquatable{GTA.Math.Vector2}.Equals(GTA.Math.Vector2)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Vector2
    name: Vector2
    isExternal: true
    href: GTA.Math.Vector2.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{GTA.Math.Vector2}.Equals(GTA.Math.Vector2)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: GTA.Math.Vector2
    name: Vector2
    isExternal: true
    href: GTA.Math.Vector2.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: GTA.Math.Vector2.Normalized*
  commentId: Overload:GTA.Math.Vector2.Normalized
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Normalized
  name: Normalized
  nameWithType: Vector2.Normalized
  fullName: GTA.Math.Vector2.Normalized
- uid: GTA.Math.Vector2.Zero*
  commentId: Overload:GTA.Math.Vector2.Zero
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Zero
  name: Zero
  nameWithType: Vector2.Zero
  fullName: GTA.Math.Vector2.Zero
- uid: GTA.Math.Vector2.One*
  commentId: Overload:GTA.Math.Vector2.One
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_One
  name: One
  nameWithType: Vector2.One
  fullName: GTA.Math.Vector2.One
- uid: GTA.Math.Vector2.UnitX*
  commentId: Overload:GTA.Math.Vector2.UnitX
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_UnitX
  name: UnitX
  nameWithType: Vector2.UnitX
  fullName: GTA.Math.Vector2.UnitX
- uid: GTA.Math.Vector2.UnitY*
  commentId: Overload:GTA.Math.Vector2.UnitY
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_UnitY
  name: UnitY
  nameWithType: Vector2.UnitY
  fullName: GTA.Math.Vector2.UnitY
- uid: GTA.Math.Vector2.Up*
  commentId: Overload:GTA.Math.Vector2.Up
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Up
  name: Up
  nameWithType: Vector2.Up
  fullName: GTA.Math.Vector2.Up
- uid: GTA.Math.Vector2.Down*
  commentId: Overload:GTA.Math.Vector2.Down
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Down
  name: Down
  nameWithType: Vector2.Down
  fullName: GTA.Math.Vector2.Down
- uid: GTA.Math.Vector2.Right*
  commentId: Overload:GTA.Math.Vector2.Right
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Right
  name: Right
  nameWithType: Vector2.Right
  fullName: GTA.Math.Vector2.Right
- uid: GTA.Math.Vector2.Left*
  commentId: Overload:GTA.Math.Vector2.Left
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Left
  name: Left
  nameWithType: Vector2.Left
  fullName: GTA.Math.Vector2.Left
- uid: GTA.Math.Vector2.Item*
  commentId: Overload:GTA.Math.Vector2.Item
  isExternal: true
  href: GTA.Math.Vector2.html#GTA_Math_Vector2_Item_System_Int32_
  name: this
  nameWithType: Vector2.this
  fullName: GTA.Math.Vector2.this
  nameWithType.vb: Vector2.this[]
  fullName.vb: GTA.Math.Vector2.this[]
  name.vb: this[]
