### YamlMime:ManagedReference
items:
- uid: GTA.WeaponCollection
  commentId: T:GTA.WeaponCollection
  id: WeaponCollection
  parent: GTA
  children:
  - GTA.WeaponCollection.BestWeapon
  - GTA.WeaponCollection.Count
  - GTA.WeaponCollection.Current
  - GTA.WeaponCollection.CurrentWeaponObject
  - GTA.WeaponCollection.Drop
  - GTA.WeaponCollection.GetAllWeaponHashes
  - GTA.WeaponCollection.GetEnumerator
  - GTA.WeaponCollection.Give(GTA.WeaponHash,System.Int32,System.Boolean,System.Boolean)
  - GTA.WeaponCollection.Give(System.String,System.Int32,System.Boolean,System.Boolean)
  - GTA.WeaponCollection.HasWeapon(GTA.WeaponHash)
  - GTA.WeaponCollection.HasWeapon(System.String)
  - GTA.WeaponCollection.IsWeaponValid(GTA.WeaponHash)
  - GTA.WeaponCollection.IsWeaponValid(System.String)
  - GTA.WeaponCollection.IsWeaponValid(System.String,System.Boolean)
  - GTA.WeaponCollection.Item(GTA.WeaponHash)
  - GTA.WeaponCollection.Item(System.String)
  - GTA.WeaponCollection.Remove(GTA.Weapon)
  - GTA.WeaponCollection.Remove(GTA.WeaponHash)
  - GTA.WeaponCollection.Remove(System.String)
  - GTA.WeaponCollection.RemoveAll
  - GTA.WeaponCollection.Select(GTA.Weapon)
  - GTA.WeaponCollection.Select(GTA.WeaponHash)
  - GTA.WeaponCollection.Select(GTA.WeaponHash,System.Boolean)
  - GTA.WeaponCollection.TryGetWeaponBySlotHash(System.Int32,GTA.Weapon@)
  - GTA.WeaponCollection.TryGetWeaponHashBySlotHash(System.Int32,GTA.WeaponHash@)
  langs:
  - csharp
  - vb
  name: WeaponCollection
  nameWithType: WeaponCollection
  fullName: GTA.WeaponCollection
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class WeaponCollection : IEnumerable<Weapon>, IEnumerable'
    content.vb: Public NotInheritable Class WeaponCollection Implements IEnumerable(Of Weapon), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{GTA.Weapon}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
- uid: GTA.WeaponCollection.GetEnumerator
  commentId: M:GTA.WeaponCollection.GetEnumerator
  id: GetEnumerator
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: WeaponCollection.GetEnumerator()
  fullName: GTA.WeaponCollection.GetEnumerator()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public WeaponCollection.Enumerator GetEnumerator()
    return:
      type: GTA.WeaponCollection.Enumerator
    content.vb: Public Function GetEnumerator() As WeaponCollection.Enumerator
  overload: GTA.WeaponCollection.GetEnumerator*
- uid: GTA.WeaponCollection.GetAllWeaponHashes
  commentId: M:GTA.WeaponCollection.GetAllWeaponHashes
  id: GetAllWeaponHashes
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: GetAllWeaponHashes()
  nameWithType: WeaponCollection.GetAllWeaponHashes()
  fullName: GTA.WeaponCollection.GetAllWeaponHashes()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public WeaponHash[] GetAllWeaponHashes()
    return:
      type: GTA.WeaponHash[]
    content.vb: Public Function GetAllWeaponHashes() As WeaponHash()
  overload: GTA.WeaponCollection.GetAllWeaponHashes*
- uid: GTA.WeaponCollection.TryGetWeaponHashBySlotHash(System.Int32,GTA.WeaponHash@)
  commentId: M:GTA.WeaponCollection.TryGetWeaponHashBySlotHash(System.Int32,GTA.WeaponHash@)
  id: TryGetWeaponHashBySlotHash(System.Int32,GTA.WeaponHash@)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: TryGetWeaponHashBySlotHash(int, out WeaponHash)
  nameWithType: WeaponCollection.TryGetWeaponHashBySlotHash(int, out WeaponHash)
  fullName: GTA.WeaponCollection.TryGetWeaponHashBySlotHash(int, out GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool TryGetWeaponHashBySlotHash(int slotHash, out WeaponHash weaponHash)
    parameters:
    - id: slotHash
      type: System.Int32
    - id: weaponHash
      type: GTA.WeaponHash
    return:
      type: System.Boolean
    content.vb: Public Function TryGetWeaponHashBySlotHash(slotHash As Integer, weaponHash As WeaponHash) As Boolean
  overload: GTA.WeaponCollection.TryGetWeaponHashBySlotHash*
  nameWithType.vb: WeaponCollection.TryGetWeaponHashBySlotHash(Integer, WeaponHash)
  fullName.vb: GTA.WeaponCollection.TryGetWeaponHashBySlotHash(Integer, GTA.WeaponHash)
  name.vb: TryGetWeaponHashBySlotHash(Integer, WeaponHash)
- uid: GTA.WeaponCollection.TryGetWeaponBySlotHash(System.Int32,GTA.Weapon@)
  commentId: M:GTA.WeaponCollection.TryGetWeaponBySlotHash(System.Int32,GTA.Weapon@)
  id: TryGetWeaponBySlotHash(System.Int32,GTA.Weapon@)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: TryGetWeaponBySlotHash(int, out Weapon)
  nameWithType: WeaponCollection.TryGetWeaponBySlotHash(int, out Weapon)
  fullName: GTA.WeaponCollection.TryGetWeaponBySlotHash(int, out GTA.Weapon)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool TryGetWeaponBySlotHash(int slotHash, out Weapon weapon)
    parameters:
    - id: slotHash
      type: System.Int32
    - id: weapon
      type: GTA.Weapon
    return:
      type: System.Boolean
    content.vb: Public Function TryGetWeaponBySlotHash(slotHash As Integer, weapon As Weapon) As Boolean
  overload: GTA.WeaponCollection.TryGetWeaponBySlotHash*
  nameWithType.vb: WeaponCollection.TryGetWeaponBySlotHash(Integer, Weapon)
  fullName.vb: GTA.WeaponCollection.TryGetWeaponBySlotHash(Integer, GTA.Weapon)
  name.vb: TryGetWeaponBySlotHash(Integer, Weapon)
- uid: GTA.WeaponCollection.HasWeapon(GTA.WeaponHash)
  commentId: M:GTA.WeaponCollection.HasWeapon(GTA.WeaponHash)
  id: HasWeapon(GTA.WeaponHash)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: HasWeapon(WeaponHash)
  nameWithType: WeaponCollection.HasWeapon(WeaponHash)
  fullName: GTA.WeaponCollection.HasWeapon(GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool HasWeapon(WeaponHash weaponHash)
    parameters:
    - id: weaponHash
      type: GTA.WeaponHash
    return:
      type: System.Boolean
    content.vb: Public Function HasWeapon(weaponHash As WeaponHash) As Boolean
  overload: GTA.WeaponCollection.HasWeapon*
- uid: GTA.WeaponCollection.HasWeapon(System.String)
  commentId: M:GTA.WeaponCollection.HasWeapon(System.String)
  id: HasWeapon(System.String)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: HasWeapon(string)
  nameWithType: WeaponCollection.HasWeapon(string)
  fullName: GTA.WeaponCollection.HasWeapon(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool HasWeapon(string weaponName)
    parameters:
    - id: weaponName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasWeapon(weaponName As String) As Boolean
  overload: GTA.WeaponCollection.HasWeapon*
  nameWithType.vb: WeaponCollection.HasWeapon(String)
  fullName.vb: GTA.WeaponCollection.HasWeapon(String)
  name.vb: HasWeapon(String)
- uid: GTA.WeaponCollection.IsWeaponValid(GTA.WeaponHash)
  commentId: M:GTA.WeaponCollection.IsWeaponValid(GTA.WeaponHash)
  id: IsWeaponValid(GTA.WeaponHash)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: IsWeaponValid(WeaponHash)
  nameWithType: WeaponCollection.IsWeaponValid(WeaponHash)
  fullName: GTA.WeaponCollection.IsWeaponValid(GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWeaponValid(WeaponHash hash)
    parameters:
    - id: hash
      type: GTA.WeaponHash
    return:
      type: System.Boolean
    content.vb: Public Function IsWeaponValid(hash As WeaponHash) As Boolean
  overload: GTA.WeaponCollection.IsWeaponValid*
- uid: GTA.WeaponCollection.IsWeaponValid(System.String)
  commentId: M:GTA.WeaponCollection.IsWeaponValid(System.String)
  id: IsWeaponValid(System.String)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: IsWeaponValid(string)
  nameWithType: WeaponCollection.IsWeaponValid(string)
  fullName: GTA.WeaponCollection.IsWeaponValid(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWeaponValid(string weaponName)
    parameters:
    - id: weaponName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsWeaponValid(weaponName As String) As Boolean
  overload: GTA.WeaponCollection.IsWeaponValid*
  nameWithType.vb: WeaponCollection.IsWeaponValid(String)
  fullName.vb: GTA.WeaponCollection.IsWeaponValid(String)
  name.vb: IsWeaponValid(String)
- uid: GTA.WeaponCollection.Select(GTA.Weapon)
  commentId: M:GTA.WeaponCollection.Select(GTA.Weapon)
  id: Select(GTA.Weapon)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Select(Weapon)
  nameWithType: WeaponCollection.Select(Weapon)
  fullName: GTA.WeaponCollection.Select(GTA.Weapon)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool Select(Weapon weapon)
    parameters:
    - id: weapon
      type: GTA.Weapon
    return:
      type: System.Boolean
    content.vb: Public Function [Select](weapon As Weapon) As Boolean
  overload: GTA.WeaponCollection.Select*
- uid: GTA.WeaponCollection.Select(GTA.WeaponHash)
  commentId: M:GTA.WeaponCollection.Select(GTA.WeaponHash)
  id: Select(GTA.WeaponHash)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Select(WeaponHash)
  nameWithType: WeaponCollection.Select(WeaponHash)
  fullName: GTA.WeaponCollection.Select(GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool Select(WeaponHash weaponHash)
    parameters:
    - id: weaponHash
      type: GTA.WeaponHash
    return:
      type: System.Boolean
    content.vb: Public Function [Select](weaponHash As WeaponHash) As Boolean
  overload: GTA.WeaponCollection.Select*
- uid: GTA.WeaponCollection.Select(GTA.WeaponHash,System.Boolean)
  commentId: M:GTA.WeaponCollection.Select(GTA.WeaponHash,System.Boolean)
  id: Select(GTA.WeaponHash,System.Boolean)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Select(WeaponHash, bool)
  nameWithType: WeaponCollection.Select(WeaponHash, bool)
  fullName: GTA.WeaponCollection.Select(GTA.WeaponHash, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool Select(WeaponHash weaponHash, bool equipNow)
    parameters:
    - id: weaponHash
      type: GTA.WeaponHash
    - id: equipNow
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function [Select](weaponHash As WeaponHash, equipNow As Boolean) As Boolean
  overload: GTA.WeaponCollection.Select*
  nameWithType.vb: WeaponCollection.Select(WeaponHash, Boolean)
  fullName.vb: GTA.WeaponCollection.Select(GTA.WeaponHash, Boolean)
  name.vb: Select(WeaponHash, Boolean)
- uid: GTA.WeaponCollection.IsWeaponValid(System.String,System.Boolean)
  commentId: M:GTA.WeaponCollection.IsWeaponValid(System.String,System.Boolean)
  id: IsWeaponValid(System.String,System.Boolean)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: IsWeaponValid(string, bool)
  nameWithType: WeaponCollection.IsWeaponValid(string, bool)
  fullName: GTA.WeaponCollection.IsWeaponValid(string, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public bool IsWeaponValid(string weaponName, bool forceInHand)
    parameters:
    - id: weaponName
      type: System.String
    - id: forceInHand
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function IsWeaponValid(weaponName As String, forceInHand As Boolean) As Boolean
  overload: GTA.WeaponCollection.IsWeaponValid*
  nameWithType.vb: WeaponCollection.IsWeaponValid(String, Boolean)
  fullName.vb: GTA.WeaponCollection.IsWeaponValid(String, Boolean)
  name.vb: IsWeaponValid(String, Boolean)
- uid: GTA.WeaponCollection.Give(GTA.WeaponHash,System.Int32,System.Boolean,System.Boolean)
  commentId: M:GTA.WeaponCollection.Give(GTA.WeaponHash,System.Int32,System.Boolean,System.Boolean)
  id: Give(GTA.WeaponHash,System.Int32,System.Boolean,System.Boolean)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Give(WeaponHash, int, bool, bool)
  nameWithType: WeaponCollection.Give(WeaponHash, int, bool, bool)
  fullName: GTA.WeaponCollection.Give(GTA.WeaponHash, int, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon Give(WeaponHash weaponHash, int ammoCount, bool equipNow, bool isAmmoLoaded)
    parameters:
    - id: weaponHash
      type: GTA.WeaponHash
    - id: ammoCount
      type: System.Int32
    - id: equipNow
      type: System.Boolean
    - id: isAmmoLoaded
      type: System.Boolean
    return:
      type: GTA.Weapon
    content.vb: Public Function Give(weaponHash As WeaponHash, ammoCount As Integer, equipNow As Boolean, isAmmoLoaded As Boolean) As Weapon
  overload: GTA.WeaponCollection.Give*
  nameWithType.vb: WeaponCollection.Give(WeaponHash, Integer, Boolean, Boolean)
  fullName.vb: GTA.WeaponCollection.Give(GTA.WeaponHash, Integer, Boolean, Boolean)
  name.vb: Give(WeaponHash, Integer, Boolean, Boolean)
- uid: GTA.WeaponCollection.Give(System.String,System.Int32,System.Boolean,System.Boolean)
  commentId: M:GTA.WeaponCollection.Give(System.String,System.Int32,System.Boolean,System.Boolean)
  id: Give(System.String,System.Int32,System.Boolean,System.Boolean)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Give(string, int, bool, bool)
  nameWithType: WeaponCollection.Give(string, int, bool, bool)
  fullName: GTA.WeaponCollection.Give(string, int, bool, bool)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon Give(string name, int ammoCount, bool equipNow, bool isAmmoLoaded)
    parameters:
    - id: name
      type: System.String
    - id: ammoCount
      type: System.Int32
    - id: equipNow
      type: System.Boolean
    - id: isAmmoLoaded
      type: System.Boolean
    return:
      type: GTA.Weapon
    content.vb: Public Function Give(name As String, ammoCount As Integer, equipNow As Boolean, isAmmoLoaded As Boolean) As Weapon
  overload: GTA.WeaponCollection.Give*
  nameWithType.vb: WeaponCollection.Give(String, Integer, Boolean, Boolean)
  fullName.vb: GTA.WeaponCollection.Give(String, Integer, Boolean, Boolean)
  name.vb: Give(String, Integer, Boolean, Boolean)
- uid: GTA.WeaponCollection.Drop
  commentId: M:GTA.WeaponCollection.Drop
  id: Drop
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Drop()
  nameWithType: WeaponCollection.Drop()
  fullName: GTA.WeaponCollection.Drop()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Drop()
    content.vb: Public Sub Drop()
  overload: GTA.WeaponCollection.Drop*
- uid: GTA.WeaponCollection.Remove(GTA.Weapon)
  commentId: M:GTA.WeaponCollection.Remove(GTA.Weapon)
  id: Remove(GTA.Weapon)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Remove(Weapon)
  nameWithType: WeaponCollection.Remove(Weapon)
  fullName: GTA.WeaponCollection.Remove(GTA.Weapon)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Remove(Weapon weapon)
    parameters:
    - id: weapon
      type: GTA.Weapon
    content.vb: Public Sub Remove(weapon As Weapon)
  overload: GTA.WeaponCollection.Remove*
- uid: GTA.WeaponCollection.Remove(GTA.WeaponHash)
  commentId: M:GTA.WeaponCollection.Remove(GTA.WeaponHash)
  id: Remove(GTA.WeaponHash)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Remove(WeaponHash)
  nameWithType: WeaponCollection.Remove(WeaponHash)
  fullName: GTA.WeaponCollection.Remove(GTA.WeaponHash)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Remove(WeaponHash weaponHash)
    parameters:
    - id: weaponHash
      type: GTA.WeaponHash
    content.vb: Public Sub Remove(weaponHash As WeaponHash)
  overload: GTA.WeaponCollection.Remove*
- uid: GTA.WeaponCollection.Remove(System.String)
  commentId: M:GTA.WeaponCollection.Remove(System.String)
  id: Remove(System.String)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: WeaponCollection.Remove(string)
  fullName: GTA.WeaponCollection.Remove(string)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void Remove(string weaponName)
    parameters:
    - id: weaponName
      type: System.String
    content.vb: Public Sub Remove(weaponName As String)
  overload: GTA.WeaponCollection.Remove*
  nameWithType.vb: WeaponCollection.Remove(String)
  fullName.vb: GTA.WeaponCollection.Remove(String)
  name.vb: Remove(String)
- uid: GTA.WeaponCollection.RemoveAll
  commentId: M:GTA.WeaponCollection.RemoveAll
  id: RemoveAll
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: RemoveAll()
  nameWithType: WeaponCollection.RemoveAll()
  fullName: GTA.WeaponCollection.RemoveAll()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public void RemoveAll()
    content.vb: Public Sub RemoveAll()
  overload: GTA.WeaponCollection.RemoveAll*
- uid: GTA.WeaponCollection.Item(GTA.WeaponHash)
  commentId: P:GTA.WeaponCollection.Item(GTA.WeaponHash)
  id: Item(GTA.WeaponHash)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: this[WeaponHash]
  nameWithType: WeaponCollection.this[WeaponHash]
  fullName: GTA.WeaponCollection.this[GTA.WeaponHash]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon this[WeaponHash hash] { get; }
    parameters:
    - id: hash
      type: GTA.WeaponHash
    return:
      type: GTA.Weapon
    content.vb: Public ReadOnly Default Property this[](hash As WeaponHash) As Weapon
  overload: GTA.WeaponCollection.Item*
  nameWithType.vb: WeaponCollection.this[](WeaponHash)
  fullName.vb: GTA.WeaponCollection.this[](GTA.WeaponHash)
  name.vb: this[](WeaponHash)
- uid: GTA.WeaponCollection.Item(System.String)
  commentId: P:GTA.WeaponCollection.Item(System.String)
  id: Item(System.String)
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: WeaponCollection.this[string]
  fullName: GTA.WeaponCollection.this[string]
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon this[string weaponName] { get; }
    parameters:
    - id: weaponName
      type: System.String
    return:
      type: GTA.Weapon
    content.vb: Public ReadOnly Default Property this[](weaponName As String) As Weapon
  overload: GTA.WeaponCollection.Item*
  nameWithType.vb: WeaponCollection.this[](String)
  fullName.vb: GTA.WeaponCollection.this[](String)
  name.vb: this[](String)
- uid: GTA.WeaponCollection.Count
  commentId: P:GTA.WeaponCollection.Count
  id: Count
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: WeaponCollection.Count
  fullName: GTA.WeaponCollection.Count
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: GTA.WeaponCollection.Count*
- uid: GTA.WeaponCollection.Current
  commentId: P:GTA.WeaponCollection.Current
  id: Current
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: WeaponCollection.Current
  fullName: GTA.WeaponCollection.Current
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon Current { get; }
    parameters: []
    return:
      type: GTA.Weapon
    content.vb: Public ReadOnly Property Current As Weapon
  overload: GTA.WeaponCollection.Current*
- uid: GTA.WeaponCollection.BestWeapon
  commentId: P:GTA.WeaponCollection.BestWeapon
  id: BestWeapon
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: BestWeapon
  nameWithType: WeaponCollection.BestWeapon
  fullName: GTA.WeaponCollection.BestWeapon
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Weapon BestWeapon { get; }
    parameters: []
    return:
      type: GTA.Weapon
    content.vb: Public ReadOnly Property BestWeapon As Weapon
  overload: GTA.WeaponCollection.BestWeapon*
- uid: GTA.WeaponCollection.CurrentWeaponObject
  commentId: P:GTA.WeaponCollection.CurrentWeaponObject
  id: CurrentWeaponObject
  parent: GTA.WeaponCollection
  langs:
  - csharp
  - vb
  name: CurrentWeaponObject
  nameWithType: WeaponCollection.CurrentWeaponObject
  fullName: GTA.WeaponCollection.CurrentWeaponObject
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Prop CurrentWeaponObject { get; }
    parameters: []
    return:
      type: GTA.Prop
    content.vb: Public ReadOnly Property CurrentWeaponObject As Prop
  overload: GTA.WeaponCollection.CurrentWeaponObject*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{GTA.Weapon}
  commentId: T:System.Collections.Generic.IEnumerable{GTA.Weapon}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Weapon>
  nameWithType: IEnumerable<Weapon>
  fullName: System.Collections.Generic.IEnumerable<GTA.Weapon>
  nameWithType.vb: IEnumerable(Of Weapon)
  fullName.vb: System.Collections.Generic.IEnumerable(Of GTA.Weapon)
  name.vb: IEnumerable(Of Weapon)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: GTA.Weapon
    name: Weapon
    isExternal: true
    href: GTA.Weapon.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: GTA.Weapon
    name: Weapon
    isExternal: true
    href: GTA.Weapon.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: GTA.WeaponCollection.GetEnumerator*
  commentId: Overload:GTA.WeaponCollection.GetEnumerator
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: WeaponCollection.GetEnumerator
  fullName: GTA.WeaponCollection.GetEnumerator
- uid: GTA.WeaponCollection.Enumerator
  commentId: T:GTA.WeaponCollection.Enumerator
  parent: GTA
  isExternal: true
  href: GTA.WeaponCollection.html
  name: WeaponCollection.Enumerator
  nameWithType: WeaponCollection.Enumerator
  fullName: GTA.WeaponCollection.Enumerator
  spec.csharp:
  - uid: GTA.WeaponCollection
    name: WeaponCollection
    isExternal: true
    href: GTA.WeaponCollection.html
  - name: .
  - uid: GTA.WeaponCollection.Enumerator
    name: Enumerator
    isExternal: true
    href: GTA.WeaponCollection.Enumerator.html
  spec.vb:
  - uid: GTA.WeaponCollection
    name: WeaponCollection
    isExternal: true
    href: GTA.WeaponCollection.html
  - name: .
  - uid: GTA.WeaponCollection.Enumerator
    name: Enumerator
    isExternal: true
    href: GTA.WeaponCollection.Enumerator.html
- uid: GTA.WeaponCollection.GetAllWeaponHashes*
  commentId: Overload:GTA.WeaponCollection.GetAllWeaponHashes
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_GetAllWeaponHashes
  name: GetAllWeaponHashes
  nameWithType: WeaponCollection.GetAllWeaponHashes
  fullName: GTA.WeaponCollection.GetAllWeaponHashes
- uid: GTA.WeaponHash[]
  isExternal: true
  href: GTA.WeaponHash.html
  name: WeaponHash[]
  nameWithType: WeaponHash[]
  fullName: GTA.WeaponHash[]
  nameWithType.vb: WeaponHash()
  fullName.vb: GTA.WeaponHash()
  name.vb: WeaponHash()
  spec.csharp:
  - uid: GTA.WeaponHash
    name: WeaponHash
    isExternal: true
    href: GTA.WeaponHash.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: GTA.WeaponHash
    name: WeaponHash
    isExternal: true
    href: GTA.WeaponHash.html
  - name: (
  - name: )
- uid: GTA.WeaponCollection.TryGetWeaponHashBySlotHash*
  commentId: Overload:GTA.WeaponCollection.TryGetWeaponHashBySlotHash
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_TryGetWeaponHashBySlotHash_System_Int32_GTA_WeaponHash__
  name: TryGetWeaponHashBySlotHash
  nameWithType: WeaponCollection.TryGetWeaponHashBySlotHash
  fullName: GTA.WeaponCollection.TryGetWeaponHashBySlotHash
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.WeaponHash
  commentId: T:GTA.WeaponHash
  parent: GTA
  isExternal: true
  href: GTA.WeaponHash.html
  name: WeaponHash
  nameWithType: WeaponHash
  fullName: GTA.WeaponHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GTA.WeaponCollection.TryGetWeaponBySlotHash*
  commentId: Overload:GTA.WeaponCollection.TryGetWeaponBySlotHash
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_TryGetWeaponBySlotHash_System_Int32_GTA_Weapon__
  name: TryGetWeaponBySlotHash
  nameWithType: WeaponCollection.TryGetWeaponBySlotHash
  fullName: GTA.WeaponCollection.TryGetWeaponBySlotHash
- uid: GTA.Weapon
  commentId: T:GTA.Weapon
  parent: GTA
  isExternal: true
  href: GTA.Weapon.html
  name: Weapon
  nameWithType: Weapon
  fullName: GTA.Weapon
- uid: GTA.WeaponCollection.HasWeapon*
  commentId: Overload:GTA.WeaponCollection.HasWeapon
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_HasWeapon_GTA_WeaponHash_
  name: HasWeapon
  nameWithType: WeaponCollection.HasWeapon
  fullName: GTA.WeaponCollection.HasWeapon
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: GTA.WeaponCollection.IsWeaponValid*
  commentId: Overload:GTA.WeaponCollection.IsWeaponValid
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_IsWeaponValid_GTA_WeaponHash_
  name: IsWeaponValid
  nameWithType: WeaponCollection.IsWeaponValid
  fullName: GTA.WeaponCollection.IsWeaponValid
- uid: GTA.WeaponCollection.Select*
  commentId: Overload:GTA.WeaponCollection.Select
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Select_GTA_Weapon_
  name: Select
  nameWithType: WeaponCollection.Select
  fullName: GTA.WeaponCollection.Select
- uid: GTA.WeaponCollection.Give*
  commentId: Overload:GTA.WeaponCollection.Give
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Give_GTA_WeaponHash_System_Int32_System_Boolean_System_Boolean_
  name: Give
  nameWithType: WeaponCollection.Give
  fullName: GTA.WeaponCollection.Give
- uid: GTA.WeaponCollection.Drop*
  commentId: Overload:GTA.WeaponCollection.Drop
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Drop
  name: Drop
  nameWithType: WeaponCollection.Drop
  fullName: GTA.WeaponCollection.Drop
- uid: GTA.WeaponCollection.Remove*
  commentId: Overload:GTA.WeaponCollection.Remove
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Remove_GTA_Weapon_
  name: Remove
  nameWithType: WeaponCollection.Remove
  fullName: GTA.WeaponCollection.Remove
- uid: GTA.WeaponCollection.RemoveAll*
  commentId: Overload:GTA.WeaponCollection.RemoveAll
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_RemoveAll
  name: RemoveAll
  nameWithType: WeaponCollection.RemoveAll
  fullName: GTA.WeaponCollection.RemoveAll
- uid: GTA.WeaponCollection.Item*
  commentId: Overload:GTA.WeaponCollection.Item
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Item_GTA_WeaponHash_
  name: this
  nameWithType: WeaponCollection.this
  fullName: GTA.WeaponCollection.this
  nameWithType.vb: WeaponCollection.this[]
  fullName.vb: GTA.WeaponCollection.this[]
  name.vb: this[]
- uid: GTA.WeaponCollection.Count*
  commentId: Overload:GTA.WeaponCollection.Count
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Count
  name: Count
  nameWithType: WeaponCollection.Count
  fullName: GTA.WeaponCollection.Count
- uid: GTA.WeaponCollection.Current*
  commentId: Overload:GTA.WeaponCollection.Current
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_Current
  name: Current
  nameWithType: WeaponCollection.Current
  fullName: GTA.WeaponCollection.Current
- uid: GTA.WeaponCollection.BestWeapon*
  commentId: Overload:GTA.WeaponCollection.BestWeapon
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_BestWeapon
  name: BestWeapon
  nameWithType: WeaponCollection.BestWeapon
  fullName: GTA.WeaponCollection.BestWeapon
- uid: GTA.WeaponCollection.CurrentWeaponObject*
  commentId: Overload:GTA.WeaponCollection.CurrentWeaponObject
  isExternal: true
  href: GTA.WeaponCollection.html#GTA_WeaponCollection_CurrentWeaponObject
  name: CurrentWeaponObject
  nameWithType: WeaponCollection.CurrentWeaponObject
  fullName: GTA.WeaponCollection.CurrentWeaponObject
- uid: GTA.Prop
  commentId: T:GTA.Prop
  parent: GTA
  isExternal: true
  href: GTA.Prop.html
  name: Prop
  nameWithType: Prop
  fullName: GTA.Prop
