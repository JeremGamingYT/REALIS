### YamlMime:ManagedReference
items:
- uid: GTA.InteriorInstance
  commentId: T:GTA.InteriorInstance
  id: InteriorInstance
  parent: GTA
  children:
  - GTA.InteriorInstance.Equals(System.Object)
  - GTA.InteriorInstance.Exists
  - GTA.InteriorInstance.FromHandle(System.Int32)
  - GTA.InteriorInstance.GetHashCode
  - GTA.InteriorInstance.Handle
  - GTA.InteriorInstance.InteriorProxy
  - GTA.InteriorInstance.Matrix
  - GTA.InteriorInstance.MemoryAddress
  - GTA.InteriorInstance.Model
  - GTA.InteriorInstance.Position
  - GTA.InteriorInstance.Quaternion
  - GTA.InteriorInstance.Rotation
  - GTA.InteriorInstance.op_Equality(GTA.InteriorInstance,GTA.InteriorInstance)
  - GTA.InteriorInstance.op_Inequality(GTA.InteriorInstance,GTA.InteriorInstance)
  langs:
  - csharp
  - vb
  name: InteriorInstance
  nameWithType: InteriorInstance
  fullName: GTA.InteriorInstance
  type: Class
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: 'public sealed class InteriorInstance : IExistable'
    content.vb: Public NotInheritable Class InteriorInstance Implements IExistable
  inheritance:
  - System.Object
  implements:
  - GTA.IExistable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: GTA.InteriorInstance.FromHandle(System.Int32)
  commentId: M:GTA.InteriorInstance.FromHandle(System.Int32)
  id: FromHandle(System.Int32)
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: FromHandle(int)
  nameWithType: InteriorInstance.FromHandle(int)
  fullName: GTA.InteriorInstance.FromHandle(int)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static InteriorInstance FromHandle(int handle)
    parameters:
    - id: handle
      type: System.Int32
    return:
      type: GTA.InteriorInstance
    content.vb: Public Shared Function FromHandle(handle As Integer) As InteriorInstance
  overload: GTA.InteriorInstance.FromHandle*
  nameWithType.vb: InteriorInstance.FromHandle(Integer)
  fullName.vb: GTA.InteriorInstance.FromHandle(Integer)
  name.vb: FromHandle(Integer)
- uid: GTA.InteriorInstance.Exists
  commentId: M:GTA.InteriorInstance.Exists
  id: Exists
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Exists()
  nameWithType: InteriorInstance.Exists()
  fullName: GTA.InteriorInstance.Exists()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public bool Exists()
    return:
      type: System.Boolean
    content.vb: Public Function Exists() As Boolean
  overload: GTA.InteriorInstance.Exists*
  implements:
  - GTA.IExistable.Exists
- uid: GTA.InteriorInstance.Equals(System.Object)
  commentId: M:GTA.InteriorInstance.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: InteriorInstance.Equals(object)
  fullName: GTA.InteriorInstance.Equals(object)
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTA.InteriorInstance.Equals*
  nameWithType.vb: InteriorInstance.Equals(Object)
  fullName.vb: GTA.InteriorInstance.Equals(Object)
  name.vb: Equals(Object)
- uid: GTA.InteriorInstance.op_Equality(GTA.InteriorInstance,GTA.InteriorInstance)
  commentId: M:GTA.InteriorInstance.op_Equality(GTA.InteriorInstance,GTA.InteriorInstance)
  id: op_Equality(GTA.InteriorInstance,GTA.InteriorInstance)
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: operator ==(InteriorInstance, InteriorInstance)
  nameWithType: InteriorInstance.operator ==(InteriorInstance, InteriorInstance)
  fullName: GTA.InteriorInstance.operator ==(GTA.InteriorInstance, GTA.InteriorInstance)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator ==(InteriorInstance left, InteriorInstance right)
    parameters:
    - id: left
      type: GTA.InteriorInstance
    - id: right
      type: GTA.InteriorInstance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As InteriorInstance, right As InteriorInstance) As Boolean
  overload: GTA.InteriorInstance.op_Equality*
  nameWithType.vb: InteriorInstance.=(InteriorInstance, InteriorInstance)
  fullName.vb: GTA.InteriorInstance.=(GTA.InteriorInstance, GTA.InteriorInstance)
  name.vb: =(InteriorInstance, InteriorInstance)
- uid: GTA.InteriorInstance.op_Inequality(GTA.InteriorInstance,GTA.InteriorInstance)
  commentId: M:GTA.InteriorInstance.op_Inequality(GTA.InteriorInstance,GTA.InteriorInstance)
  id: op_Inequality(GTA.InteriorInstance,GTA.InteriorInstance)
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: operator !=(InteriorInstance, InteriorInstance)
  nameWithType: InteriorInstance.operator !=(InteriorInstance, InteriorInstance)
  fullName: GTA.InteriorInstance.operator !=(GTA.InteriorInstance, GTA.InteriorInstance)
  type: Operator
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public static bool operator !=(InteriorInstance left, InteriorInstance right)
    parameters:
    - id: left
      type: GTA.InteriorInstance
    - id: right
      type: GTA.InteriorInstance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As InteriorInstance, right As InteriorInstance) As Boolean
  overload: GTA.InteriorInstance.op_Inequality*
  nameWithType.vb: InteriorInstance.<>(InteriorInstance, InteriorInstance)
  fullName.vb: GTA.InteriorInstance.<>(GTA.InteriorInstance, GTA.InteriorInstance)
  name.vb: <>(InteriorInstance, InteriorInstance)
- uid: GTA.InteriorInstance.GetHashCode
  commentId: M:GTA.InteriorInstance.GetHashCode
  id: GetHashCode
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: InteriorInstance.GetHashCode()
  fullName: GTA.InteriorInstance.GetHashCode()
  type: Method
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: GTA.InteriorInstance.GetHashCode*
- uid: GTA.InteriorInstance.Handle
  commentId: P:GTA.InteriorInstance.Handle
  id: Handle
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: InteriorInstance.Handle
  fullName: GTA.InteriorInstance.Handle
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public int Handle { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Handle As Integer
  overload: GTA.InteriorInstance.Handle*
- uid: GTA.InteriorInstance.MemoryAddress
  commentId: P:GTA.InteriorInstance.MemoryAddress
  id: MemoryAddress
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: MemoryAddress
  nameWithType: InteriorInstance.MemoryAddress
  fullName: GTA.InteriorInstance.MemoryAddress
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public IntPtr MemoryAddress { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property MemoryAddress As IntPtr
  overload: GTA.InteriorInstance.MemoryAddress*
- uid: GTA.InteriorInstance.Model
  commentId: P:GTA.InteriorInstance.Model
  id: Model
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: InteriorInstance.Model
  fullName: GTA.InteriorInstance.Model
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Model Model { get; }
    parameters: []
    return:
      type: GTA.Model
    content.vb: Public ReadOnly Property Model As Model
  overload: GTA.InteriorInstance.Model*
- uid: GTA.InteriorInstance.Matrix
  commentId: P:GTA.InteriorInstance.Matrix
  id: Matrix
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: InteriorInstance.Matrix
  fullName: GTA.InteriorInstance.Matrix
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Matrix Matrix { get; }
    parameters: []
    return:
      type: GTA.Math.Matrix
    content.vb: Public ReadOnly Property Matrix As Matrix
  overload: GTA.InteriorInstance.Matrix*
- uid: GTA.InteriorInstance.Rotation
  commentId: P:GTA.InteriorInstance.Rotation
  id: Rotation
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: InteriorInstance.Rotation
  fullName: GTA.InteriorInstance.Rotation
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Rotation { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Rotation As Vector3
  overload: GTA.InteriorInstance.Rotation*
- uid: GTA.InteriorInstance.Quaternion
  commentId: P:GTA.InteriorInstance.Quaternion
  id: Quaternion
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: InteriorInstance.Quaternion
  fullName: GTA.InteriorInstance.Quaternion
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Quaternion Quaternion { get; }
    parameters: []
    return:
      type: GTA.Math.Quaternion
    content.vb: Public ReadOnly Property Quaternion As Quaternion
  overload: GTA.InteriorInstance.Quaternion*
- uid: GTA.InteriorInstance.Position
  commentId: P:GTA.InteriorInstance.Position
  id: Position
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: InteriorInstance.Position
  fullName: GTA.InteriorInstance.Position
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public Vector3 Position { get; }
    parameters: []
    return:
      type: GTA.Math.Vector3
    content.vb: Public ReadOnly Property Position As Vector3
  overload: GTA.InteriorInstance.Position*
- uid: GTA.InteriorInstance.InteriorProxy
  commentId: P:GTA.InteriorInstance.InteriorProxy
  id: InteriorProxy
  parent: GTA.InteriorInstance
  langs:
  - csharp
  - vb
  name: InteriorProxy
  nameWithType: InteriorInstance.InteriorProxy
  fullName: GTA.InteriorInstance.InteriorProxy
  type: Property
  assemblies:
  - ScriptHookVDotNet3
  namespace: GTA
  syntax:
    content: public InteriorProxy InteriorProxy { get; }
    parameters: []
    return:
      type: GTA.InteriorProxy
    content.vb: Public ReadOnly Property InteriorProxy As InteriorProxy
  overload: GTA.InteriorInstance.InteriorProxy*
references:
- uid: GTA
  commentId: N:GTA
  isExternal: true
  href: GTA.html
  name: GTA
  nameWithType: GTA
  fullName: GTA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: GTA.IExistable
  commentId: T:GTA.IExistable
  parent: GTA
  isExternal: true
  href: GTA.IExistable.html
  name: IExistable
  nameWithType: IExistable
  fullName: GTA.IExistable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GTA.InteriorInstance.FromHandle*
  commentId: Overload:GTA.InteriorInstance.FromHandle
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_FromHandle_System_Int32_
  name: FromHandle
  nameWithType: InteriorInstance.FromHandle
  fullName: GTA.InteriorInstance.FromHandle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: GTA.InteriorInstance
  commentId: T:GTA.InteriorInstance
  parent: GTA
  isExternal: true
  href: GTA.InteriorInstance.html
  name: InteriorInstance
  nameWithType: InteriorInstance
  fullName: GTA.InteriorInstance
- uid: GTA.InteriorInstance.Exists*
  commentId: Overload:GTA.InteriorInstance.Exists
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Exists
  name: Exists
  nameWithType: InteriorInstance.Exists
  fullName: GTA.InteriorInstance.Exists
- uid: GTA.IExistable.Exists
  commentId: M:GTA.IExistable.Exists
  parent: GTA.IExistable
  isExternal: true
  href: GTA.IExistable.html#GTA_IExistable_Exists
  name: Exists()
  nameWithType: IExistable.Exists()
  fullName: GTA.IExistable.Exists()
  spec.csharp:
  - uid: GTA.IExistable.Exists
    name: Exists
    isExternal: true
    href: GTA.IExistable.html#GTA_IExistable_Exists
  - name: (
  - name: )
  spec.vb:
  - uid: GTA.IExistable.Exists
    name: Exists
    isExternal: true
    href: GTA.IExistable.html#GTA_IExistable_Exists
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: GTA.InteriorInstance.Equals*
  commentId: Overload:GTA.InteriorInstance.Equals
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Equals_System_Object_
  name: Equals
  nameWithType: InteriorInstance.Equals
  fullName: GTA.InteriorInstance.Equals
- uid: GTA.InteriorInstance.op_Equality*
  commentId: Overload:GTA.InteriorInstance.op_Equality
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_op_Equality_GTA_InteriorInstance_GTA_InteriorInstance_
  name: operator ==
  nameWithType: InteriorInstance.operator ==
  fullName: GTA.InteriorInstance.operator ==
  nameWithType.vb: InteriorInstance.=
  fullName.vb: GTA.InteriorInstance.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.InteriorInstance.op_Equality*
    name: ==
    isExternal: true
    href: GTA.InteriorInstance.html#GTA_InteriorInstance_op_Equality_GTA_InteriorInstance_GTA_InteriorInstance_
- uid: GTA.InteriorInstance.op_Inequality*
  commentId: Overload:GTA.InteriorInstance.op_Inequality
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_op_Inequality_GTA_InteriorInstance_GTA_InteriorInstance_
  name: operator !=
  nameWithType: InteriorInstance.operator !=
  fullName: GTA.InteriorInstance.operator !=
  nameWithType.vb: InteriorInstance.<>
  fullName.vb: GTA.InteriorInstance.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: GTA.InteriorInstance.op_Inequality*
    name: '!='
    isExternal: true
    href: GTA.InteriorInstance.html#GTA_InteriorInstance_op_Inequality_GTA_InteriorInstance_GTA_InteriorInstance_
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: GTA.InteriorInstance.GetHashCode*
  commentId: Overload:GTA.InteriorInstance.GetHashCode
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_GetHashCode
  name: GetHashCode
  nameWithType: InteriorInstance.GetHashCode
  fullName: GTA.InteriorInstance.GetHashCode
- uid: GTA.InteriorInstance.Handle*
  commentId: Overload:GTA.InteriorInstance.Handle
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Handle
  name: Handle
  nameWithType: InteriorInstance.Handle
  fullName: GTA.InteriorInstance.Handle
- uid: GTA.InteriorInstance.MemoryAddress*
  commentId: Overload:GTA.InteriorInstance.MemoryAddress
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_MemoryAddress
  name: MemoryAddress
  nameWithType: InteriorInstance.MemoryAddress
  fullName: GTA.InteriorInstance.MemoryAddress
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: GTA.InteriorInstance.Model*
  commentId: Overload:GTA.InteriorInstance.Model
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Model
  name: Model
  nameWithType: InteriorInstance.Model
  fullName: GTA.InteriorInstance.Model
- uid: GTA.Model
  commentId: T:GTA.Model
  parent: GTA
  isExternal: true
  href: GTA.Model.html
  name: Model
  nameWithType: Model
  fullName: GTA.Model
- uid: GTA.InteriorInstance.Matrix*
  commentId: Overload:GTA.InteriorInstance.Matrix
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Matrix
  name: Matrix
  nameWithType: InteriorInstance.Matrix
  fullName: GTA.InteriorInstance.Matrix
- uid: GTA.Math.Matrix
  commentId: T:GTA.Math.Matrix
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Matrix.html
  name: Matrix
  nameWithType: Matrix
  fullName: GTA.Math.Matrix
- uid: GTA.Math
  commentId: N:GTA.Math
  isExternal: true
  href: GTA.html
  name: GTA.Math
  nameWithType: GTA.Math
  fullName: GTA.Math
  spec.csharp:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
  spec.vb:
  - uid: GTA
    name: GTA
    isExternal: true
    href: GTA.html
  - name: .
  - uid: GTA.Math
    name: Math
    isExternal: true
    href: GTA.Math.html
- uid: GTA.InteriorInstance.Rotation*
  commentId: Overload:GTA.InteriorInstance.Rotation
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Rotation
  name: Rotation
  nameWithType: InteriorInstance.Rotation
  fullName: GTA.InteriorInstance.Rotation
- uid: GTA.Math.Vector3
  commentId: T:GTA.Math.Vector3
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: GTA.Math.Vector3
- uid: GTA.InteriorInstance.Quaternion*
  commentId: Overload:GTA.InteriorInstance.Quaternion
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Quaternion
  name: Quaternion
  nameWithType: InteriorInstance.Quaternion
  fullName: GTA.InteriorInstance.Quaternion
- uid: GTA.Math.Quaternion
  commentId: T:GTA.Math.Quaternion
  parent: GTA.Math
  isExternal: true
  href: GTA.Math.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: GTA.Math.Quaternion
- uid: GTA.InteriorInstance.Position*
  commentId: Overload:GTA.InteriorInstance.Position
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_Position
  name: Position
  nameWithType: InteriorInstance.Position
  fullName: GTA.InteriorInstance.Position
- uid: GTA.InteriorInstance.InteriorProxy*
  commentId: Overload:GTA.InteriorInstance.InteriorProxy
  isExternal: true
  href: GTA.InteriorInstance.html#GTA_InteriorInstance_InteriorProxy
  name: InteriorProxy
  nameWithType: InteriorInstance.InteriorProxy
  fullName: GTA.InteriorInstance.InteriorProxy
- uid: GTA.InteriorProxy
  commentId: T:GTA.InteriorProxy
  parent: GTA
  isExternal: true
  href: GTA.InteriorProxy.html
  name: InteriorProxy
  nameWithType: InteriorProxy
  fullName: GTA.InteriorProxy
